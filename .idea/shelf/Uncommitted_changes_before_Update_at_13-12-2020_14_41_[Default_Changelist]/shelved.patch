Index: app/src/main/java/com/example/itifighter/PreviousPaper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class PreviousPaper extends Fragment {\r\n\r\n\r\n    private int currentLayer = 0;\r\n    private int currentSubjectPos = 0, currentExamPos = 0;  //records which item was clicked in previous list\r\n    private ArrayList<CustomListItem> Subjects, Exams;\r\n    private ListView listView;\r\n    private ArrayList<String> PdfS, pdfFile, SubjectIds, ExamIds;\r\n    private ArrayList<CustomListItem> PdfS_CL;\r\n    private FirebaseFirestore db;\r\n    private ProgressDialog dialog;\r\n    private Context mContext;\r\n    private ImageButton back;\r\n    private ArrayAdapter adapter;\r\n\r\n    public PreviousPaper() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n\r\n    public void CustomBackButton(){\r\n\r\n        switch (currentLayer){\r\n            case 1: LoadSubjects();\r\n            break;\r\n            case 2: LoadExams();\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);\r\n        //this.spinner = R.layout.fragment_previous_paper.findViewById(R.id.progressBar1);\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        listView = ppView.findViewById(R.id.branch_list);\r\n        back = ppView.findViewById(R.id.CustomBackButtonPP);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        back.setVisibility(View.INVISIBLE);\r\n        CustomizeView();\r\n        return ppView;\r\n    }\r\n\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        SubjectIds.add(document.getId());\r\n                        Subjects.add(new CustomListItem(document.getString(/*\"Name\"*/\"name\"),\r\n                                        document.getString(/*\"description\"*/\"desc\"), \"pp\"));\r\n                    }\r\n\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    /*listView = (ListView) _ppView.findViewById(R.id.branch_list);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubjectPos = position;\r\n                            LoadExams();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadExams(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").document(SubjectIds.get(currentSubjectPos)).collection(\"exam\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    /*examList = new ArrayList<>();*/\r\n                    Exams = new ArrayList<>();\r\n                    ExamIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        /*examList.add(document.getString(\"Name\"));*/\r\n                        ExamIds.add(document.getId());\r\n                                            Exams.add(new CustomListItem(document.getString(\"name\"),\r\n                                        document.getString(\"desc\"), \"pp/chapter\"));\r\n                    }\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentExamPos = position;\r\n                            LoadPdfS();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadExams();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadPdfS(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch/\"+SubjectIds.get(currentSubjectPos)+\"/exam\").document(/*\"00\"+(currentExamPos+1)*/ExamIds.get(currentExamPos)).collection(\"pdf\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    PdfS = new ArrayList<>();\r\n                    PdfS_CL = new ArrayList<>();\r\n                    pdfFile = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        PdfS.add(document.getId());\r\n                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString(\"price\"))),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"discount\")))));\r\n                        pdfFile.add(\"\"+document.getString(\"Name\"));\r\n                    }\r\n                    adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);\r\n                    /*adapter = new ArrayAdapter<>(mContext,\r\n                            R.layout.activity__branch_list_view, PdfS);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            Intent intent = new Intent(mContext, LoadPdf.class);\r\n                            intent.putExtra(\"pdf\", pdfFile.get(position));\r\n                            startActivity(intent);\r\n                        }\r\n\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadPdfS();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n   private void CustomizeView() {\r\n        LoadSubjects();\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/PreviousPaper.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/java/com/example/itifighter/PreviousPaper.java	(date 1607844990366)
@@ -18,6 +18,8 @@
 
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.firestore.DocumentSnapshot;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.QueryDocumentSnapshot;
 import com.google.firebase.firestore.QuerySnapshot;
@@ -31,6 +33,7 @@
 
 
     private int currentLayer = 0;
+    private String currentPdf = "";
     private int currentSubjectPos = 0, currentExamPos = 0;  //records which item was clicked in previous list
     private ArrayList<CustomListItem> Subjects, Exams;
     private ListView listView;
@@ -175,17 +178,14 @@
                         pdfFile.add(""+document.getString("Name"));
                     }
                     adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);
-                    /*adapter = new ArrayAdapter<>(mContext,
-                            R.layout.activity__branch_list_view, PdfS);*/
                     listView.setAdapter(adapter);
                     dialog.dismiss();
                     listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                         @Override
                         public void onItemClick(AdapterView<?> parent, View view,
                                                 int position, long id) {
-                            Intent intent = new Intent(mContext, LoadPdf.class);
-                            intent.putExtra("pdf", pdfFile.get(position));
-                            startActivity(intent);
+                            if(paymentNotRequired(position))OpenPdf(position);
+
                         }
 
                     });
@@ -197,8 +197,42 @@
         });
     }
 
+    private boolean paymentNotRequired(final int position) {
+        String Uid = FirebaseAuth.getInstance().getUid();
+        assert Uid != null;
+        boolean validate = true;
+        FirebaseFirestore.getInstance().collection("users").document(Uid).collection("Products")
+                .document("pp").collection("ProductId").document(PdfS.get(position))
+                .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
+            @Override
+            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
+                if(task.isSuccessful()){
+                    DocumentSnapshot documentSnapshot = task.getResult();
+                    if(documentSnapshot!=null && documentSnapshot.exists()){currentPdf = PdfS.get(position);}
+                    else{
+                        Intent intent = new Intent(getContext(), PaytmPayment.class);
+                        intent.putExtra("price",PdfS_CL.get(position).getPrice());
+                        intent.putExtra("discount",PdfS_CL.get(position).getDiscount());
+                        intent.putExtra("titleName",pdfFile.get(position));
+                        intent.putExtra("curruntPdf",currentPdf);
+                        intent.putExtra("currentSubject",SubjectIds.get(currentSubjectPos));
+                        intent.putExtra("currentChapter",ExamIds.get(currentExamPos));
+                        mContext.startActivity(intent);
+                    }
+                }
+            }
+        });
+        return  true;
+    }
+
+    private void OpenPdf(int position) {
+        Intent intent = new Intent(mContext, LoadPdf.class);
+        intent.putExtra("pdf", pdfFile.get(position));
+        startActivity(intent);
+    }
+
 
-   private void CustomizeView() {
+    private void CustomizeView() {
         LoadSubjects();
     }
 
Index: app/src/main/res/layout/activity_live_test_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".LiveTestHomeActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"100\">\r\n        <ScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"100\">\r\n            <LinearLayout\r\n                android:id=\"@+id/LiveTestList\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_width=\"match_parent\"\r\n                android:orientation=\"vertical\"/>\r\n        </ScrollView>\r\n    </LinearLayout>\r\n\r\n    <include layout=\"@layout/include_progress_overlay\"/>\r\n</RelativeLayout>\r\n\r\n<!--\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".LiveTestHomeActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"110\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_weight=\"35\"\r\n            android:layout_height=\"0dp\">\r\n            <TextView\r\n                android:id=\"@+id/LiveTestTitle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Live Test Begins At:\"\r\n                android:paddingVertical=\"35dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:textSize=\"25sp\"/>\r\n            <TextView\r\n                android:id=\"@+id/countdown\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"35sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:text=\"00:00:00\"/>\r\n        </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/startTestBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginVertical=\"15dp\"\r\n            android:visibility=\"invisible\"\r\n            android:paddingHorizontal=\"65sp\"\r\n            android:textSize=\"25sp\"\r\n            android:layout_weight=\"10\"\r\n            android:text=\"Start Test\" />\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"10\"\r\n            android:weightSum=\"2\"\r\n            android:orientation=\"horizontal\">\r\n            <Button\r\n                android:id=\"@+id/BtnPrevList\"\r\n                android:layout_width=\"0dp\"\r\n                android:gravity=\"center\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Previous Tests\"/>\r\n            <Button\r\n                android:id=\"@+id/BtnFutureList\"\r\n                android:layout_width=\"0dp\"\r\n                android:gravity=\"center\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Upcoming Tests\"/>\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_weight=\"55\">\r\n            <ListView\r\n                android:id=\"@+id/lt_prev_list\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:divider=\"@color/list_divider\"\r\n                android:visibility=\"invisible\"\r\n                android:dividerHeight=\"1dp\"\r\n                android:listSelector=\"@drawable/list_row_selector\">\r\n            </ListView>\r\n            <ListView\r\n                android:id=\"@+id/lt_future_list\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:divider=\"@color/list_divider\"\r\n                android:dividerHeight=\"1dp\"\r\n                android:listSelector=\"@drawable/list_row_selector\">\r\n            </ListView>\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n    <include layout=\"@layout/include_progress_overlay\"/>\r\n</RelativeLayout>-->
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_live_test_home.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/res/layout/activity_live_test_home.xml	(date 1607794764691)
@@ -1,126 +1,45 @@
 <?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:orientation="vertical"
-    tools:context=".LiveTestHomeActivity">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:weightSum="100">
-        <ScrollView
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="100">
-            <LinearLayout
-                android:id="@+id/LiveTestList"
-                android:layout_height="wrap_content"
-                android:layout_width="match_parent"
-                android:orientation="vertical"/>
-        </ScrollView>
-    </LinearLayout>
-
-    <include layout="@layout/include_progress_overlay"/>
-</RelativeLayout>
-
-<!--
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:background="@drawable/bg_login"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
     android:orientation="vertical"
     tools:context=".LiveTestHomeActivity">
 
     <LinearLayout
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:weightSum="110">
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:orientation="vertical"
-            android:layout_weight="35"
-            android:layout_height="0dp">
-            <TextView
-                android:id="@+id/LiveTestTitle"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="Live Test Begins At:"
-                android:paddingVertical="35dp"
-                android:layout_gravity="center"
-                android:gravity="center"
-                android:textSize="25sp"/>
-            <TextView
-                android:id="@+id/countdown"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:textSize="35sp"
-                android:layout_gravity="center"
-                android:gravity="center"
-                android:text="00:00:00"/>
-        </LinearLayout>
-
-        <Button
-            android:id="@+id/startTestBtn"
-            android:layout_width="wrap_content"
-            android:layout_gravity="center"
-            android:layout_height="0dp"
-            android:layout_marginVertical="15dp"
-            android:visibility="invisible"
-            android:paddingHorizontal="65sp"
-            android:textSize="25sp"
-            android:layout_weight="10"
-            android:text="Start Test" />
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="10"
-            android:weightSum="2"
-            android:orientation="horizontal">
-            <Button
-                android:id="@+id/BtnPrevList"
-                android:layout_width="0dp"
-                android:gravity="center"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                android:text="Previous Tests"/>
-            <Button
-                android:id="@+id/BtnFutureList"
-                android:layout_width="0dp"
-                android:gravity="center"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                android:text="Upcoming Tests"/>
-        </LinearLayout>
-
-        <RelativeLayout
+        android:layout_height="wrap_content"
+        android:layout_margin="10sp">
+        <TextView
+            android:id="@+id/ContinueBTNLBT"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textColor="@color/black"
+            android:textStyle="bold"
+            android:textSize="15sp"
+            android:gravity="center"
+            android:background="@color/white"
+            android:padding="10sp"
+            android:text="@string/Live_Test"
+            app:drawableRightCompat="@drawable/cross"/>
+    </LinearLayout>
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+        <ScrollView
             android:layout_width="match_parent"
             android:layout_height="0dp"
-            android:orientation="horizontal"
-            android:layout_weight="55">
-            <ListView
-                android:id="@+id/lt_prev_list"
+            android:layout_weight="100">
+            <LinearLayout
+                android:id="@+id/LiveTestList"
+                android:layout_height="wrap_content"
                 android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:divider="@color/list_divider"
-                android:visibility="invisible"
-                android:dividerHeight="1dp"
-                android:listSelector="@drawable/list_row_selector">
-            </ListView>
-            <ListView
-                android:id="@+id/lt_future_list"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:divider="@color/list_divider"
-                android:dividerHeight="1dp"
-                android:listSelector="@drawable/list_row_selector">
-            </ListView>
-        </RelativeLayout>
+                android:orientation="vertical"/>
+        </ScrollView>
     </LinearLayout>
+
     <include layout="@layout/include_progress_overlay"/>
-</RelativeLayout>-->
\ No newline at end of file
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/itifighter/PaytmPayment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.paytm.pgsdk.PaytmOrder;\r\nimport com.paytm.pgsdk.PaytmPaymentTransactionCallback;\r\nimport com.paytm.pgsdk.TransactionManager;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\nimport java.util.Set;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class PaytmPayment extends AppCompatActivity {\r\n\tprivate String Mid = \"ahKvVJ36172797507439\", Uid = FirebaseAuth.getInstance().getUid(), OrderId, Mobile, Email, txnAmount, firstName, FinalMonth, currentSubject, currentChapter, TAG = \"PaytmPayment\", currentSection;\r\n\r\n\t@SuppressLint(\"SetTextI18n\")\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_paytm_payment);\r\n\t\tIntent intent = getIntent();\r\n\t\t// get Data from intent\r\n\t\tfinal String Month1 = intent.getStringExtra(\"month1\");\r\n\t\tfinal String Month2 = intent.getStringExtra(\"month2\");\r\n\t\tfinal String Month3 = intent.getStringExtra(\"month3\");\r\n\t\tfinal String price1 = intent.getStringExtra(\"price1\");\r\n\t\tfinal String price2 = intent.getStringExtra(\"price2\");\r\n\t\tfinal String price3 = intent.getStringExtra(\"price3\");\r\n\t\tfinal String Disc01 = intent.getStringExtra(\"discount1\");\r\n\t\tfinal String Disc02 = intent.getStringExtra(\"discount2\");\r\n\t\tfinal String Disc03 = intent.getStringExtra(\"discount3\");\r\n\t\tcurrentSection      = intent.getStringExtra(\"currentSection\");\r\n\t\tcurrentSubject      = intent.getStringExtra(\"currentSubject\");\r\n\t\tcurrentChapter      = intent.getStringExtra(\"currentChapter\");\r\n\t\tString title0       = intent.getStringExtra(\"titleName\");\r\n\t\tString Count0       = intent.getStringExtra(\"countTest\");\r\n\r\n\r\n\t\t//get Instance of layout and set data in main view\r\n\t\tTextView title1 = findViewById(R.id.testxy_chapter_titlex),Count1 = findViewById(R.id.testxy_desc_textx),\r\n\t\t\t\tBatch0  = findViewById(R.id.testxytbatchx) ,Price0 = findViewById(R.id.testxytpricex);\r\n\t\t\t\t\t\ttitle1.setText(title0);\r\n\t\t\t\t\t\tCount1.setText(Count0 + \" Tests\");\r\n\t\t\t\t\t\tBatch0.setText(Month1 + \" Months Available with \" + Disc01 + \"% Discount\");\r\n\t\t\t\t\t\tPrice0.setText(\"\\u20B9 \" + price1);\r\n\t\t\t\t\t\tBatch0.setTextColor(Color.BLACK);\r\n\t\t\t\t\t\tCount1.setTextColor(Color.BLACK);\r\n\t\t\t\t\t\tPrice0.setTextColor(Color.BLACK);\r\n\r\n\t\t//set  Months in option\r\n\t\tfinal TextView monthX1 = findViewById(R.id.monthX1), monthX2 = findViewById(R.id.monthX2), monthX3 = findViewById(R.id.monthX3);\r\n\t\t\t\t\t\tmonthX1.setText(Month1 + \" Months\");\r\n\t\t\t\t\t\tmonthX2.setText(Month2 + \" Months\");\r\n\t\t\t\t\t\tmonthX3.setText(Month3 + \" Months\");\r\n\r\n\t\t//set Discount in option\r\n\t\tTextView descX1 = findViewById(R.id.descX1), descX2 = findViewById(R.id.descX2), descX3 = findViewById(R.id.descX3);\r\n\t\t\t\t\t\tdescX1.setText(\"Unlock all test @ \" + Disc01 + \"% \\nDiscount\");\r\n\t\t\t\t\t\tdescX2.setText(\"Unlock all test @ \" + Disc02 + \"% \\nDiscount\");\r\n\t\t\t\t\t\tdescX3.setText(\"Unlock all test @ \" + Disc03 + \"% \\nDiscount\");\r\n\r\n\t\t//set Price in option\r\n\t\tTextView priceX02 = findViewById(R.id.priceX02), priceX12 = findViewById(R.id.priceX12), priceX22 = findViewById(R.id.priceX22);\r\n\t\t\t\t\t\tpriceX02.setText(\"\\u20B9 \" + price1);\r\n\t\t\t\t\t\tpriceX12.setText(\"\\u20B9 \" + price2);\r\n\t\t\t\t\t\tpriceX22.setText(\"\\u20B9 \" + price3);\r\n\t\t\t\t\t\tpriceX02.setPaintFlags(priceX02.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n\t\t\t\t\t\tpriceX12.setPaintFlags(priceX12.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n\t\t\t\t\t\tpriceX22.setPaintFlags(priceX22.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n\r\n\t\t//set Discounted Final price in option\r\n\t\tTextView priceX01 = findViewById(R.id.priceX01), priceX11 = findViewById(R.id.priceX11), priceX21 = findViewById(R.id.priceX21);\r\n\t\tassert price1 != null && Disc01 != null;\r\n        final double  Discount1= (Integer.parseInt(price1) * Integer.parseInt(Disc01) * 0.01);\r\n\t\tfinal String FinalPrice1 = String.valueOf(Integer.parseInt(price1) - Discount1);\r\n\t\tpriceX01.setText(\"\\u20B9 \" + FinalPrice1);\r\n\t\tassert price2 != null && Disc02 != null;\r\n\t\tfinal double  Discount2= (Integer.parseInt(price2) * Integer.parseInt(Disc02) * 0.01);\r\n\t\tfinal String FinalPrice2 = String.valueOf(Integer.parseInt(price2) - Discount2);\r\n\t\tpriceX11.setText(\"\\u20B9 \" + FinalPrice2);\r\n\t\tassert price3 != null && Disc03 != null;\r\n\t\tfinal double  Discount3= (Integer.parseInt(price3) * Integer.parseInt(Disc03) * 0.01);\r\n\t\tfinal String FinalPrice3 = String.valueOf(Integer.parseInt(price3) - Discount3);\r\n\t\tpriceX21.setText(\"\\u20B9 \" + FinalPrice3);\r\n\r\n\t\tfinal TextView sub_itempricex = findViewById(R.id.sub_itempricex), sub_taxpricex = findViewById(R.id.sub_taxpricex),                                    sub_discountpricex = findViewById(R.id.sub_discountpricex), finalpricex = findViewById(R.id.finalpricex);\r\n\t\t\t\t\t   sub_taxpricex.setText(\"\\u20B9 0.0\");\r\n\t\tfinal RadioButton Ra1 = findViewById(R.id.ra1), Ra2 = findViewById(R.id.ra2), Ra3 = findViewById(R.id.ra3);\r\n\t\tfinal ConstraintLayout o1=findViewById(R.id.optionX1),o2=findViewById(R.id.optionX2),o3=findViewById(R.id.optionX3);\r\n\t\tButton cancel = findViewById(R.id.cancelx), payx = findViewById(R.id.payx);\r\n               cancel.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       AreYouSureCancel();\r\n                   }\r\n               });\r\n               payx.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       if (txnAmount.equals(\"\")) {\r\n                           Toast.makeText(PaytmPayment.this,\"Amount is mandatory\",Toast.LENGTH_SHORT).show();\r\n                       } else getToken();\r\n                   }\r\n               });\r\n               Ra1.setChecked(true);\r\n               Ra2.setChecked(false);\r\n               Ra3.setChecked(false);\r\n               sub_itempricex.setText(\"\\u20B9 \" + price1);\r\n               sub_discountpricex.setText(\"\\u20B9 \" + Discount1);\r\n               finalpricex.setText(\"\\u20B9 \" + FinalPrice1);\r\n               txnAmount = FinalPrice1;\r\n               FinalMonth = Month1;\r\n               o1.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(true);\r\n                       Ra2.setChecked(false);\r\n                       Ra3.setChecked(false);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price1);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount1);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice1);\r\n                       txnAmount = FinalPrice1;\r\n                       FinalMonth = Month1;\r\n                   }\r\n               });\r\n               o2.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(false);\r\n                       Ra2.setChecked(true);\r\n                       Ra3.setChecked(false);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price2);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount2);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice2);\r\n                       txnAmount = FinalPrice2;\r\n                       FinalMonth = Month2;\r\n                   }\r\n               });\r\n               o3.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(false);\r\n                       Ra2.setChecked(false);\r\n                       Ra3.setChecked(true);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price3);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount3);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice3);\r\n                       txnAmount = FinalPrice3;\r\n                       FinalMonth = Month3;\r\n                   }\r\n               });\r\n               Ra1.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(true);\r\n                       Ra2.setChecked(false);\r\n                       Ra3.setChecked(false);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price1);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount1);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice1);\r\n                       txnAmount = FinalPrice1;\r\n                       FinalMonth = Month1;\r\n                   }\r\n               });\r\n                Ra2.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        Ra1.setChecked(false);\r\n                        Ra2.setChecked(true);\r\n                        Ra3.setChecked(false);\r\n                        sub_itempricex.setText(\"\\u20B9 \" + price2);\r\n                        sub_discountpricex.setText(\"\\u20B9 \" + Discount2);\r\n                        finalpricex.setText(\"\\u20B9 \" + FinalPrice2);\r\n                        txnAmount = FinalPrice2;\r\n                        FinalMonth = Month2;\r\n                    }\r\n                });\r\n                Ra3.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        Ra1.setChecked(false);\r\n                        Ra2.setChecked(false);\r\n                        Ra3.setChecked(true);\r\n                        sub_itempricex.setText(\"\\u20B9 \" + price3);\r\n                        sub_discountpricex.setText(\"\\u20B9 \" + Discount3);\r\n                        finalpricex.setText(\"\\u20B9 \" + FinalPrice3);\r\n                        txnAmount = FinalPrice3;\r\n                        FinalMonth = Month3;\r\n                    }\r\n                });\r\n\r\n        // Set Image in main view\r\n\t\tStorageReference mmFirebaseStorageRef = FirebaseStorage.getInstance().getReference()\r\n                .child(\"menu/section/\"+currentSection + \"/chapter/\");\r\n\t\t                        if (title0 != null) {\r\n\t\t                            if (title0.trim().length() > 0) {\r\n\t\t                                Glide.with(this)\r\n                                                .load(mmFirebaseStorageRef.child(title0 + \".png\"))\r\n                                                .into((ImageView) findViewById(R.id.testxy_image_viewx));\r\n\t\t                            }\r\n\t\t                        }\r\n\t}\r\n\r\n    private void getToken() {\r\n        ServiceWrapper serviceWrapper = new ServiceWrapper();\r\n        Call<Token_Res> call = serviceWrapper.getTokenCall(\"12345\", Mid, OrderId, txnAmount, Uid, Email, Mobile, firstName);\r\n        call.enqueue(new Callback<Token_Res>() {\r\n            @Override\r\n            public void onResponse(@NonNull Call<Token_Res> call, @NonNull Response<Token_Res> response) {\r\n                try {\r\n                    if (response.isSuccessful() && response.body() != null) {\r\n                        if (!response.body().getBody().getTxnToken().equals(\"\")) {\r\n                            startPaytmPayment(response.body().getBody().getTxnToken());\r\n                        } else {\r\n\r\n                            Log.e(TAG, \"token status false\");\r\n                            Toast.makeText(PaytmPayment.this,\"token status false\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                } catch (Exception e) {\r\n\r\n                    Log.e(TAG, \"Error in token Response\" + e.toString());\r\n                    Toast.makeText(PaytmPayment.this,\"Error in token Response\" + e.toString(),Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n            @Override\r\n            public void onFailure(@NonNull Call<Token_Res> call, @NonNull Throwable t) {\r\n\r\n                Log.e(TAG, \" response error \" + t.toString());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void startPaytmPayment(String txnToken) {\r\n        // for test mode use it\r\n        String host = \"https://securegw-stage.paytm.in/\";\r\n        // for production mode use it //  String host = \"https://securegw.paytm.in/\";\r\n        String callBackUrl = host+\"theia/paytmCallback?ORDER_ID=\" + OrderId;\r\n        PaytmOrder paytmOrder = new PaytmOrder(OrderId, Mid, txnToken, txnAmount, callBackUrl);\r\n        TransactionManager transactionManager = new TransactionManager(paytmOrder, new PaytmPaymentTransactionCallback() {\r\n\r\n            @Override\r\n            public void onTransactionResponse(Bundle bundle) {\r\n                setTransactionDetails(bundle);\r\n            }\r\n\r\n            @Override\r\n            public void networkNotAvailable() {\r\n                Log.e(TAG, \"network not available \");\r\n                Toast.makeText(PaytmPayment.this,\"network not available\",Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void clientAuthenticationFailed(String s) {\r\n                Log.e(TAG, \"Clientauth \" + s);\r\n                Toast.makeText(PaytmPayment.this,\"Clientauth \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void someUIErrorOccurred(String s) {\r\n                Log.e(TAG, \" UI error \" + s);\r\n                Toast.makeText(PaytmPayment.this,\" UI error \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onErrorLoadingWebPage(int i, String s, String s1) {\r\n                Log.e(TAG, \" error loading web \" + s + \"--\" + s1);\r\n                Toast.makeText(PaytmPayment.this,\" error loading web \" + s + \"--\" + s1,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onBackPressedCancelTransaction() {\r\n                Log.e(TAG, \"backPress \");\r\n                Toast.makeText(PaytmPayment.this,\"backPress \",Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onTransactionCancel(String s, Bundle bundle) {\r\n                Log.e(TAG, \" transaction cancel \" + s);\r\n                Toast.makeText(PaytmPayment.this,\" transaction cancel \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            /*@Override\r\n\t\t\tpublic void onErrorProceed(String s) {\r\n\t\t\t\tLog.e(TAG, \" onErrorProcess \" + s);\r\n\t\t\t}*/\r\n\r\n        });\r\n\r\n        transactionManager.setShowPaymentUrl(host + \"theia/api/v1/showPaymentPage\");\r\n        transactionManager.startTransaction(this, 0);\r\n    }\r\n\tprivate void getDetails() {\r\n\t\tOrderId = Genrate();\r\n\t\tFirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n\t\t\t\t.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n\t\t\t\t\t\tassert value != null;\r\n\t\t\t\t\t\tEmail = value.getString(\"Email\");\r\n\t\t\t\t\t\tMobile = value.getString(\"Mobile\");\r\n\t\t\t\t\t\tfirstName = value.getString(\"Name\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t}\r\n\tprivate void AreYouSureCancel() {\r\n\t\tAlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n\t\talert.setMessage(\"Are you sure to Cancel this Payment ?\")\r\n\t\t\t\t.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\r\n\t\t\t\t\t    finish();\r\n\t\t\t\t\t}\r\n\t\t\t\t}).setNegativeButton(\"No\", null);\r\n\t\tAlertDialog alert1 = alert.create();\r\n\t\talert1.show();\r\n\t}\r\n    private void setTransactionDetails(final Bundle bundle) {\r\n        try {\r\n            DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                    .collection(\"transaction\").document(currentSection).collection(\"TXNID\")\r\n                    .document(Objects.requireNonNull(bundle.getString(\"TXNID\")));\r\n            final String TXNDATE = bundle.getString(\"TXNDATE\");\r\n            Map<String,String> map = new HashMap<>();\r\n            Set<String> d = bundle.keySet();\r\n            for (String key : d) map.put(key, bundle.getString(key));\r\n            map.put(\"currentSubject\",currentSubject);\r\n            map.put(\"currentChapter\",currentChapter);\r\n            reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void aVoid) {\r\n                    if(Objects.equals(bundle.getString(\"STATUS\"), \"TXN_SUCCESS\")) setSuccessProductDetails(TXNDATE);\r\n                    else{ Toast.makeText(PaytmPayment.this,\"Transaction failed\",Toast.LENGTH_SHORT).show(); }\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(PaytmPayment.this,\"Transaction insertion failure\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n        catch (Exception e){\r\n            e.printStackTrace();\r\n            Toast.makeText(PaytmPayment.this,\"Exception in data saving\",Toast.LENGTH_SHORT).show();\r\n        }\r\n\t}\r\n\tprivate void setSuccessProductDetails(final String TXNDATE) {\r\n\t\ttry {\r\n\t\t\tfinal DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                    .collection(\"Products\").document(currentSection).collection(\"ProductId\").document(currentChapter);\r\n            final Map<String, String> map = new HashMap<>();\r\n            reference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    String oldDate = documentSnapshot.getString(\"ExpiryDate\");\r\n                    if(oldDate!=null && getDateAfter(oldDate,TXNDATE)) map.put(\"ExpiryDate\",getExpiryDate(oldDate));\r\n                    else { map.put(\"ExpiryDate\",getExpiryDate(TXNDATE)); }\r\n                    map.put(\"currentSubject\",currentSubject);\r\n                    reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            Toast.makeText(PaytmPayment.this,\"Transaction successfully done\",Toast.LENGTH_SHORT).show();\r\n                            finish();\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(PaytmPayment.this,\"contact customer support\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(PaytmPayment.this,\"Failure product transaction\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n\t\t}\r\n\t\tcatch(Exception e){\r\n\t\t\te.printStackTrace();\r\n\t\t\tToast.makeText(PaytmPayment.this,\"Exception in setSuccessProductDetails\",Toast.LENGTH_SHORT).show();\r\n\t\t}\r\n\t}\r\n\r\n    private boolean getDateAfter(String oldDate1, String txndate) {\r\n\t\tboolean result = false;\r\n\t\ttry {\r\n\t\t\tSimpleDateFormat s1 = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.US);\r\n\t\t\tDate d1 = s1.parse(oldDate1), d2 = s1.parse(txndate);\r\n\t\t\tassert d1 != null;\r\n\t\t\tif (d1.after(d2)) result = true;\r\n\t\t} catch (ParseException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate String getExpiryDate(String txndate) {\r\n\t\ttry {\r\n\t\t\tCalendar c = Calendar.getInstance();\r\n\t\t\t@SuppressLint(\"SimpleDateFormat\") SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss.0\");\r\n\t\t\tc.setTime(Objects.requireNonNull(sdf.parse(txndate)));\r\n\t\t\tc.add(Calendar.DAY_OF_MONTH, Integer.parseInt(FinalMonth) * 30);\r\n\t\t\ttxndate = sdf.format(c.getTime());\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn txndate;\r\n\t}\r\n\r\n\r\n\t@Override\r\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\r\n\t\tint activityRequestCode = 0;\r\n\t\tif (requestCode == activityRequestCode) {\r\n\t\t\tBundle bundle = data.getExtras();\r\n\t\t\tassert bundle != null;\r\n\t\t\tfor (String key : bundle.keySet()) {\r\n\t\t\t\tLog.e(TAG, key + \" : \" + (bundle.get(key) != null ? bundle.get(key) : \"NULL\"));\r\n\t\t\t}\r\n\t\t\tLog.e(TAG, \" data \" + data.getStringExtra(\"nativeSdkForMerchantMessage\"));\r\n\t\t\tToast.makeText(this, data.getStringExtra(\"nativeSdkForMerchantMessage\")\r\n\t\t\t\t\t+ data.getStringExtra(\"response\"), Toast.LENGTH_SHORT).show();\r\n\t\t} else {\r\n\t\t\tLog.e(TAG, \" payment failed\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic String Genrate() {\r\n\t\tCalendar c = Calendar.getInstance();\r\n\t\t@SuppressLint(\"SimpleDateFormat\") SimpleDateFormat df = new SimpleDateFormat(\"ddMMyyhhmmss\");\r\n\t\tString date = df.format(c.getTime());\r\n\t\tRandom rand = new Random();\r\n\t\tint min = 1000, max = 9999;\r\n\t\tint randomNum = rand.nextInt((max - min) + 1) + min;\r\n\t\treturn date + randomNum;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onStart() {\r\n\t\tsuper.onStart();\r\n\t\tgetDetails();\r\n\t}\r\n    @Override\r\n\tprotected void onStop() {\r\n\t\tsuper.onStop();\r\n        Runtime.getRuntime().gc();\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onDestroy() {\r\n\t\tsuper.onDestroy();\r\n        Runtime.getRuntime().gc();\r\n\t}\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        AreYouSureCancel();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/PaytmPayment.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/java/com/example/itifighter/PaytmPayment.java	(date 1607845170156)
@@ -497,4 +497,296 @@
     public void onBackPressed() {
         AreYouSureCancel();
     }
+}
+
+class PaytmPaymentpp extends AppCompatActivity {
+    private final String Mid = "ahKvVJ36172797507439";
+    private final String Uid = FirebaseAuth.getInstance().getUid();
+    private String OrderId;
+    private String Mobile;
+    private String Email;
+    private String txnAmount;
+    private String firstName;
+    private String currentSubject;
+    private String currentChapter;
+    private final String TAG = "PaytmPayment";
+    private String currentSection;
+
+    @SuppressLint("SetTextI18n")
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_paytm_payment_pp);
+        Intent intent = getIntent();
+        // get Data from intent
+        final String pdfPrice = intent.getStringExtra("price");
+        final String Discount = intent.getStringExtra("discount");
+        currentSection      = intent.getStringExtra("curruntPdf");
+        currentSubject      = intent.getStringExtra("currentSubject");
+        currentChapter      = intent.getStringExtra("currentChapter");
+        String pdfName       = intent.getStringExtra("titleName");
+
+
+        //get Instance of layout and set data in main view
+        TextView title = findViewById(R.id.pdfTitle),Price = findViewById(R.id.pdfPrice);
+        title.setText(pdfName);
+        Price.setText("\u20B9 " + pdfPrice);
+        Price.setTextColor(Color.BLACK);
+        final TextView subPdfPrice = findViewById(R.id.sub_pdfPrice),subPdfDiscount = findViewById(R.id.sub_pdfDiscountPrice),finalPrice = findViewById(R.id.finalpdfPrice);
+        subPdfPrice.setText("\u20B9 "+pdfPrice);
+        subPdfDiscount.setText("- \u20B9 "+Discount);
+        final String pdfFinalPrice = getFinalPrice(pdfPrice,Discount);
+        finalPrice.setText(pdfFinalPrice);
+        Button cancel = findViewById(R.id.cancelx), payx = findViewById(R.id.payx);
+        cancel.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                AreYouSureCancel();
+            }
+        });
+        payx.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                txnAmount = pdfFinalPrice;
+                if (txnAmount.equals("")) {
+                    Toast.makeText(PaytmPaymentpp.this,"Amount is mandatory",Toast.LENGTH_SHORT).show();
+                }
+                else getToken();
+            }
+        });
+    }
+
+    private String getFinalPrice(String pdfPrice, String discount) {
+        int p=Integer.parseInt(pdfPrice),d=Integer.parseInt(discount);
+        return String.valueOf(p-((p*d)/100));
+    }
+
+    private void getToken() {
+        ServiceWrapper serviceWrapper = new ServiceWrapper();
+        Call<Token_Res> call = serviceWrapper.getTokenCall("12345", Mid, OrderId, txnAmount, Uid, Email, Mobile, firstName);
+        call.enqueue(new Callback<Token_Res>() {
+            @Override
+            public void onResponse(@NonNull Call<Token_Res> call, @NonNull Response<Token_Res> response) {
+                try {
+                    if (response.isSuccessful() && response.body() != null) {
+                        if (!response.body().getBody().getTxnToken().equals("")) {
+                            startPaytmPayment(response.body().getBody().getTxnToken());
+                        } else {
+
+                            Log.e(TAG, "token status false");
+                            Toast.makeText(PaytmPaymentpp.this,"token status false",Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                } catch (Exception e) {
+
+                    Log.e(TAG, "Error in token Response" + e.toString());
+                    Toast.makeText(PaytmPaymentpp.this,"Error in token Response" + e.toString(),Toast.LENGTH_LONG).show();
+                }
+            }
+            @Override
+            public void onFailure(@NonNull Call<Token_Res> call, @NonNull Throwable t) {
+
+                Log.e(TAG, " response error " + t.toString());
+            }
+        });
+    }
+
+    private void startPaytmPayment(String txnToken) {
+        // for test mode use it
+        String host = "https://securegw-stage.paytm.in/";
+        // for production mode use it //  String host = "https://securegw.paytm.in/";
+        String callBackUrl = host+"theia/paytmCallback?ORDER_ID=" + OrderId;
+        PaytmOrder paytmOrder = new PaytmOrder(OrderId, Mid, txnToken, txnAmount, callBackUrl);
+        TransactionManager transactionManager = new TransactionManager(paytmOrder, new PaytmPaymentTransactionCallback() {
+
+            @Override
+            public void onTransactionResponse(Bundle bundle) {
+                setTransactionDetails(bundle);
+            }
+
+            @Override
+            public void networkNotAvailable() {
+                Log.e(TAG, "network not available ");
+                Toast.makeText(PaytmPaymentpp.this,"network not available",Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void clientAuthenticationFailed(String s) {
+                Log.e(TAG, "Clientauth " + s);
+                Toast.makeText(PaytmPaymentpp.this,"Clientauth " + s,Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void someUIErrorOccurred(String s) {
+                Log.e(TAG, " UI error " + s);
+                Toast.makeText(PaytmPaymentpp.this," UI error " + s,Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onErrorLoadingWebPage(int i, String s, String s1) {
+                Log.e(TAG, " error loading web " + s + "--" + s1);
+                Toast.makeText(PaytmPaymentpp.this," error loading web " + s + "--" + s1,Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onBackPressedCancelTransaction() {
+                Log.e(TAG, "backPress ");
+                Toast.makeText(PaytmPaymentpp.this,"backPress ",Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onTransactionCancel(String s, Bundle bundle) {
+                Log.e(TAG, " transaction cancel " + s);
+                Toast.makeText(PaytmPaymentpp.this," transaction cancel " + s,Toast.LENGTH_SHORT).show();
+            }
+
+            /*@Override
+			public void onErrorProceed(String s) {
+				Log.e(TAG, " onErrorProcess " + s);
+			}*/
+
+        });
+
+        transactionManager.setShowPaymentUrl(host + "theia/api/v1/showPaymentPage");
+        transactionManager.startTransaction(this, 0);
+    }
+    private void getDetails() {
+        OrderId = Genrate();
+        FirebaseFirestore.getInstance().collection("users").document(Uid)
+                .addSnapshotListener(new EventListener<DocumentSnapshot>() {
+                    @Override
+                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {
+                        assert value != null;
+                        Email = value.getString("Email");
+                        Mobile = value.getString("Mobile");
+                        firstName = value.getString("Name");
+                    }
+                });
+    }
+    private void AreYouSureCancel() {
+        AlertDialog.Builder alert = new AlertDialog.Builder(this);
+        alert.setMessage("Are you sure to Cancel this Payment ?")
+                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int which) {
+                        finish();
+                    }
+                }).setNegativeButton("No", null);
+        AlertDialog alert1 = alert.create();
+        alert1.show();
+    }
+
+    private void setTransactionDetails(final Bundle bundle) {
+        try {
+            DocumentReference reference = FirebaseFirestore.getInstance().collection("users").document(Uid)
+                    .collection("transaction").document(currentSection).collection("TXNID")
+                    .document(Objects.requireNonNull(bundle.getString("TXNID")));
+            final String TXNDATE = bundle.getString("TXNDATE");
+            Map<String,String> map = new HashMap<>();
+            Set<String> d = bundle.keySet();
+            for (String key : d) map.put(key, bundle.getString(key));
+            map.put("currentSubject",currentSubject);
+            map.put("currentChapter",currentChapter);
+            reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {
+                @Override
+                public void onSuccess(Void aVoid) {
+                    if(Objects.equals(bundle.getString("STATUS"), "TXN_SUCCESS")) setSuccessProductDetails(TXNDATE);
+                    else{ Toast.makeText(PaytmPaymentpp.this,"Transaction failed",Toast.LENGTH_SHORT).show(); }
+                }
+            }).addOnFailureListener(new OnFailureListener() {
+                @Override
+                public void onFailure(@NonNull Exception e) {
+                    Toast.makeText(PaytmPaymentpp.this,"Transaction insertion failure",Toast.LENGTH_SHORT).show();
+                }
+            });
+        }
+        catch (Exception e){
+            e.printStackTrace();
+            Toast.makeText(PaytmPaymentpp.this,"Exception in data saving",Toast.LENGTH_SHORT).show();
+        }
+    }
+    private void setSuccessProductDetails(final String TXNDATE) {
+        try {
+            final DocumentReference reference = FirebaseFirestore.getInstance().collection("users").document(Uid)
+                    .collection("Products").document(currentSection).collection("ProductId").document(currentChapter);
+            final Map<String, String> map = new HashMap<>();
+            reference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+                @Override
+                public void onSuccess(DocumentSnapshot documentSnapshot) {
+                    map.put("currentSubject",currentSubject);
+                    reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {
+                        @Override
+                        public void onSuccess(Void aVoid) {
+                            Toast.makeText(PaytmPaymentpp.this,"Transaction successfully done",Toast.LENGTH_SHORT).show();
+                            finish();
+                        }
+                    }).addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            Toast.makeText(PaytmPaymentpp.this,"contact customer support",Toast.LENGTH_SHORT).show();
+                        }
+                    });
+                }
+            }).addOnFailureListener(new OnFailureListener() {
+                @Override
+                public void onFailure(@NonNull Exception e) {
+                    Toast.makeText(PaytmPaymentpp.this,"Failure product transaction",Toast.LENGTH_SHORT).show();
+                }
+            });
+        }
+        catch(Exception e){
+            e.printStackTrace();
+            Toast.makeText(PaytmPaymentpp.this,"Exception in setSuccessProductDetails",Toast.LENGTH_SHORT).show();
+        }
+    }
+
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        int activityRequestCode = 0;
+        if (requestCode == activityRequestCode) {
+            Bundle bundle = data.getExtras();
+            assert bundle != null;
+            for (String key : bundle.keySet()) {
+                Log.e(TAG, key + " : " + (bundle.get(key) != null ? bundle.get(key) : "NULL"));
+            }
+            Log.e(TAG, " data " + data.getStringExtra("nativeSdkForMerchantMessage"));
+            Toast.makeText(this, data.getStringExtra("nativeSdkForMerchantMessage")
+                    + data.getStringExtra("response"), Toast.LENGTH_SHORT).show();
+        } else {
+            Log.e(TAG, " payment failed");
+        }
+    }
+
+    public String Genrate() {
+        Calendar c = Calendar.getInstance();
+        @SuppressLint("SimpleDateFormat") SimpleDateFormat df = new SimpleDateFormat("ddMMyyhhmmss");
+        String date = df.format(c.getTime());
+        Random rand = new Random();
+        int min = 1000, max = 9999;
+        int randomNum = rand.nextInt((max - min) + 1) + min;
+        return date + randomNum;
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+        getDetails();
+    }
+    @Override
+    protected void onStop() {
+        super.onStop();
+        Runtime.getRuntime().gc();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        Runtime.getRuntime().gc();
+    }
+
+    @Override
+    public void onBackPressed() {
+        AreYouSureCancel();
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/itifighter/TestSeries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighter.TestSeriesX.CustomListItemX;\r\nimport com.example.itifighter.TestSeriesX.CustomListItemY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterX;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class TestSeries extends Fragment {\r\n\r\n    private String currentSubject,currentChapter,currentTest;\r\n    private ArrayList<CustomListItem> Subjects;\r\n    private ArrayList<CustomListItemX> Chapters;\r\n    private ArrayList<CustomListItemY> Tests;\r\n    private ListView listView;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n    private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;\r\n    private ImageButton back;\r\n    private ProgressDialog dialog;\r\n\r\n    private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters\r\n    public TestSeries() { }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);\r\n        listView = mtView.findViewById(R.id.testxtRecycle);\r\n        back = mtView.findViewById(R.id.CustomBackButtonTS);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        LoadSubjects();\r\n        return mtView;\r\n    }\r\n    public void CustomBackButton(){\r\n        switch (currentLayer){\r\n            case 1:\r\n                LoadSubjects();\r\n           case 2:\r\n                LoadChapters();\r\n        }\r\n    }\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Subjects.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\r\n                                \"ts\"));\r\n                        SubjectId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubject = SubjectId.get(position);\r\n                            currentSubjectPos = position;\r\n                            LoadChapters();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    void LoadChapters(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").document(currentSubject)\r\n                .collection(\"chapter\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Chapters = new ArrayList<>();\r\n                    ChapterId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Chapters.add(new CustomListItemX(document.getString(\"name\"), String.valueOf(document.get(\"cc\")) , \"ts\",document.getId(),document.getString(\"month1\"),document.getString(\"month2\"),document.getString(\"month3\"),document.getString(\"price1\"),document.getString(\"price2\"),document.getString(\"price3\"),document.getString(\"discount1\"),document.getString(\"discount2\"),document.getString(\"discount3\")));\r\n                        ChapterId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItemX> adapter = new CustomListViewArrayAdapterX(mContext,0,Chapters,currentSubject,ChapterId);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {\r\n                            String Uid = FirebaseAuth.getInstance().getUid();\r\n                            assert Uid != null;\r\n                            FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                                    .document(\"ts\").collection(\"ProductId\").document(ChapterId.get(i))\r\n                                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                            if(task.isSuccessful()){\r\n                                                DocumentSnapshot documentSnapshot = task.getResult();\r\n                                                if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                                                    currentChapter = ChapterId.get(i);\r\n                                                    currentChapterPos = i;\r\n                                                    LoadTest();\r\n                                                }\r\n                                                else{\r\n                                                    Intent intent = new Intent(getContext(), PaytmPayment.class);\r\n                                                    intent.putExtra(\"ProductId\",Chapters.get(i).getId());\r\n                                                    intent.putExtra(\"month1\",Chapters.get(i).getMonth1());\r\n                                                    intent.putExtra(\"month2\",Chapters.get(i).getMonth2());\r\n                                                    intent.putExtra(\"month3\",Chapters.get(i).getMonth3());\r\n                                                    intent.putExtra(\"price1\",Chapters.get(i).getPrice1());\r\n                                                    intent.putExtra(\"price2\",Chapters.get(i).getPrice2());\r\n                                                    intent.putExtra(\"price3\",Chapters.get(i).getPrice3());\r\n                                                    intent.putExtra(\"discount1\",Chapters.get(i).getDiscount1());\r\n                                                    intent.putExtra(\"discount2\",Chapters.get(i).getDiscount2());\r\n                                                    intent.putExtra(\"discount3\",Chapters.get(i).getDiscount3());\r\n                                                    intent.putExtra(\"currentSection\",Chapters.get(i).getImagex());\r\n                                                    intent.putExtra(\"titleName\",Chapters.get(i).getTopicHeader());\r\n                                                    intent.putExtra(\"countTest\",Chapters.get(i).getTest());\r\n                                                    intent.putExtra(\"currentSubject\",currentSubject);\r\n                                                    intent.putExtra(\"currentChapter\",ChapterId.get(i));\r\n                                                    mContext.startActivity(intent);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadTest(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    Tests = new ArrayList<>();\r\n                    TestId = new ArrayList<>();\r\n                    MPQ = new ArrayList<>();\r\n                    Timmr = new ArrayList<>();\r\n                    Tittl = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        int duration = Integer.parseInt(String.valueOf(document.get(\"duration\"))), marks = Integer.parseInt(String.valueOf(document.get(\"marks\"))), NOQ = Integer.parseInt(String.valueOf(document.get(\"NOQs\")));\r\n                        int score = marks*NOQ;\r\n                        Tests.add(new CustomListItemY(document.getId(),\r\n                                document.getString(\"title\"), String.valueOf(duration),\r\n                                String.valueOf(NOQ), String.valueOf(score)));\r\n                        TestId.add(document.getId());\r\n                        MPQ.add(String.valueOf(marks));\r\n                        Timmr.add(String.valueOf(duration));\r\n                        Tittl.add(document.getString(\"title\"));\r\n                    }\r\n                    listView.setAdapter(new CustomListViewArrayAdapterZ(mContext,0,Tests,currentSubject,currentChapter));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                                currentTest = TestId.get(i);\r\n                                currentTestPos = i;\r\n                                LoadExam();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void LoadExam() {\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").document(currentTest).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n\r\n\r\n                            final ArrayList<Object> questions = new ArrayList<>();\r\n                            for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                            }\r\n\r\n                            final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                            final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n                            final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"ts\").collection(\"test\");\r\n                            UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    boolean found = false;\r\n                                                    String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                                    String sub_list = \"\";\r\n                                                    String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                                    String targetChapterID = currentChapter;\r\n                                                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                                        if (document.getId().equals(targetChapterID)) {\r\n                                                            found = true;\r\n                                                            total_attempted = document.getString(\"total_attempted\");\r\n                                                            total_skipped = document.getString(\"total_skipped\");\r\n                                                            total_correct = document.getString(\"total_correct\");\r\n                                                            accuracy = document.getString(\"accuracy\");\r\n                                                            tpq = document.getString(\"tpq\");\r\n                                                            _mpq = document.getString(\"_mpq\");\r\n                                                            sub_list = document.getString(\"answer_key\");\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (found) {\r\n                                                        //load result activity\r\n                                                            Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                                            myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                                            myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                                            myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                                            myIntent.putExtra(\"total_correct\", total_correct);\r\n                                                            myIntent.putExtra(\"section\", \"ts\");\r\n                                                            myIntent.putExtra(\"subject\", currentSubject);\r\n                                                            myIntent.putExtra(\"chapter\", currentChapter);\r\n                                                            myIntent.putExtra(\"questions\", questions);\r\n                                                            myIntent.putExtra(\"answer_key\", sub_list);\r\n                                                            assert _mpq != null;\r\n                                                            myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                                            myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentTestPos)));\r\n                                                            myIntent.putExtra(\"title\", Tittl.get(currentTestPos));\r\n                                                            myIntent.putExtra(\"accuracy\", accuracy);\r\n                                                            myIntent.putExtra(\"tpq\", tpq);\r\n                                                            dialog.dismiss();\r\n                                                            startActivity(myIntent);\r\n                                                    } else {\r\n                                                        Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                        myIntent.putExtra(\"section\", \"ts\");\r\n                                                        myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                        myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                        myIntent.putExtra(\"questions\", questions);\r\n                                                        myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"title\", Tittl.get(currentChapterPos) + \" (Test Series)\");\r\n                                                        dialog.dismiss();\r\n                                                        startActivity(myIntent);\r\n                                                        }\r\n                                                }else {\r\n                                                  /*  Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                    myIntent.putExtra(\"section\", \"ts\");\r\n                                                    myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                    myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                    myIntent.putExtra(\"questions\", questions);\r\n                                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"title\", Tittl.get(currentChapterPos));\r\n                                                    dialog.dismiss();\r\n                                                    startActivity(myIntent);*/\r\n                                                }\r\n                                        }\r\n                            });\r\n\r\n\r\n\r\n                } else {\r\n                    Toast.makeText(mContext,\"no test found\",Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestSeries.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/java/com/example/itifighter/TestSeries.java	(date 1607796695520)
@@ -219,7 +219,7 @@
                         public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                 currentTest = TestId.get(i);
                                 currentTestPos = i;
-                                LoadExam();
+                                 LoadExam();
                         }
                     });
                     dialog.dismiss();
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <string name=\"app_name\">ITIFighter</string>\r\n    <string name=\"sign_in\">Sign In</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"login_to_continue_your_account\">Login to continue your account</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"don_t_have_an_account\">Don\\'t have an account</string>\r\n    <string name=\"register\">Register</string>\r\n    <string name=\"already_have_an_account\">Already have an account</string>\r\n    <string name=\"name\">Name</string>\r\n    <string name=\"mobile\">Mobile</string>\r\n    <string name=\"state\">State</string>\r\n    <string name=\"trade\">Trade</string>\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"menu_Profile\">My Profile</string>\r\n    <string name=\"menu_chat\">Discussion</string>\r\n    <string name=\"share\">Share</string>\r\n    <string name=\"rating\">Rating</string>\r\n    <string name=\"change\">Change Password</string>\r\n    <string name=\"logout\">Logout</string>\r\n    <string name=\"username\">ITIFighter</string>\r\n    <string name=\"menu_groups\">Groups</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"todo\">TODO</string>\r\n    <string name=\"user_email\">Wiliam@gmail.com</string>\r\n    <string name=\"stateX\">Uttar Pradesh</string>\r\n    <string name=\"TradeX\">Fitter</string>\r\n    <string name=\"designed_by_n_sharmask_amp_aj\"><![CDATA[Designed & Devloped by \\n Sharmask & AJ]]></string>\r\n    <string name=\"phone\">phone</string>\r\n    <string name=\"rate_our_app\">Rate our app</string>\r\n    <string name=\"rate_our_previous_paper\">Rate our previous Paper</string>\r\n    <string name=\"rate_our_mock_test\">Rate our mock test</string>\r\n    <string name=\"rate_our_test_series\">Rate our Tets series</string>\r\n    <string name=\"rate_our_daily_live_test\">Rate our daily live test</string>\r\n    <string name=\"submit\">submit</string>\r\n    <string name=\"oldpassword\">Old Password</string>\r\n    <string name=\"newpassword\">New Password</string>\r\n    <string name=\"confirmpassword\">Confirm Password</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n\r\n    <string name=\"joey_tribbiani\">Joey Tribbiani</string>\r\n    <string name=\"new_york_usa\">new york, usa</string>\r\n    <string name=\"_453k\">453K</string>\r\n    <string name=\"_873\">873</string>\r\n    <string name=\"_1_202_555_0157\" tools:ignore=\"TypographyDashes\">+1–202–555-0157</string>\r\n    <string name=\"MyScore\">My Score</string>\r\n    <string name=\"MyRank\">My Rank</string>\r\n    <string name=\"discription\">Discription</string>\r\n    <string name=\"title\">title</string>\r\n    <string name=\"new_message\">new message…</string>\r\n\r\n    <string name=\"placeholder_message\">Placeholder message</string>\r\n    <string name=\"rose\">Rose</string>\r\n    <string name=\"how_are_you_doing_this_is_a_long_message_that_should_probably_wrap\">How are you doing? This is a long message that should probably wrap.</string>\r\n\r\n    <!-- Strings related to login -->\r\n\r\n    <!-- Firestore Strings -->\r\n    <string name=\"collection_chatrooms\">Chatrooms</string>\r\n    <string name=\"collection_chat_messages\">Chat Messages</string>\r\n    <string name=\"collection_chatroom_user_list\">User List</string>\r\n\r\n    <!-- Intent extras -->\r\n\r\n    <!-- Fragments Names -->\r\n\r\n    <!-- Other Strings -->\r\n    <string name=\"payment_gateway\">Payment Gateway</string>\r\n    <string name=\"www_google_com\">www.noobworm.xyz</string>\r\n    <string name=\"paytm_integrations\">Payment integration</string>\r\n    <string name=\"order_id\">order id</string>\r\n    <string name=\"customer_id\">customer_id</string>\r\n    <string name=\"price\">price</string>\r\n    <string name=\"start_payment\">start payment</string>\r\n    <string name=\"choose_subscription_plan\">Choose Subscription</string>\r\n    <string name=\"start\">Start</string>\r\n    <string name=\"result\">Result</string>\r\n    <string name=\"title_here\">TITLE HERE</string>\r\n    <string name=\"submit_feedback\">Submit Feedback</string>\r\n    <string name=\"cancel\">Cancel</string>\r\n    <string name=\"_1\">+1</string>\r\n    <string name=\"dummy_question\">dummy_question</string>\r\n    <string name=\"something_wrong_with_this_question\">Something wrong with this question?</string>\r\n    <string name=\"give_feedback\">Give feedback!</string>\r\n    <string name=\"skip\">Skip</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"live\">LIVE</string>\r\n    <string name=\"ques_num\">Ques Num</string>\r\n    <string name=\"time_left\">Time left</string>\r\n    <string name=\"total_pending_quetion\">total pending quetion:</string>\r\n    <string name=\"total_skipped_quetion\">total skipped quetion:</string>\r\n    <string name=\"total_attempted_quetion\">total attempted quetion:</string>\r\n    <string name=\"total_available_quetion\">total available quetion:</string>\r\n    <string name=\"_10\">10</string>\r\n    <string name=\"score\">Score</string>\r\n    <string name=\"title_activity_view_solution_xyz\">ViewSolutionXyz</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"prev\">PREV</string>\r\n    <string name=\"leaderboard\">LEADERBOARD</string>\r\n    <string name=\"student_name\">Student Name</string>\r\n    <string name=\"rank\">Rank</string>\r\n    <string name=\"percentage\">Percentage</string>\r\n    <string name=\"points\">Points</string>\r\n    <string name=\"resultX\">RESULT</string>\r\n    <string name=\"analysis\">Analysis</string>\r\n    <string name=\"percent\">Percent</string>\r\n    <string name=\"second\">Second</string>\r\n    <string name=\"accuracy\">Accuracy</string>\r\n    <string name=\"time_quetion\">Time / Quetion</string>\r\n    <string name=\"view_solution\">View Solution</string>\r\n    <string name=\"view_leader_board\">View Leader Board</string>\r\n    <string name=\"re_take_exam\">Re-Take Exam</string>\r\n    <string name=\"close\">CLOSE</string>\r\n    <string name=\"solution\">SOLUTION</string>\r\n    <string name=\"a\">A</string>\r\n    <string name=\"b\">B</string>\r\n    <string name=\"c\">C</string>\r\n    <string name=\"d\">D</string>\r\n    <string name=\"_100_u20b9\"><strike>100 ₹</strike></string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"i_have_read_all_instructions\">I have read all instructions</string>\r\n    <string name=\"instruction\">INSTRUCTION</string>\r\n    <string name=\"minutes\">Minutes</string>\r\n    <string name=\"marks\">Marks</string>\r\n    <string name=\"quetions\">Quetions</string>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/res/values/strings.xml	(date 1607794764703)
@@ -131,6 +131,7 @@
     <string name="minutes">Minutes</string>
     <string name="marks">Marks</string>
     <string name="quetions">Quetions</string>
+    <string name="Live_Test">Live Test</string>
 
 
 </resources>
\ No newline at end of file
Index: .idea/dictionaries/pos08.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectDictionaryState\">\r\n  <dictionary name=\"pos08\">\r\n    <words>\r\n      <w>fprice</w>\r\n      <w>hapter</w>\r\n      <w>imagex</w>\r\n      <w>leaderboard</w>\r\n      <w>quesnumwindow</w>\r\n      <w>resultw</w>\r\n      <w>timmr</w>\r\n      <w>tittl</w>\r\n      <w>xview</w>\r\n    </words>\r\n  </dictionary>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/pos08.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ .idea/dictionaries/pos08.xml	(date 1607842351633)
@@ -1,10 +1,13 @@
 <component name="ProjectDictionaryState">
   <dictionary name="pos08">
     <words>
+      <w>currunt</w>
       <w>fprice</w>
       <w>hapter</w>
       <w>imagex</w>
+      <w>itifighter</w>
       <w>leaderboard</w>
+      <w>paymentpp</w>
       <w>quesnumwindow</w>
       <w>resultw</w>
       <w>timmr</w>
Index: app/src/main/java/com/example/itifighter/TestResultActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.WriteBatch;\r\n\r\nimport java.io.Serializable;\r\nimport java.math.BigDecimal;\r\nimport java.math.RoundingMode;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        findViewById(R.id.ResultLL).setVisibility(View.INVISIBLE);\r\n        findViewById(R.id.UploadingTXT).setVisibility(View.VISIBLE);\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        if (getIntent().getStringExtra(\"is_past_result\") != null && getIntent().getStringExtra(\"is_past_result\").contains(\"true\")) {\r\n            marksUploaded = true;\r\n            pastResultLT = true;\r\n            tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n            tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n            tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n            String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n            _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n            String[] str_ans = sub_list.split(\"_\");\r\n            sub_ans = new int[str_ans.length];\r\n            for (int i = 0; i < str_ans.length; i++)\r\n                sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n            findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n            findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n            if (targetSection == \"lt\") {\r\n\r\n            } else {\r\n                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n            }\r\n            accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n            total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n        } else {\r\n            findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n            sub_ans = getIntent().getIntArrayExtra(\"sub_ans\");\r\n            selectedFeedbackOption = getIntent().getIntArrayExtra(\"selectedFeedbackOption\");\r\n            //Toast.makeText(this, \"total ques: total ans: \"+questions.size()+\" : \"+sub_ans.length, Toast.LENGTH_LONG).show();\r\n\r\n            for (int i = 0; i < sub_ans.length; i++) {\r\n                //Toast.makeText(this, \"\"+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();\r\n                if (sub_ans[i] == -1) {\r\n                    tsq++;\r\n                } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {\r\n                    marks_obtained += _mpq;\r\n                    tca++;\r\n                } else {\r\n                    tra++;\r\n                }\r\n            }\r\n            total_time_taken = 0;\r\n            accuracy = ((((double) tca) / (tca + tra)) * 100.0);\r\n            accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();\r\n            if (tca + tra > 0) {\r\n                Accuracy.setText(\"\" + accuracy);\r\n                total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra(\"timer\", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));\r\n            }\r\n            tpq = total_time_taken;\r\n\r\n            UploadData();\r\n        }\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n        ;\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    void UploadData() {\r\n        final String uuid = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n        final DocumentReference UserTestRecordDoc = userDoc.collection(\"scoreboard\").document(\"\" + targetSection).collection(\"test\").document(\"\" + finalTCID);\r\n        final float percentageMarks = (tca * _mpq) / total_marks;\r\n        double userRecordScore = targetSection.equals(\"mt\") ? percentageMarks : targetSection.equals(\"lt\") ? percentageMarks * 2 : percentageMarks * 1.5;\r\n\r\n        Map<String, String> userTestRecordMap = new HashMap<>();\r\n        userTestRecordMap.put(\"score\", \"\" + userRecordScore);\r\n        userTestRecordMap.put(\"total_skipped\", \"\" + tsq);\r\n        userTestRecordMap.put(\"total_attempted\", \"\" + (tca + tra));\r\n        userTestRecordMap.put(\"total_correct\", \"\" + tca);\r\n        userTestRecordMap.put(\"_mpq\", \"\" + _mpq);\r\n        userTestRecordMap.put(\"accuracy\", \"\" + accuracy);\r\n        userTestRecordMap.put(\"tpq\", \"\" + tpq);\r\n        String answerString = \"\";\r\n        for (int n : sub_ans)\r\n            answerString += n + \"_\";\r\n        userTestRecordMap.put(\"answer_key\", answerString.substring(0, answerString.length() - 1));\r\n\r\n        UserTestRecordDoc.set(userTestRecordMap);\r\n\r\n        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    //Log.w(TAG, \"Listen failed.\", e);\r\n                    return;\r\n                }\r\n                if (snapshot != null && snapshot.exists()) {\r\n                    final String studentName = snapshot.getString(\"Name\");\r\n                    //Log.d(TAG, \"Current data: \" + snapshot.getData());\r\n                    Map<String, String> scoreboard = new HashMap<>();\r\n                    scoreboard.put(\"Score\", \"\" + (tca * _mpq));\r\n                    scoreboard.put(\"name\", \"\" + studentName);\r\n                    DocumentReference reference = mDatabaseReference.document(\"\" + uuid);\r\n                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            //Toast.makeText(TestResultActivity.this, \"score uploaded in database for user: \"+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();\r\n                            marksUploaded = true;\r\n                            //((TextView)findViewById(R.id.UploadingTXT)).setText(\"uploading feedback, please wait..\");\r\n                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"common\").document(\"post test\").collection(\"feedback\");\r\n                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid).collection(\"feedback\");\r\n                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                    if (task.isSuccessful()) {\r\n                                        int count = task.getResult().size();\r\n                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();\r\n                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {\r\n                                            if (selectedFeedbackOption[i] > -1) {\r\n                                                Map<String, String> _fb = new HashMap<>();\r\n                                                _fb.put(\"question\", questions.get(i).getQuestion());\r\n                                                _fb.put(\"issue\", feedbackOptions[selectedFeedbackOption[i]]);\r\n                                                _fb.put(\"section\", targetSection);\r\n                                                _fb.put(\"subject\", targetSubject);\r\n                                                */\r\n/*_fb.put(\"student\", studentName);*//*\r\n\r\n */\r\n/*_fb.put(\"date\", \"\"+Calendar.getInstance().getTimeInMillis());*//*\r\n\r\n                                                if (targetSection == \"lt\") {\r\n                                                    _fb.put(\"testID\", getIntent().getStringExtra(\"tid\"));\r\n                                                } else {\r\n                                                    _fb.put(\"chapter\", targetChapter);\r\n                                                }\r\n                                                //DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + (++count));\r\n                                                DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + Calendar.getInstance().getTimeInMillis());\r\n                                                batch.set(nycRef, _fb);\r\n                                            }\r\n                                        }\r\n                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n                                                findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n                                                if (targetSection == \"lt\") {\r\n                                                    (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);\r\n                                                    if(!pastResultLT){\r\n                                                        findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n                                                    }else{\r\n                                                        findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                        findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                                    }\r\n                                                } else {\r\n                                                    findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                    findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n                                        findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n                                        if (targetSection == \"lt\") {\r\n                                            (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);\r\n                                            if(!pastResultLT){\r\n                                                findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n                                            }else{\r\n                                                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                            }\r\n                                        } else {\r\n                                            findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                            findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        //cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        marksUploaded = true;\r\n        pastResultLT = true;\r\n        tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n        tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n        tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n        String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n        String[] str_ans = sub_list.split(\"_\");\r\n        sub_ans = new int[str_ans.length];\r\n        for (int i = 0; i < str_ans.length; i++)\r\n            sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n\r\n        accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n        total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestResultActivity.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/java/com/example/itifighter/TestResultActivity.java	(date 1607794976243)
@@ -1,369 +1,3 @@
-/*
-package com.example.itifighter;
-
-import android.annotation.SuppressLint;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.MotionEvent;
-import android.view.View;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatActivity;
-
-import com.example.itifighterAdmin.Question;
-import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.OnSuccessListener;
-import com.google.android.gms.tasks.Task;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.firestore.CollectionReference;
-import com.google.firebase.firestore.DocumentReference;
-import com.google.firebase.firestore.DocumentSnapshot;
-import com.google.firebase.firestore.EventListener;
-import com.google.firebase.firestore.FirebaseFirestore;
-import com.google.firebase.firestore.FirebaseFirestoreException;
-import com.google.firebase.firestore.QuerySnapshot;
-import com.google.firebase.firestore.WriteBatch;
-
-import java.io.Serializable;
-import java.math.BigDecimal;
-import java.math.RoundingMode;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Calendar;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Objects;
-
-public class TestResultActivity extends AppCompatActivity {
-
-    List<Question> questions;
-    int[] sub_ans, selectedFeedbackOption;
-    int total_marks = 0;
-    long timeLeft;
-    double accuracy = 0.0;
-    int tpq = 0;
-    int marks_obtained = 0;
-    int _mpq = 1;
-    boolean pastResultLT = false;
-    String[] feedbackOptions = {"Wrong Question", "Wrong Options", "Incomplete Question", "Incorrect Grammar", "Question out of syllabus",
-            "Question on old pattern", "Repeated Question"};
-    boolean marksUploaded = false;
-
-    int tca = 0, tra = 0, tsq = 0;
-    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;
-    String targetSection, targetSubject, targetChapter;
-    String finalTCID;
-
-    CollectionReference mDatabaseReference;
-
-    @SuppressLint({"WrongViewCast", "ClickableViewAccessibility"})
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_result_xyz);
-
-
-        findViewById(R.id.ResultLL).setVisibility(View.INVISIBLE);
-        findViewById(R.id.UploadingTXT).setVisibility(View.VISIBLE);
-
-        final TextView cbt = findViewById(R.id.ContinueBTNRT);
-        cbt.setVisibility(View.INVISIBLE);
-        cbt.setOnTouchListener(new View.OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                if (event.getAction() == MotionEvent.ACTION_UP) {
-                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {
-                        // your action for drawable click event
-                        FinishExam();
-                        return true;
-                    }
-                }
-                return true;
-            }
-        });
-
-        targetSection = getIntent().getStringExtra("section");
-        targetSubject = getIntent().getStringExtra("subject");
-        targetChapter = getIntent().getStringExtra("chapter");
-        timeLeft = getIntent().getLongExtra("timeLeft", 0);
-        questions = (List<Question>) getIntent().getSerializableExtra("questions");
-        _mpq = getIntent().getIntExtra("_mpq", 1);
-
-        finalTCID = targetSection.equals("lt") ? getIntent().getStringExtra("tid") : targetChapter;
-
-        if (targetSection.equals("lt")) {
-            mDatabaseReference = FirebaseFirestore.getInstance().collection("section").document(targetSection).collection("branch").document(targetSubject).collection("chapter").document(targetChapter).collection("tests").document(finalTCID).collection("scoreboard");
-        } else {
-            mDatabaseReference = FirebaseFirestore.getInstance().collection("section").document(targetSection).collection("branch").document(targetSubject).collection("chapter").document(finalTCID).collection("scoreboard");
-        }
-
-        MO = findViewById(R.id.marksObtained);
-        TM = findViewById(R.id.totalMarks);
-        TCA = findViewById(R.id.TCA);
-        TRA = findViewById(R.id.TRA);
-        TSQ = findViewById(R.id.TSQ);
-        Accuracy = findViewById(R.id.Accuracy);
-        TimePerQuestion = findViewById(R.id.TimePerQuestion);
-
-
-        total_marks = _mpq * questions.size();
-        TM.setText("" + (questions.size() * _mpq));
-
-        int total_time_taken = 0;
-
-        if (getIntent().getStringExtra("is_past_result") != null && getIntent().getStringExtra("is_past_result").contains("true")) {
-            marksUploaded = true;
-            pastResultLT = true;
-            tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_skipped")));
-            tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_correct")));
-            tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_attempted"))) - tca;
-            String sub_list = Objects.requireNonNull(getIntent().getStringExtra("answer_key"));
-            _mpq = getIntent().getIntExtra("_mpq", 1);
-            String[] str_ans = sub_list.split("_");
-            sub_ans = new int[str_ans.length];
-            for (int i = 0; i < str_ans.length; i++)
-                sub_ans[i] = Integer.parseInt(str_ans[i]);
-            findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
-            findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
-
-            if (targetSection == "lt") {
-
-            } else {
-                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
-                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
-            }
-            accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra("accuracy")));
-            total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("tpq")));
-
-        } else {
-            findViewById(R.id.ResultLL).setVisibility(View.GONE);
-            sub_ans = getIntent().getIntArrayExtra("sub_ans");
-            selectedFeedbackOption = getIntent().getIntArrayExtra("selectedFeedbackOption");
-            //Toast.makeText(this, "total ques: total ans: "+questions.size()+" : "+sub_ans.length, Toast.LENGTH_LONG).show();
-
-            for (int i = 0; i < sub_ans.length; i++) {
-                //Toast.makeText(this, ""+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();
-                if (sub_ans[i] == -1) {
-                    tsq++;
-                } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {
-                    marks_obtained += _mpq;
-                    tca++;
-                } else {
-                    tra++;
-                }
-            }
-            total_time_taken = 0;
-            accuracy = ((((double) tca) / (tca + tra)) * 100.0);
-            accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();
-            if (tca + tra > 0) {
-                Accuracy.setText("" + accuracy);
-                total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra("timer", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));
-            }
-            tpq = total_time_taken;
-
-            UploadData();
-        }
-
-
-        int timerValue = getIntent().getIntExtra("timer", 60);
-        Toast.makeText(this, "tca=" + tca + " tra=" + tra + " timerValue=" + timerValue + " timeLeft=" + timeLeft, Toast.LENGTH_SHORT).show();
-        if (tca + tra > 0) {
-            Accuracy.setText("" + accuracy);
-        } else {
-            Accuracy.setText("0");
-        }
-        TimePerQuestion.setText("" + total_time_taken);
-        MO.setText("" + (tca * _mpq));
-        TCA.setText("" + tca + " Correct");
-        TRA.setText("" + tra + " Incorrect");
-        ;
-        TSQ.setText("" + tsq + " Skipped");
-    }
-
-    void UploadData() {
-        final String uuid = FirebaseAuth.getInstance().getCurrentUser().getUid();
-        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection("users").document("" + uuid);
-        final DocumentReference UserTestRecordDoc = userDoc.collection("scoreboard").document("" + targetSection).collection("test").document("" + finalTCID);
-        final float percentageMarks = (tca * _mpq) / total_marks;
-        double userRecordScore = targetSection.equals("mt") ? percentageMarks : targetSection.equals("lt") ? percentageMarks * 2 : percentageMarks * 1.5;
-
-        Map<String, String> userTestRecordMap = new HashMap<>();
-        userTestRecordMap.put("score", "" + userRecordScore);
-        userTestRecordMap.put("total_skipped", "" + tsq);
-        userTestRecordMap.put("total_attempted", "" + (tca + tra));
-        userTestRecordMap.put("total_correct", "" + tca);
-        userTestRecordMap.put("_mpq", "" + _mpq);
-        userTestRecordMap.put("accuracy", "" + accuracy);
-        userTestRecordMap.put("tpq", "" + tpq);
-        String answerString = "";
-        for (int n : sub_ans)
-            answerString += n + "_";
-        userTestRecordMap.put("answer_key", answerString.substring(0, answerString.length() - 1));
-
-        UserTestRecordDoc.set(userTestRecordMap);
-
-        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {
-            @Override
-            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {
-                if (e != null) {
-                    //Log.w(TAG, "Listen failed.", e);
-                    return;
-                }
-                if (snapshot != null && snapshot.exists()) {
-                    final String studentName = snapshot.getString("Name");
-                    //Log.d(TAG, "Current data: " + snapshot.getData());
-                    Map<String, String> scoreboard = new HashMap<>();
-                    scoreboard.put("Score", "" + (tca * _mpq));
-                    scoreboard.put("name", "" + studentName);
-                    DocumentReference reference = mDatabaseReference.document("" + uuid);
-                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {
-                        @Override
-                        public void onSuccess(Void aVoid) {
-                            //Toast.makeText(TestResultActivity.this, "score uploaded in database for user: "+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();
-                            marksUploaded = true;
-                            //((TextView)findViewById(R.id.UploadingTXT)).setText("uploading feedback, please wait..");
-                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection("common").document("post test").collection("feedback");
-                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection("users").document("" + uuid).collection("feedback");
-                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-                                @Override
-                                public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                                    if (task.isSuccessful()) {
-                                        int count = task.getResult().size();
-                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();
-                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {
-                                            if (selectedFeedbackOption[i] > -1) {
-                                                Map<String, String> _fb = new HashMap<>();
-                                                _fb.put("question", questions.get(i).getQuestion());
-                                                _fb.put("issue", feedbackOptions[selectedFeedbackOption[i]]);
-                                                _fb.put("section", targetSection);
-                                                _fb.put("subject", targetSubject);
-                                                */
-/*_fb.put("student", studentName);*//*
-
- */
-/*_fb.put("date", ""+Calendar.getInstance().getTimeInMillis());*//*
-
-                                                if (targetSection == "lt") {
-                                                    _fb.put("testID", getIntent().getStringExtra("tid"));
-                                                } else {
-                                                    _fb.put("chapter", targetChapter);
-                                                }
-                                                //DocumentReference nycRef = feedbackBasePath.document("Feedback_" + (++count));
-                                                DocumentReference nycRef = feedbackBasePath.document("Feedback_" + Calendar.getInstance().getTimeInMillis());
-                                                batch.set(nycRef, _fb);
-                                            }
-                                        }
-                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {
-                                            @Override
-                                            public void onComplete(@NonNull Task<Void> task) {
-                                                findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
-                                                findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
-
-                                                if (targetSection == "lt") {
-                                                    (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);
-                                                    if(!pastResultLT){
-                                                        findViewById(R.id.ResultLL).setVisibility(View.GONE);
-                                                    }else{
-                                                        findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
-                                                        findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
-                                                    }
-                                                } else {
-                                                    findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
-                                                    findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
-                                                }
-                                            }
-                                        });
-                                    } else {
-                                        findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
-                                        findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
-
-                                        if (targetSection == "lt") {
-                                            (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);
-                                            if(!pastResultLT){
-                                                findViewById(R.id.ResultLL).setVisibility(View.GONE);
-                                            }else{
-                                                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
-                                                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
-                                            }
-                                        } else {
-                                            findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
-                                            findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
-                                        }
-                                    }
-                                }
-                            });
-                        }
-                    });
-                }
-            }
-        });
-    }
-
-    public void CheckLeaderBoard(View view) {
-        Intent intent = new Intent(this, TestLeaderBoardActivity.class);
-        intent.putExtra("section", targetSection);
-        intent.putExtra("subject", targetSubject);
-        intent.putExtra("chapter", targetChapter);
-        intent.putExtra("tid", finalTCID);
-        startActivity(intent);
-    }
-
-    public void TakeARetest(View view) {
-        if (targetSection.contains("lt"))
-            return;
-        Intent myIntent = new Intent(this, TestInstructionsActivity.class);
-        //clears all other activities from stack and makes the new one the root of stack
-        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        myIntent.putExtra("section", targetSection);
-        myIntent.putExtra("subject", targetSubject);
-        myIntent.putExtra("chapter", targetChapter);
-        myIntent.putExtra("questions", (Serializable) questions);
-        myIntent.putExtra("_mpq", _mpq);
-        myIntent.putExtra("timer", getIntent().getIntExtra("timer", 60));
-        myIntent.putExtra("title", getIntent().getStringExtra("title"));
-        startActivity(myIntent);
-    }
-
-    @Override
-    public void onBackPressed() {
-        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
-        if (marksUploaded) finish();
-        else {
-            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    public void FinishExam() {
-        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
-        if (marksUploaded) finish();
-        else {
-            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    public void FinishExam2(View view) {
-        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
-        if (marksUploaded) finish();
-        else {
-            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    public void CheckAnswerSheet(View view) {
-        Intent intent = new Intent(this, TestAnswerSheetActivity.class);
-        intent.putExtra("questions", (Serializable) questions);
-        intent.putExtra("answer_key", (Serializable) sub_ans);
-        if (marksUploaded) startActivity(intent);
-        else {
-            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
-        }
-    }
-}*/
 
 
 package com.example.itifighter;
Index: app/src/main/res/layout/test_series_chapter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"wrap_content\"\r\ntools:context=\".LiveTestXyz\"\r\nandroid:orientation=\"vertical\"\r\nandroid:baselineAligned=\"false\">\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:baselineAligned=\"false\">\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\">\r\n            <ImageView\r\n                android:id=\"@+id/testxy_image_view\"\r\n                android:layout_width=\"70dp\"\r\n                android:layout_height=\"70dp\"\r\n                android:background=\"@drawable/rounded_text\"\r\n                android:layout_margin=\"5dp\"\r\n                android:src=\"@drawable/user\"\r\n                android:contentDescription=\"@string/todo\" />\r\n        </LinearLayout>\r\n        <LinearLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"vertical\">\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:id=\"@+id/testxy_chapter_title\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textStyle=\"bold\"\r\n                    android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                    android:text=\"New Test Model\"/>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:id=\"@+id/testxy_desc_text\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textSize=\"12sp\"\r\n                    android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                    android:text=\"40 Qs  |  70 Mins  |  100 Marks\"/>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:gravity=\"start\">\r\n                <TextView\r\n                    android:id=\"@+id/Test_Price\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:textColor=\"@color/black_overlay\"\r\n                    android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                    android:textSize=\"12sp\"\r\n                    android:text=\"@string/_100_u20b9\"\r\n                    />\r\n                <TextView\r\n                    android:id=\"@+id/Test_FPrice\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:textColor=\"@color/black_overlay\"\r\n                    android:layout_marginStart=\"10sp\"\r\n                    android:textSize=\"12sp\"\r\n                    android:text=\"FREE\"\r\n                    />\r\n                <LinearLayout\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:gravity=\"end\">\r\n                    <TextView\r\n                        android:id=\"@+id/counterTime\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginEnd=\"@dimen/dimen_20dp\"\r\n                        android:textSize=\"12sp\"\r\n                        android:textColor=\"@color/black\"/>\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\">\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:background=\"@color/grey\"\r\n            android:layout_height=\"2dp\"/>\r\n    </LinearLayout>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/test_series_chapter.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
+++ app/src/main/res/layout/test_series_chapter.xml	(date 1607795129638)
@@ -20,7 +20,6 @@
                 android:layout_height="70dp"
                 android:background="@drawable/rounded_text"
                 android:layout_margin="5dp"
-                android:src="@drawable/user"
                 android:contentDescription="@string/todo" />
         </LinearLayout>
         <LinearLayout
@@ -40,8 +39,7 @@
                     android:layout_weight="1"
                     android:textColor="@color/black"
                     android:textStyle="bold"
-                    android:layout_marginStart="@dimen/dimen_20dp"
-                    android:text="New Test Model"/>
+                    android:layout_marginStart="@dimen/dimen_20dp"/>
             </LinearLayout>
             <LinearLayout
                 android:layout_width="match_parent"
@@ -54,8 +52,7 @@
                     android:layout_height="wrap_content"
                     android:layout_weight="1"
                     android:textSize="12sp"
-                    android:layout_marginStart="@dimen/dimen_20dp"
-                    android:text="40 Qs  |  70 Mins  |  100 Marks"/>
+                    android:layout_marginStart="@dimen/dimen_20dp"/>
             </LinearLayout>
             <LinearLayout
                 android:layout_width="match_parent"
@@ -78,7 +75,6 @@
                     android:textColor="@color/black_overlay"
                     android:layout_marginStart="10sp"
                     android:textSize="12sp"
-                    android:text="FREE"
                     />
                 <LinearLayout
                     android:layout_width="0dp"
