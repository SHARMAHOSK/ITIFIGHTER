Index: app/src/main/java/com/example/itifighter/PreviousPaper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnCanceledListener;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class PreviousPaper extends Fragment {\r\n\r\n\r\n    private int currentLayer = 0;\r\n    private String currentPdf = \"\";\r\n    //private int currentSubjectPos = 0, currentExamPos = 0;  //records which item was clicked in previous list\r\n    private ArrayList<CustomListItem> Subjects, Exams;\r\n    private ListView listView;\r\n    private ArrayList<String> PdfS, pdfFile, SubjectIds, ExamIds;\r\n    private ArrayList<CustomListItem> PdfS_CL;\r\n    private FirebaseFirestore db;\r\n    private ProgressDialog dialog;\r\n    private Context mContext;\r\n    private ImageButton back;\r\n    private ArrayAdapter adapter;\r\n    private String status=\"\",curruntSubjectPdf=\"\",currentChapterPdf=\"\",curruntSubject=\"\",curruntChapter=\"\";\r\n\r\n    public PreviousPaper() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n\r\n    public void CustomBackButton(){\r\n\r\n        switch (currentLayer){\r\n            case 1: LoadSubjects();\r\n            break;\r\n            case 2: LoadExams();\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);\r\n        //this.spinner = R.layout.fragment_previous_paper.findViewById(R.id.progressBar1);\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        listView = ppView.findViewById(R.id.branch_list);\r\n        back = ppView.findViewById(R.id.CustomBackButtonPP);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        back.setVisibility(View.INVISIBLE);\r\n        CustomizeView();\r\n        return ppView;\r\n    }\r\n\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        SubjectIds.add(document.getId());\r\n                        Subjects.add(new CustomListItem(document.getString(/*\"Name\"*/\"name\"),\r\n                                        document.getString(/*\"description\"*/\"desc\"), \"pp\"));\r\n                    }\r\n\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    /*listView = (ListView) _ppView.findViewById(R.id.branch_list);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            curruntSubject = SubjectIds.get(position);\r\n                            LoadExams();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadExams(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").document(curruntSubject).collection(\"exam\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Exams = new ArrayList<>();\r\n                    ExamIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        ExamIds.add(document.getId());\r\n                        Exams.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"), \"pp/chapter\"));\r\n                    }\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            curruntChapter = ExamIds.get(position);\r\n                            LoadPdfS();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadExams();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadPdfS(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch/\"+curruntSubject+\"/exam\").document(curruntChapter).collection(\"pdf\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    PdfS = new ArrayList<>();\r\n                    PdfS_CL = new ArrayList<>();\r\n                    pdfFile = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        PdfS.add(document.getId());\r\n                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString(\"price\"))),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"discount\")))));\r\n                        pdfFile.add(\"\"+document.getString(\"Name\"));\r\n                    }\r\n                    adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            String price = String.valueOf(PdfS_CL.get(position).getPrice());\r\n                            String discount = String.valueOf(PdfS_CL.get(position).getDiscount());\r\n                            String finalPrice = getFinalPrice(price,discount);\r\n                            currentPdf = PdfS.get(position);\r\n                            setPaymentNotRequiredDetails();\r\n                            if(paymentNotRequired(finalPrice)){\r\n                                OpenPdf(position);\r\n                            }\r\n                            else{\r\n                                Intent intent = new Intent(getContext(), PaytmPaymentpp.class);\r\n                                intent.putExtra(\"price\",price);\r\n                                intent.putExtra(\"discount\",discount);\r\n                                intent.putExtra(\"titleName\",pdfFile.get(position));\r\n                                intent.putExtra(\"curruntPdf\",currentPdf);\r\n                                intent.putExtra(\"currentSubject\",curruntSubject);\r\n                                intent.putExtra(\"currentChapter\",curruntChapter);\r\n                                startActivity(intent);\r\n                            }\r\n                        }\r\n\r\n                        private boolean paymentNotRequired(String finalPrice) {\r\n                            if(Double.parseDouble(finalPrice)<1) return true;\r\n                            else return (status.equals(\"1\") && currentChapterPdf.equals(curruntChapter) && curruntSubjectPdf.equals(curruntSubject));\r\n                        }\r\n\r\n                        private String getFinalPrice(String price, String discount) {\r\n                            double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);\r\n                            return  String.valueOf((price1)-((price1*discount1)/100));\r\n                        }\r\n\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadPdfS();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setPaymentNotRequiredDetails() {\r\n        String Uid = FirebaseAuth.getInstance().getUid();\r\n        assert Uid != null;\r\n        try{\r\n            FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                        .document(\"pp\").collection(\"ProductId\").document(currentPdf)\r\n                        .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                        status = documentSnapshot.getString(\"status\");\r\n                        curruntSubjectPdf = documentSnapshot.getString(\"currentSubject\");\r\n                        currentChapterPdf = documentSnapshot.getString(\"currentChapter\");\r\n                    }\r\n                }\r\n            }).addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    Toast.makeText(getContext(),\"completed\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(getContext(),\"failed\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnCanceledListener(new OnCanceledListener() {\r\n                @Override\r\n                public void onCanceled() {\r\n                    Toast.makeText(getContext(),\"Canciled\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }catch (Exception e){\r\n            Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void OpenPdf(int position) {\r\n        Intent intent = new Intent(mContext, LoadPdf.class);\r\n        intent.putExtra(\"pdf\", pdfFile.get(position));\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n    private void CustomizeView() {\r\n        LoadSubjects();\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/PreviousPaper.java	(revision 5c4dc090ab4273e4d94df201f5e1e19abeffd5f6)
+++ app/src/main/java/com/example/itifighter/PreviousPaper.java	(date 1607962674112)
@@ -226,13 +226,21 @@
         });
     }
 
+    private boolean paymentNotRequired(String finalPrice) {
+        if(Double.parseDouble(finalPrice)<1) return true;
+        else return (status.equals("1") && currentChapterPdf.equals(curruntChapter) && curruntSubjectPdf.equals(curruntSubject));
+    }
+    private String getFinalPrice(String price, String discount) {
+        double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);
+        return  String.valueOf((price1)-((price1*discount1)/100));
+    }
     private void setPaymentNotRequiredDetails() {
         String Uid = FirebaseAuth.getInstance().getUid();
         assert Uid != null;
         try{
-            FirebaseFirestore.getInstance().collection("users").document(Uid).collection("Products")
-                        .document("pp").collection("ProductId").document(currentPdf)
-                        .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+            db.collection("users").document(Uid).collection("Products")
+                    .document("pp").collection("ProductId").document(currentPdf)
+                    .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
                 @Override
                 public void onSuccess(DocumentSnapshot documentSnapshot) {
                     if(documentSnapshot!=null && documentSnapshot.exists()){
@@ -257,6 +265,7 @@
                     Toast.makeText(getContext(),"Canciled",Toast.LENGTH_SHORT).show();
                 }
             });
+
         }catch (Exception e){
             Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();
         }
Index: app/src/main/java/com/example/itifighter/TestSeries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighter.TestSeriesX.CustomListItemX;\r\nimport com.example.itifighter.TestSeriesX.CustomListItemY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterX;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class TestSeries extends Fragment {\r\n\r\n    private String currentSubject,currentChapter,currentTest;\r\n    private ArrayList<CustomListItem> Subjects;\r\n    private ArrayList<CustomListItemX> Chapters;\r\n    private ArrayList<CustomListItemY> Tests;\r\n    private ListView listView;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n    private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;\r\n    private ImageButton back;\r\n    private ProgressDialog dialog;\r\n\r\n    private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters\r\n    public TestSeries() { }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);\r\n        listView = mtView.findViewById(R.id.testxtRecycle);\r\n        back = mtView.findViewById(R.id.CustomBackButtonTS);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        LoadSubjects();\r\n        return mtView;\r\n    }\r\n    public void CustomBackButton(){\r\n        switch (currentLayer){\r\n            case 1:\r\n                LoadSubjects();\r\n           case 2:\r\n                LoadChapters();\r\n        }\r\n    }\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Subjects.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\r\n                                \"ts\"));\r\n                        SubjectId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubject = SubjectId.get(position);\r\n                            currentSubjectPos = position;\r\n                            LoadChapters();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    void LoadChapters(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").document(currentSubject)\r\n                .collection(\"chapter\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Chapters = new ArrayList<>();\r\n                    ChapterId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Chapters.add(new CustomListItemX(document.getString(\"name\"), String.valueOf(document.get(\"cc\")) , \"ts\",document.getId(),document.getString(\"month1\"),document.getString(\"month2\"),document.getString(\"month3\"),document.getString(\"price1\"),document.getString(\"price2\"),document.getString(\"price3\"),document.getString(\"discount1\"),document.getString(\"discount2\"),document.getString(\"discount3\")));\r\n                        ChapterId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItemX> adapter = new CustomListViewArrayAdapterX(mContext,0,Chapters,currentSubject,ChapterId);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {\r\n                            String Uid = FirebaseAuth.getInstance().getUid();\r\n                            assert Uid != null;\r\n                            FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                                    .document(\"ts\").collection(\"ProductId\").document(ChapterId.get(i))\r\n                                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                            if(task.isSuccessful()){\r\n                                                DocumentSnapshot documentSnapshot = task.getResult();\r\n                                                if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                                                    currentChapter = ChapterId.get(i);\r\n                                                    currentChapterPos = i;\r\n                                                    LoadTest();\r\n                                                }\r\n                                                else{\r\n                                                    Intent intent = new Intent(getContext(), PaytmPayment.class);\r\n                                                    intent.putExtra(\"ProductId\",Chapters.get(i).getId());\r\n                                                    intent.putExtra(\"month1\",Chapters.get(i).getMonth1());\r\n                                                    intent.putExtra(\"month2\",Chapters.get(i).getMonth2());\r\n                                                    intent.putExtra(\"month3\",Chapters.get(i).getMonth3());\r\n                                                    intent.putExtra(\"price1\",Chapters.get(i).getPrice1());\r\n                                                    intent.putExtra(\"price2\",Chapters.get(i).getPrice2());\r\n                                                    intent.putExtra(\"price3\",Chapters.get(i).getPrice3());\r\n                                                    intent.putExtra(\"discount1\",Chapters.get(i).getDiscount1());\r\n                                                    intent.putExtra(\"discount2\",Chapters.get(i).getDiscount2());\r\n                                                    intent.putExtra(\"discount3\",Chapters.get(i).getDiscount3());\r\n                                                    intent.putExtra(\"currentSection\",Chapters.get(i).getImagex());\r\n                                                    intent.putExtra(\"titleName\",Chapters.get(i).getTopicHeader());\r\n                                                    intent.putExtra(\"countTest\",Chapters.get(i).getTest());\r\n                                                    intent.putExtra(\"currentSubject\",currentSubject);\r\n                                                    intent.putExtra(\"currentChapter\",ChapterId.get(i));\r\n                                                    mContext.startActivity(intent);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadTest(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    Tests = new ArrayList<>();\r\n                    TestId = new ArrayList<>();\r\n                    MPQ = new ArrayList<>();\r\n                    Timmr = new ArrayList<>();\r\n                    Tittl = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        int duration = Integer.parseInt(String.valueOf(document.get(\"duration\"))), marks = Integer.parseInt(String.valueOf(document.get(\"marks\"))), NOQ = Integer.parseInt(String.valueOf(document.get(\"NOQs\")));\r\n                        int score = marks*NOQ;\r\n                        Tests.add(new CustomListItemY(document.getId(),\r\n                                document.getString(\"title\"), String.valueOf(duration),\r\n                                String.valueOf(NOQ), String.valueOf(score)));\r\n                        TestId.add(document.getId());\r\n                        MPQ.add(String.valueOf(marks));\r\n                        Timmr.add(String.valueOf(duration));\r\n                        Tittl.add(document.getString(\"title\"));\r\n                    }\r\n                    listView.setAdapter(new CustomListViewArrayAdapterZ(mContext,0,Tests,currentSubject,currentChapter));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                                currentTest = TestId.get(i);\r\n                                currentTestPos = i;\r\n                                 LoadExam();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void LoadExam() {\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").document(currentTest).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n\r\n\r\n                            final ArrayList<Object> questions = new ArrayList<>();\r\n                            for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                            }\r\n\r\n                            final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                            final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n                            final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"ts\").collection(\"test\");\r\n                            UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    boolean found = false;\r\n                                                    String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                                    String sub_list = \"\";\r\n                                                    String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                                    String targetChapterID = currentChapter;\r\n                                                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                                        if (document.getId().equals(targetChapterID)) {\r\n                                                            found = true;\r\n                                                            total_attempted = document.getString(\"total_attempted\");\r\n                                                            total_skipped = document.getString(\"total_skipped\");\r\n                                                            total_correct = document.getString(\"total_correct\");\r\n                                                            accuracy = document.getString(\"accuracy\");\r\n                                                            tpq = document.getString(\"tpq\");\r\n                                                            _mpq = document.getString(\"_mpq\");\r\n                                                            sub_list = document.getString(\"answer_key\");\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (found) {\r\n                                                        //load result activity\r\n                                                            Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                                            myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                                            myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                                            myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                                            myIntent.putExtra(\"total_correct\", total_correct);\r\n                                                            myIntent.putExtra(\"section\", \"ts\");\r\n                                                            myIntent.putExtra(\"subject\", currentSubject);\r\n                                                            myIntent.putExtra(\"chapter\", currentChapter);\r\n                                                            myIntent.putExtra(\"questions\", questions);\r\n                                                            myIntent.putExtra(\"answer_key\", sub_list);\r\n                                                            assert _mpq != null;\r\n                                                            myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                                            myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentTestPos)));\r\n                                                            myIntent.putExtra(\"title\", Tittl.get(currentTestPos));\r\n                                                            myIntent.putExtra(\"accuracy\", accuracy);\r\n                                                            myIntent.putExtra(\"tpq\", tpq);\r\n                                                            dialog.dismiss();\r\n                                                            startActivity(myIntent);\r\n                                                    } else {\r\n                                                        Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                        myIntent.putExtra(\"section\", \"ts\");\r\n                                                        myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                        myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                        myIntent.putExtra(\"questions\", questions);\r\n                                                        myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"title\", Tittl.get(currentChapterPos) + \" (Test Series)\");\r\n                                                        dialog.dismiss();\r\n                                                        startActivity(myIntent);\r\n                                                        }\r\n                                                }else {\r\n                                                  /*  Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                    myIntent.putExtra(\"section\", \"ts\");\r\n                                                    myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                    myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                    myIntent.putExtra(\"questions\", questions);\r\n                                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"title\", Tittl.get(currentChapterPos));\r\n                                                    dialog.dismiss();\r\n                                                    startActivity(myIntent);*/\r\n                                                }\r\n                                        }\r\n                            });\r\n\r\n\r\n\r\n                } else {\r\n                    Toast.makeText(mContext,\"no test found\",Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestSeries.java	(revision 5c4dc090ab4273e4d94df201f5e1e19abeffd5f6)
+++ app/src/main/java/com/example/itifighter/TestSeries.java	(date 1607960378489)
@@ -51,8 +51,8 @@
     private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;
     private ImageButton back;
     private ProgressDialog dialog;
-
     private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters
+
     public TestSeries() { }
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -61,8 +61,7 @@
         mContext = getContext();
     }
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);
         listView = mtView.findViewById(R.id.testxtRecycle);
         back = mtView.findViewById(R.id.CustomBackButtonTS);
@@ -129,7 +128,7 @@
         db.collection("section").document("ts")
                 .collection("branch").document(currentSubject)
                 .collection("chapter").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-            @RequiresApi(api = Build.VERSION_CODES.M)
+                    @RequiresApi(api = Build.VERSION_CODES.M)
             @Override
             public void onComplete(@NonNull Task<QuerySnapshot> task) {
                 if (task.isSuccessful()) {
@@ -301,18 +300,7 @@
                                                         dialog.dismiss();
                                                         startActivity(myIntent);
                                                         }
-                                                }else {
-                                                  /*  Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);
-                                                    myIntent.putExtra("section", "ts");
-                                                    myIntent.putExtra("subject", SubjectId.get(currentSubjectPos));
-                                                    myIntent.putExtra("chapter", ChapterId.get(currentChapterPos));
-                                                    myIntent.putExtra("questions", questions);
-                                                    myIntent.putExtra("_mpq", Integer.parseInt(MPQ.get(currentChapterPos)));
-                                                    myIntent.putExtra("timer", Integer.parseInt(Timmr.get(currentChapterPos)));
-                                                    myIntent.putExtra("title", Tittl.get(currentChapterPos));
-                                                    dialog.dismiss();
-                                                    startActivity(myIntent);*/
-                                                }
+                                                }else { }
                                         }
                             });
 
