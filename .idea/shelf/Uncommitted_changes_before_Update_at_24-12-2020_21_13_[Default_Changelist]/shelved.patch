Index: app/src/main/java/com/example/itifighter/ui/home/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter.ui.home;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.example.itifighter.CustomViewPager;\r\nimport com.example.itifighter.MyAdapter;\r\nimport com.example.itifighter.R;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.bottomnavigation.LabelVisibilityMode;\r\nimport com.google.android.material.tabs.TabLayout;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n\r\n\r\n    private TabLayout tabLayout;\r\n    BottomNavigationView bnv;\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             final ViewGroup container, Bundle savedInstanceState) {\r\n        final View root = inflater.inflate(R.layout.fragment_menu_home, container, false);\r\n        /*tabLayout = root.findViewById(R.id.tabLayoutX);*/\r\n        bnv = root.findViewById(R.id.bottom_navigation);m\r\n        final CustomViewPager viewPager = root.findViewById(R.id.viewPagerX);\r\n        viewPager.setPagingEnabled(false);\r\n        bnv.setSelectedItemId(R.id.page_lt);\r\n        bnv.setItemIconTintList(null);\r\n        bnv.setLabelVisibilityMode(LabelVisibilityMode.LABEL_VISIBILITY_SELECTED);   //LABEL_VISIBILITY_SELECTED: The label is only shown on the selected navigation item\r\n        bnv.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()){\r\n                    case R.id.page_pp:\r\n                        // Respond to navigation item 1 click\r\n                        viewPager.setCurrentItem(0);\r\n                        return true;\r\n                    case R.id.page_mt:\r\n                        // Respond to navigation item 2 click\r\n                        viewPager.setCurrentItem(1);\r\n                        return true;\r\n                    case R.id.page_lt:\r\n                        // Respond to navigation item 3 click\r\n                        viewPager.setCurrentItem(2);\r\n                        return true;\r\n                    case R.id.page_ts:\r\n                        // Respond to navigation item 4 click\r\n                        viewPager.setCurrentItem(3);\r\n                        return true;\r\n                    case R.id.page_mts:\r\n                        // Respond to navigation item 5 click\r\n                        viewPager.setCurrentItem(4);\r\n                        return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n        });\r\n        /*tabLayout.addTab(tabLayout.newTab().setText(\"Previous Paper\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Mock Test\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Daily Live Test\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Test Series\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"My Test Series\"));\r\n        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);*/\r\n        System.out.println(\"hello\");\r\n        final MyAdapter adapter = new MyAdapter(getParentFragmentManager(), /*tabLayout.getTabCount()*/5);\r\n        new Runnable(){\r\n            @Override\r\n            public void run() {\r\n                viewPager.clearOnPageChangeListeners();\r\n                viewPager.setAdapter(adapter);\r\n                Objects.requireNonNull(viewPager.getAdapter()).finishUpdate(container);\r\n            }\r\n        }.run();\r\n        System.out.println(\"sk\");\r\n        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));\r\n        viewPager.setCurrentItem(2);\r\n        /*tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                viewPager.setCurrentItem(tab.getPosition());\r\n            }\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n            }\r\n        });\r\n        tabLayout.post(mTabLayout_config);*/\r\n        return root;\r\n    }\r\n    /*protected Runnable mTabLayout_config = new Runnable()\r\n    {\r\n        @Override\r\n        public void run()\r\n        {\r\n            if(tabLayout.getWidth() < requireContext().getResources().getDisplayMetrics().widthPixels)\r\n            {\r\n                tabLayout.setTabMode(TabLayout.MODE_FIXED);\r\n                ViewGroup.LayoutParams mParams = tabLayout.getLayoutParams();\r\n                mParams.width = ViewGroup.LayoutParams.MATCH_PARENT;\r\n                tabLayout.setLayoutParams(mParams);\r\n            }\r\n            else\r\n            {\r\n                tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);\r\n            }\r\n        }\r\n    };*/\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/ui/home/HomeFragment.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/ui/home/HomeFragment.java	(date 1608291085096)
@@ -1,5 +1,6 @@
 package com.example.itifighter.ui.home;
 
+import android.annotation.SuppressLint;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
@@ -8,7 +9,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
-import androidx.viewpager.widget.ViewPager;
 
 import com.example.itifighter.CustomViewPager;
 import com.example.itifighter.MyAdapter;
@@ -30,13 +30,14 @@
                              final ViewGroup container, Bundle savedInstanceState) {
         final View root = inflater.inflate(R.layout.fragment_menu_home, container, false);
         /*tabLayout = root.findViewById(R.id.tabLayoutX);*/
-        bnv = root.findViewById(R.id.bottom_navigation);m
+        bnv = root.findViewById(R.id.bottom_navigation);
         final CustomViewPager viewPager = root.findViewById(R.id.viewPagerX);
         viewPager.setPagingEnabled(false);
         bnv.setSelectedItemId(R.id.page_lt);
         bnv.setItemIconTintList(null);
         bnv.setLabelVisibilityMode(LabelVisibilityMode.LABEL_VISIBILITY_SELECTED);   //LABEL_VISIBILITY_SELECTED: The label is only shown on the selected navigation item
         bnv.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
+            @SuppressLint("NonConstantResourceId")
             @Override
             public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                 switch (item.getItemId()){
Index: .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38__Default_Changelist_.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38__Default_Changelist_.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_13-12-2020_00_38_[Default_Changelist]" date="1607794764863" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 13-12-2020 00:38 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18__Default_Changelist_.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18__Default_Changelist_.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_14-12-2020_23_18_[Default_Changelist]" date="1607962700811" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 14-12-2020 23:18 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38_[Default_Changelist]/shelved.patch	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_00_38_[Default_Changelist]/shelved.patch	(revision f5367485fe42e341155a27ba38c3e9f870487778)
@@ -1,592 +0,0 @@
-Index: app/src/main/java/com/example/itifighter/TestResultActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>/*\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.WriteBatch;\r\n\r\nimport java.io.Serializable;\r\nimport java.math.BigDecimal;\r\nimport java.math.RoundingMode;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        findViewById(R.id.ResultLL).setVisibility(View.INVISIBLE);\r\n        findViewById(R.id.UploadingTXT).setVisibility(View.VISIBLE);\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        if (getIntent().getStringExtra(\"is_past_result\") != null && getIntent().getStringExtra(\"is_past_result\").contains(\"true\")) {\r\n            marksUploaded = true;\r\n            pastResultLT = true;\r\n            tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n            tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n            tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n            String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n            _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n            String[] str_ans = sub_list.split(\"_\");\r\n            sub_ans = new int[str_ans.length];\r\n            for (int i = 0; i < str_ans.length; i++)\r\n                sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n            findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n            findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n            if (targetSection == \"lt\") {\r\n\r\n            } else {\r\n                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n            }\r\n            accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n            total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n        } else {\r\n            findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n            sub_ans = getIntent().getIntArrayExtra(\"sub_ans\");\r\n            selectedFeedbackOption = getIntent().getIntArrayExtra(\"selectedFeedbackOption\");\r\n            //Toast.makeText(this, \"total ques: total ans: \"+questions.size()+\" : \"+sub_ans.length, Toast.LENGTH_LONG).show();\r\n\r\n            for (int i = 0; i < sub_ans.length; i++) {\r\n                //Toast.makeText(this, \"\"+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();\r\n                if (sub_ans[i] == -1) {\r\n                    tsq++;\r\n                } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {\r\n                    marks_obtained += _mpq;\r\n                    tca++;\r\n                } else {\r\n                    tra++;\r\n                }\r\n            }\r\n            total_time_taken = 0;\r\n            accuracy = ((((double) tca) / (tca + tra)) * 100.0);\r\n            accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();\r\n            if (tca + tra > 0) {\r\n                Accuracy.setText(\"\" + accuracy);\r\n                total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra(\"timer\", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));\r\n            }\r\n            tpq = total_time_taken;\r\n\r\n            UploadData();\r\n        }\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n        ;\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    void UploadData() {\r\n        final String uuid = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n        final DocumentReference UserTestRecordDoc = userDoc.collection(\"scoreboard\").document(\"\" + targetSection).collection(\"test\").document(\"\" + finalTCID);\r\n        final float percentageMarks = (tca * _mpq) / total_marks;\r\n        double userRecordScore = targetSection.equals(\"mt\") ? percentageMarks : targetSection.equals(\"lt\") ? percentageMarks * 2 : percentageMarks * 1.5;\r\n\r\n        Map<String, String> userTestRecordMap = new HashMap<>();\r\n        userTestRecordMap.put(\"score\", \"\" + userRecordScore);\r\n        userTestRecordMap.put(\"total_skipped\", \"\" + tsq);\r\n        userTestRecordMap.put(\"total_attempted\", \"\" + (tca + tra));\r\n        userTestRecordMap.put(\"total_correct\", \"\" + tca);\r\n        userTestRecordMap.put(\"_mpq\", \"\" + _mpq);\r\n        userTestRecordMap.put(\"accuracy\", \"\" + accuracy);\r\n        userTestRecordMap.put(\"tpq\", \"\" + tpq);\r\n        String answerString = \"\";\r\n        for (int n : sub_ans)\r\n            answerString += n + \"_\";\r\n        userTestRecordMap.put(\"answer_key\", answerString.substring(0, answerString.length() - 1));\r\n\r\n        UserTestRecordDoc.set(userTestRecordMap);\r\n\r\n        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    //Log.w(TAG, \"Listen failed.\", e);\r\n                    return;\r\n                }\r\n                if (snapshot != null && snapshot.exists()) {\r\n                    final String studentName = snapshot.getString(\"Name\");\r\n                    //Log.d(TAG, \"Current data: \" + snapshot.getData());\r\n                    Map<String, String> scoreboard = new HashMap<>();\r\n                    scoreboard.put(\"Score\", \"\" + (tca * _mpq));\r\n                    scoreboard.put(\"name\", \"\" + studentName);\r\n                    DocumentReference reference = mDatabaseReference.document(\"\" + uuid);\r\n                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            //Toast.makeText(TestResultActivity.this, \"score uploaded in database for user: \"+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();\r\n                            marksUploaded = true;\r\n                            //((TextView)findViewById(R.id.UploadingTXT)).setText(\"uploading feedback, please wait..\");\r\n                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"common\").document(\"post test\").collection(\"feedback\");\r\n                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid).collection(\"feedback\");\r\n                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                    if (task.isSuccessful()) {\r\n                                        int count = task.getResult().size();\r\n                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();\r\n                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {\r\n                                            if (selectedFeedbackOption[i] > -1) {\r\n                                                Map<String, String> _fb = new HashMap<>();\r\n                                                _fb.put(\"question\", questions.get(i).getQuestion());\r\n                                                _fb.put(\"issue\", feedbackOptions[selectedFeedbackOption[i]]);\r\n                                                _fb.put(\"section\", targetSection);\r\n                                                _fb.put(\"subject\", targetSubject);\r\n                                                */\r\n/*_fb.put(\"student\", studentName);*//*\r\n\r\n */\r\n/*_fb.put(\"date\", \"\"+Calendar.getInstance().getTimeInMillis());*//*\r\n\r\n                                                if (targetSection == \"lt\") {\r\n                                                    _fb.put(\"testID\", getIntent().getStringExtra(\"tid\"));\r\n                                                } else {\r\n                                                    _fb.put(\"chapter\", targetChapter);\r\n                                                }\r\n                                                //DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + (++count));\r\n                                                DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + Calendar.getInstance().getTimeInMillis());\r\n                                                batch.set(nycRef, _fb);\r\n                                            }\r\n                                        }\r\n                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n                                                findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n                                                if (targetSection == \"lt\") {\r\n                                                    (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);\r\n                                                    if(!pastResultLT){\r\n                                                        findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n                                                    }else{\r\n                                                        findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                        findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                                    }\r\n                                                } else {\r\n                                                    findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                    findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n                                        findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n                                        if (targetSection == \"lt\") {\r\n                                            (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);\r\n                                            if(!pastResultLT){\r\n                                                findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n                                            }else{\r\n                                                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                            }\r\n                                        } else {\r\n                                            findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                            findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        marksUploaded = true;\r\n        pastResultLT = true;\r\n        tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n        tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n        tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n        String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n        String[] str_ans = sub_list.split(\"_\");\r\n        sub_ans = new int[str_ans.length];\r\n        for (int i = 0; i < str_ans.length; i++)\r\n            sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n\r\n        accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n        total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/TestResultActivity.java	(revision 1de29cbe87c7b180fa42f3be2356fca4e0761ea5)
-+++ app/src/main/java/com/example/itifighter/TestResultActivity.java	(date 1607794690038)
-@@ -1,4 +1,3 @@
--/*
- package com.example.itifighter;
- 
- import android.annotation.SuppressLint;
-@@ -9,34 +8,14 @@
- import android.widget.TextView;
- import android.widget.Toast;
- 
--import androidx.annotation.NonNull;
--import androidx.annotation.Nullable;
- import androidx.appcompat.app.AppCompatActivity;
- 
- import com.example.itifighterAdmin.Question;
--import com.google.android.gms.tasks.OnCompleteListener;
--import com.google.android.gms.tasks.OnSuccessListener;
--import com.google.android.gms.tasks.Task;
--import com.google.firebase.auth.FirebaseAuth;
- import com.google.firebase.firestore.CollectionReference;
--import com.google.firebase.firestore.DocumentReference;
--import com.google.firebase.firestore.DocumentSnapshot;
--import com.google.firebase.firestore.EventListener;
- import com.google.firebase.firestore.FirebaseFirestore;
--import com.google.firebase.firestore.FirebaseFirestoreException;
--import com.google.firebase.firestore.QuerySnapshot;
--import com.google.firebase.firestore.WriteBatch;
- 
- import java.io.Serializable;
--import java.math.BigDecimal;
--import java.math.RoundingMode;
--import java.util.ArrayList;
--import java.util.Arrays;
--import java.util.Calendar;
--import java.util.Collections;
--import java.util.HashMap;
- import java.util.List;
--import java.util.Map;
- import java.util.Objects;
- 
- public class TestResultActivity extends AppCompatActivity {
-@@ -68,355 +47,8 @@
-         setContentView(R.layout.activity_result_xyz);
- 
- 
--        findViewById(R.id.ResultLL).setVisibility(View.INVISIBLE);
--        findViewById(R.id.UploadingTXT).setVisibility(View.VISIBLE);
--
-         final TextView cbt = findViewById(R.id.ContinueBTNRT);
--        cbt.setVisibility(View.INVISIBLE);
--        cbt.setOnTouchListener(new View.OnTouchListener() {
--            @Override
--            public boolean onTouch(View v, MotionEvent event) {
--                if (event.getAction() == MotionEvent.ACTION_UP) {
--                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {
--                        // your action for drawable click event
--                        FinishExam();
--                        return true;
--                    }
--                }
--                return true;
--            }
--        });
--
--        targetSection = getIntent().getStringExtra("section");
--        targetSubject = getIntent().getStringExtra("subject");
--        targetChapter = getIntent().getStringExtra("chapter");
--        timeLeft = getIntent().getLongExtra("timeLeft", 0);
--        questions = (List<Question>) getIntent().getSerializableExtra("questions");
--        _mpq = getIntent().getIntExtra("_mpq", 1);
--
--        finalTCID = targetSection.equals("lt") ? getIntent().getStringExtra("tid") : targetChapter;
--
--        if (targetSection.equals("lt")) {
--            mDatabaseReference = FirebaseFirestore.getInstance().collection("section").document(targetSection).collection("branch").document(targetSubject).collection("chapter").document(targetChapter).collection("tests").document(finalTCID).collection("scoreboard");
--        } else {
--            mDatabaseReference = FirebaseFirestore.getInstance().collection("section").document(targetSection).collection("branch").document(targetSubject).collection("chapter").document(finalTCID).collection("scoreboard");
--        }
--
--        MO = findViewById(R.id.marksObtained);
--        TM = findViewById(R.id.totalMarks);
--        TCA = findViewById(R.id.TCA);
--        TRA = findViewById(R.id.TRA);
--        TSQ = findViewById(R.id.TSQ);
--        Accuracy = findViewById(R.id.Accuracy);
--        TimePerQuestion = findViewById(R.id.TimePerQuestion);
--
--
--        total_marks = _mpq * questions.size();
--        TM.setText("" + (questions.size() * _mpq));
--
--        int total_time_taken = 0;
--
--        if (getIntent().getStringExtra("is_past_result") != null && getIntent().getStringExtra("is_past_result").contains("true")) {
--            marksUploaded = true;
--            pastResultLT = true;
--            tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_skipped")));
--            tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_correct")));
--            tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_attempted"))) - tca;
--            String sub_list = Objects.requireNonNull(getIntent().getStringExtra("answer_key"));
--            _mpq = getIntent().getIntExtra("_mpq", 1);
--            String[] str_ans = sub_list.split("_");
--            sub_ans = new int[str_ans.length];
--            for (int i = 0; i < str_ans.length; i++)
--                sub_ans[i] = Integer.parseInt(str_ans[i]);
--            findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
--            findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
--
--            if (targetSection == "lt") {
--
--            } else {
--                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--            }
--            accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra("accuracy")));
--            total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("tpq")));
--
--        } else {
--            findViewById(R.id.ResultLL).setVisibility(View.GONE);
--            sub_ans = getIntent().getIntArrayExtra("sub_ans");
--            selectedFeedbackOption = getIntent().getIntArrayExtra("selectedFeedbackOption");
--            //Toast.makeText(this, "total ques: total ans: "+questions.size()+" : "+sub_ans.length, Toast.LENGTH_LONG).show();
--
--            for (int i = 0; i < sub_ans.length; i++) {
--                //Toast.makeText(this, ""+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();
--                if (sub_ans[i] == -1) {
--                    tsq++;
--                } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {
--                    marks_obtained += _mpq;
--                    tca++;
--                } else {
--                    tra++;
--                }
--            }
--            total_time_taken = 0;
--            accuracy = ((((double) tca) / (tca + tra)) * 100.0);
--            accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();
--            if (tca + tra > 0) {
--                Accuracy.setText("" + accuracy);
--                total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra("timer", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));
--            }
--            tpq = total_time_taken;
--
--            UploadData();
--        }
--
--
--        int timerValue = getIntent().getIntExtra("timer", 60);
--        Toast.makeText(this, "tca=" + tca + " tra=" + tra + " timerValue=" + timerValue + " timeLeft=" + timeLeft, Toast.LENGTH_SHORT).show();
--        if (tca + tra > 0) {
--            Accuracy.setText("" + accuracy);
--        } else {
--            Accuracy.setText("0");
--        }
--        TimePerQuestion.setText("" + total_time_taken);
--        MO.setText("" + (tca * _mpq));
--        TCA.setText("" + tca + " Correct");
--        TRA.setText("" + tra + " Incorrect");
--        ;
--        TSQ.setText("" + tsq + " Skipped");
--    }
--
--    void UploadData() {
--        final String uuid = FirebaseAuth.getInstance().getCurrentUser().getUid();
--        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection("users").document("" + uuid);
--        final DocumentReference UserTestRecordDoc = userDoc.collection("scoreboard").document("" + targetSection).collection("test").document("" + finalTCID);
--        final float percentageMarks = (tca * _mpq) / total_marks;
--        double userRecordScore = targetSection.equals("mt") ? percentageMarks : targetSection.equals("lt") ? percentageMarks * 2 : percentageMarks * 1.5;
--
--        Map<String, String> userTestRecordMap = new HashMap<>();
--        userTestRecordMap.put("score", "" + userRecordScore);
--        userTestRecordMap.put("total_skipped", "" + tsq);
--        userTestRecordMap.put("total_attempted", "" + (tca + tra));
--        userTestRecordMap.put("total_correct", "" + tca);
--        userTestRecordMap.put("_mpq", "" + _mpq);
--        userTestRecordMap.put("accuracy", "" + accuracy);
--        userTestRecordMap.put("tpq", "" + tpq);
--        String answerString = "";
--        for (int n : sub_ans)
--            answerString += n + "_";
--        userTestRecordMap.put("answer_key", answerString.substring(0, answerString.length() - 1));
--
--        UserTestRecordDoc.set(userTestRecordMap);
--
--        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {
--            @Override
--            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {
--                if (e != null) {
--                    //Log.w(TAG, "Listen failed.", e);
--                    return;
--                }
--                if (snapshot != null && snapshot.exists()) {
--                    final String studentName = snapshot.getString("Name");
--                    //Log.d(TAG, "Current data: " + snapshot.getData());
--                    Map<String, String> scoreboard = new HashMap<>();
--                    scoreboard.put("Score", "" + (tca * _mpq));
--                    scoreboard.put("name", "" + studentName);
--                    DocumentReference reference = mDatabaseReference.document("" + uuid);
--                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {
--                        @Override
--                        public void onSuccess(Void aVoid) {
--                            //Toast.makeText(TestResultActivity.this, "score uploaded in database for user: "+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();
--                            marksUploaded = true;
--                            //((TextView)findViewById(R.id.UploadingTXT)).setText("uploading feedback, please wait..");
--                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection("common").document("post test").collection("feedback");
--                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection("users").document("" + uuid).collection("feedback");
--                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
--                                @Override
--                                public void onComplete(@NonNull Task<QuerySnapshot> task) {
--                                    if (task.isSuccessful()) {
--                                        int count = task.getResult().size();
--                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();
--                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {
--                                            if (selectedFeedbackOption[i] > -1) {
--                                                Map<String, String> _fb = new HashMap<>();
--                                                _fb.put("question", questions.get(i).getQuestion());
--                                                _fb.put("issue", feedbackOptions[selectedFeedbackOption[i]]);
--                                                _fb.put("section", targetSection);
--                                                _fb.put("subject", targetSubject);
--                                                */
--/*_fb.put("student", studentName);*//*
--
-- */
--/*_fb.put("date", ""+Calendar.getInstance().getTimeInMillis());*//*
--
--                                                if (targetSection == "lt") {
--                                                    _fb.put("testID", getIntent().getStringExtra("tid"));
--                                                } else {
--                                                    _fb.put("chapter", targetChapter);
--                                                }
--                                                //DocumentReference nycRef = feedbackBasePath.document("Feedback_" + (++count));
--                                                DocumentReference nycRef = feedbackBasePath.document("Feedback_" + Calendar.getInstance().getTimeInMillis());
--                                                batch.set(nycRef, _fb);
--                                            }
--                                        }
--                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {
--                                            @Override
--                                            public void onComplete(@NonNull Task<Void> task) {
--                                                findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
--                                                findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
--
--                                                if (targetSection == "lt") {
--                                                    (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);
--                                                    if(!pastResultLT){
--                                                        findViewById(R.id.ResultLL).setVisibility(View.GONE);
--                                                    }else{
--                                                        findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                                        findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                                    }
--                                                } else {
--                                                    findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                                    findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                                }
--                                            }
--                                        });
--                                    } else {
--                                        findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
--                                        findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
--
--                                        if (targetSection == "lt") {
--                                            (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);
--                                            if(!pastResultLT){
--                                                findViewById(R.id.ResultLL).setVisibility(View.GONE);
--                                            }else{
--                                                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                            }
--                                        } else {
--                                            findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                            findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                        }
--                                    }
--                                }
--                            });
--                        }
--                    });
--                }
--            }
--        });
--    }
--
--    public void CheckLeaderBoard(View view) {
--        Intent intent = new Intent(this, TestLeaderBoardActivity.class);
--        intent.putExtra("section", targetSection);
--        intent.putExtra("subject", targetSubject);
--        intent.putExtra("chapter", targetChapter);
--        intent.putExtra("tid", finalTCID);
--        startActivity(intent);
--    }
--
--    public void TakeARetest(View view) {
--        if (targetSection.contains("lt"))
--            return;
--        Intent myIntent = new Intent(this, TestInstructionsActivity.class);
--        //clears all other activities from stack and makes the new one the root of stack
--        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
--        myIntent.putExtra("section", targetSection);
--        myIntent.putExtra("subject", targetSubject);
--        myIntent.putExtra("chapter", targetChapter);
--        myIntent.putExtra("questions", (Serializable) questions);
--        myIntent.putExtra("_mpq", _mpq);
--        myIntent.putExtra("timer", getIntent().getIntExtra("timer", 60));
--        myIntent.putExtra("title", getIntent().getStringExtra("title"));
--        startActivity(myIntent);
--    }
--
--    @Override
--    public void onBackPressed() {
--        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
--        if (marksUploaded) finish();
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--
--    public void FinishExam() {
--        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
--        if (marksUploaded) finish();
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--
--    public void FinishExam2(View view) {
--        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
--        if (marksUploaded) finish();
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--
--    public void CheckAnswerSheet(View view) {
--        Intent intent = new Intent(this, TestAnswerSheetActivity.class);
--        intent.putExtra("questions", (Serializable) questions);
--        intent.putExtra("answer_key", (Serializable) sub_ans);
--        if (marksUploaded) startActivity(intent);
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--}*/
--
--
--package com.example.itifighter;
--
--import android.annotation.SuppressLint;
--import android.content.Intent;
--import android.os.Bundle;
--import android.view.MotionEvent;
--import android.view.View;
--import android.widget.TextView;
--import android.widget.Toast;
--
--import androidx.appcompat.app.AppCompatActivity;
--
--import com.example.itifighterAdmin.Question;
--import com.google.firebase.firestore.CollectionReference;
--import com.google.firebase.firestore.FirebaseFirestore;
--
--import java.io.Serializable;
--import java.util.List;
--import java.util.Objects;
--
--public class TestResultActivity extends AppCompatActivity {
--
--    List<Question> questions;
--    int[] sub_ans, selectedFeedbackOption;
--    int total_marks = 0;
--    long timeLeft;
--    double accuracy = 0.0;
--    int tpq = 0;
--    int marks_obtained = 0;
--    int _mpq = 1;
--    boolean pastResultLT = false;
--    String[] feedbackOptions = {"Wrong Question", "Wrong Options", "Incomplete Question", "Incorrect Grammar", "Question out of syllabus",
--            "Question on old pattern", "Repeated Question"};
--    boolean marksUploaded = false;
--
--    int tca = 0, tra = 0, tsq = 0;
--    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;
--    String targetSection, targetSubject, targetChapter;
--    String finalTCID;
--
--    CollectionReference mDatabaseReference;
--
--    @SuppressLint({"WrongViewCast", "ClickableViewAccessibility"})
--    @Override
--    protected void onCreate(Bundle savedInstanceState) {
--        super.onCreate(savedInstanceState);
--        setContentView(R.layout.activity_result_xyz);
--
--
--        final TextView cbt = findViewById(R.id.ContinueBTNRT);
--        cbt.setVisibility(View.INVISIBLE);
-+       // cbt.setVisibility(View.INVISIBLE);
-         cbt.setOnTouchListener(new View.OnTouchListener() {
-             @Override
-             public boolean onTouch(View v, MotionEvent event) {
-Index: app/src/main/res/layout/activity_live_test_home.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".LiveTestHomeActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"100\">\r\n        <ScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"100\">\r\n            <LinearLayout\r\n                android:id=\"@+id/LiveTestList\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_width=\"match_parent\"\r\n                android:orientation=\"vertical\"/>\r\n        </ScrollView>\r\n    </LinearLayout>\r\n\r\n    <include layout=\"@layout/include_progress_overlay\"/>\r\n</RelativeLayout>\r\n\r\n<!--\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".LiveTestHomeActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"110\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_weight=\"35\"\r\n            android:layout_height=\"0dp\">\r\n            <TextView\r\n                android:id=\"@+id/LiveTestTitle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Live Test Begins At:\"\r\n                android:paddingVertical=\"35dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:textSize=\"25sp\"/>\r\n            <TextView\r\n                android:id=\"@+id/countdown\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"35sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:text=\"00:00:00\"/>\r\n        </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/startTestBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginVertical=\"15dp\"\r\n            android:visibility=\"invisible\"\r\n            android:paddingHorizontal=\"65sp\"\r\n            android:textSize=\"25sp\"\r\n            android:layout_weight=\"10\"\r\n            android:text=\"Start Test\" />\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"10\"\r\n            android:weightSum=\"2\"\r\n            android:orientation=\"horizontal\">\r\n            <Button\r\n                android:id=\"@+id/BtnPrevList\"\r\n                android:layout_width=\"0dp\"\r\n                android:gravity=\"center\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Previous Tests\"/>\r\n            <Button\r\n                android:id=\"@+id/BtnFutureList\"\r\n                android:layout_width=\"0dp\"\r\n                android:gravity=\"center\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Upcoming Tests\"/>\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_weight=\"55\">\r\n            <ListView\r\n                android:id=\"@+id/lt_prev_list\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:divider=\"@color/list_divider\"\r\n                android:visibility=\"invisible\"\r\n                android:dividerHeight=\"1dp\"\r\n                android:listSelector=\"@drawable/list_row_selector\">\r\n            </ListView>\r\n            <ListView\r\n                android:id=\"@+id/lt_future_list\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:divider=\"@color/list_divider\"\r\n                android:dividerHeight=\"1dp\"\r\n                android:listSelector=\"@drawable/list_row_selector\">\r\n            </ListView>\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n    <include layout=\"@layout/include_progress_overlay\"/>\r\n</RelativeLayout>-->
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_live_test_home.xml	(revision 1de29cbe87c7b180fa42f3be2356fca4e0761ea5)
-+++ app/src/main/res/layout/activity_live_test_home.xml	(date 1607791663351)
-@@ -1,126 +1,45 @@
- <?xml version="1.0" encoding="utf-8"?>
--<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-     xmlns:tools="http://schemas.android.com/tools"
-     android:layout_width="match_parent"
-     android:layout_height="match_parent"
--    android:orientation="vertical"
--    tools:context=".LiveTestHomeActivity">
--
--    <LinearLayout
--        android:layout_width="match_parent"
--        android:layout_height="match_parent"
--        android:orientation="vertical"
--        android:weightSum="100">
--        <ScrollView
--            android:layout_width="match_parent"
--            android:layout_height="0dp"
--            android:layout_weight="100">
--            <LinearLayout
--                android:id="@+id/LiveTestList"
--                android:layout_height="wrap_content"
--                android:layout_width="match_parent"
--                android:orientation="vertical"/>
--        </ScrollView>
--    </LinearLayout>
--
--    <include layout="@layout/include_progress_overlay"/>
--</RelativeLayout>
--
--<!--
--<?xml version="1.0" encoding="utf-8"?>
--<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:background="@drawable/bg_login"
-     xmlns:app="http://schemas.android.com/apk/res-auto"
--    xmlns:tools="http://schemas.android.com/tools"
--    android:layout_width="match_parent"
--    android:layout_height="match_parent"
-     android:orientation="vertical"
-     tools:context=".LiveTestHomeActivity">
- 
-     <LinearLayout
-         android:layout_width="match_parent"
--        android:layout_height="match_parent"
--        android:orientation="vertical"
--        android:weightSum="110">
--        <LinearLayout
--            android:layout_width="match_parent"
--            android:orientation="vertical"
--            android:layout_weight="35"
--            android:layout_height="0dp">
--            <TextView
--                android:id="@+id/LiveTestTitle"
--                android:layout_width="match_parent"
--                android:layout_height="wrap_content"
--                android:text="Live Test Begins At:"
--                android:paddingVertical="35dp"
--                android:layout_gravity="center"
--                android:gravity="center"
--                android:textSize="25sp"/>
--            <TextView
--                android:id="@+id/countdown"
--                android:layout_width="match_parent"
--                android:layout_height="wrap_content"
--                android:textSize="35sp"
--                android:layout_gravity="center"
--                android:gravity="center"
--                android:text="00:00:00"/>
--        </LinearLayout>
--
--        <Button
--            android:id="@+id/startTestBtn"
--            android:layout_width="wrap_content"
--            android:layout_gravity="center"
--            android:layout_height="0dp"
--            android:layout_marginVertical="15dp"
--            android:visibility="invisible"
--            android:paddingHorizontal="65sp"
--            android:textSize="25sp"
--            android:layout_weight="10"
--            android:text="Start Test" />
--        <LinearLayout
--            android:layout_width="match_parent"
--            android:layout_height="0dp"
--            android:layout_weight="10"
--            android:weightSum="2"
--            android:orientation="horizontal">
--            <Button
--                android:id="@+id/BtnPrevList"
--                android:layout_width="0dp"
--                android:gravity="center"
--                android:layout_height="match_parent"
--                android:layout_weight="1"
--                android:text="Previous Tests"/>
--            <Button
--                android:id="@+id/BtnFutureList"
--                android:layout_width="0dp"
--                android:gravity="center"
--                android:layout_height="match_parent"
--                android:layout_weight="1"
--                android:text="Upcoming Tests"/>
--        </LinearLayout>
--
--        <RelativeLayout
-+        android:layout_height="wrap_content"
-+        android:layout_margin="10sp">
-+        <TextView
-+            android:id="@+id/ContinueBTNLBT"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:textColor="@color/black"
-+            android:textStyle="bold"
-+            android:textSize="15sp"
-+            android:gravity="center"
-+            android:background="@color/white"
-+            android:padding="10sp"
-+            android:text="@string/Live_Test"
-+            app:drawableRightCompat="@drawable/cross"/>
-+    </LinearLayout>
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent"
-+        android:orientation="vertical">
-+        <ScrollView
-             android:layout_width="match_parent"
-             android:layout_height="0dp"
--            android:orientation="horizontal"
--            android:layout_weight="55">
--            <ListView
--                android:id="@+id/lt_prev_list"
-+            android:layout_weight="100">
-+            <LinearLayout
-+                android:id="@+id/LiveTestList"
-+                android:layout_height="wrap_content"
-                 android:layout_width="match_parent"
--                android:layout_height="match_parent"
--                android:divider="@color/list_divider"
--                android:visibility="invisible"
--                android:dividerHeight="1dp"
--                android:listSelector="@drawable/list_row_selector">
--            </ListView>
--            <ListView
--                android:id="@+id/lt_future_list"
--                android:layout_width="match_parent"
--                android:layout_height="match_parent"
--                android:divider="@color/list_divider"
--                android:dividerHeight="1dp"
--                android:listSelector="@drawable/list_row_selector">
--            </ListView>
--        </RelativeLayout>
-+                android:orientation="vertical"/>
-+        </ScrollView>
-     </LinearLayout>
-+
-     <include layout="@layout/include_progress_overlay"/>
--</RelativeLayout>-->
-\ No newline at end of file
-+</LinearLayout>
-\ No newline at end of file
-Index: app/src/main/res/values/strings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <string name=\"app_name\">ITIFighter</string>\r\n    <string name=\"sign_in\">Sign In</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"login_to_continue_your_account\">Login to continue your account</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"don_t_have_an_account\">Don\\'t have an account</string>\r\n    <string name=\"register\">Register</string>\r\n    <string name=\"already_have_an_account\">Already have an account</string>\r\n    <string name=\"name\">Name</string>\r\n    <string name=\"mobile\">Mobile</string>\r\n    <string name=\"state\">State</string>\r\n    <string name=\"trade\">Trade</string>\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"menu_Profile\">My Profile</string>\r\n    <string name=\"menu_chat\">Discussion</string>\r\n    <string name=\"share\">Share</string>\r\n    <string name=\"rating\">Rating</string>\r\n    <string name=\"change\">Change Password</string>\r\n    <string name=\"logout\">Logout</string>\r\n    <string name=\"username\">ITIFighter</string>\r\n    <string name=\"menu_groups\">Groups</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"todo\">TODO</string>\r\n    <string name=\"user_email\">Wiliam@gmail.com</string>\r\n    <string name=\"stateX\">Uttar Pradesh</string>\r\n    <string name=\"TradeX\">Fitter</string>\r\n    <string name=\"designed_by_n_sharmask_amp_aj\"><![CDATA[Designed & Devloped by \\n Sharmask & AJ]]></string>\r\n    <string name=\"phone\">phone</string>\r\n    <string name=\"rate_our_app\">Rate our app</string>\r\n    <string name=\"rate_our_previous_paper\">Rate our previous Paper</string>\r\n    <string name=\"rate_our_mock_test\">Rate our mock test</string>\r\n    <string name=\"rate_our_test_series\">Rate our Tets series</string>\r\n    <string name=\"rate_our_daily_live_test\">Rate our daily live test</string>\r\n    <string name=\"submit\">submit</string>\r\n    <string name=\"oldpassword\">Old Password</string>\r\n    <string name=\"newpassword\">New Password</string>\r\n    <string name=\"confirmpassword\">Confirm Password</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n\r\n    <string name=\"joey_tribbiani\">Joey Tribbiani</string>\r\n    <string name=\"new_york_usa\">new york, usa</string>\r\n    <string name=\"_453k\">453K</string>\r\n    <string name=\"_873\">873</string>\r\n    <string name=\"_1_202_555_0157\" tools:ignore=\"TypographyDashes\">+1–202–555-0157</string>\r\n    <string name=\"MyScore\">My Score</string>\r\n    <string name=\"MyRank\">My Rank</string>\r\n    <string name=\"discription\">Discription</string>\r\n    <string name=\"title\">title</string>\r\n    <string name=\"new_message\">new message…</string>\r\n\r\n    <string name=\"placeholder_message\">Placeholder message</string>\r\n    <string name=\"rose\">Rose</string>\r\n    <string name=\"how_are_you_doing_this_is_a_long_message_that_should_probably_wrap\">How are you doing? This is a long message that should probably wrap.</string>\r\n\r\n    <!-- Strings related to login -->\r\n\r\n    <!-- Firestore Strings -->\r\n    <string name=\"collection_chatrooms\">Chatrooms</string>\r\n    <string name=\"collection_chat_messages\">Chat Messages</string>\r\n    <string name=\"collection_chatroom_user_list\">User List</string>\r\n\r\n    <!-- Intent extras -->\r\n\r\n    <!-- Fragments Names -->\r\n\r\n    <!-- Other Strings -->\r\n    <string name=\"payment_gateway\">Payment Gateway</string>\r\n    <string name=\"www_google_com\">www.noobworm.xyz</string>\r\n    <string name=\"paytm_integrations\">Payment integration</string>\r\n    <string name=\"order_id\">order id</string>\r\n    <string name=\"customer_id\">customer_id</string>\r\n    <string name=\"price\">price</string>\r\n    <string name=\"start_payment\">start payment</string>\r\n    <string name=\"choose_subscription_plan\">Choose Subscription</string>\r\n    <string name=\"start\">Start</string>\r\n    <string name=\"result\">Result</string>\r\n    <string name=\"title_here\">TITLE HERE</string>\r\n    <string name=\"submit_feedback\">Submit Feedback</string>\r\n    <string name=\"cancel\">Cancel</string>\r\n    <string name=\"_1\">+1</string>\r\n    <string name=\"dummy_question\">dummy_question</string>\r\n    <string name=\"something_wrong_with_this_question\">Something wrong with this question?</string>\r\n    <string name=\"give_feedback\">Give feedback!</string>\r\n    <string name=\"skip\">Skip</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"live\">LIVE</string>\r\n    <string name=\"ques_num\">Ques Num</string>\r\n    <string name=\"time_left\">Time left</string>\r\n    <string name=\"total_pending_quetion\">total pending quetion:</string>\r\n    <string name=\"total_skipped_quetion\">total skipped quetion:</string>\r\n    <string name=\"total_attempted_quetion\">total attempted quetion:</string>\r\n    <string name=\"total_available_quetion\">total available quetion:</string>\r\n    <string name=\"_10\">10</string>\r\n    <string name=\"score\">Score</string>\r\n    <string name=\"title_activity_view_solution_xyz\">ViewSolutionXyz</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"prev\">PREV</string>\r\n    <string name=\"leaderboard\">LEADERBOARD</string>\r\n    <string name=\"student_name\">Student Name</string>\r\n    <string name=\"rank\">Rank</string>\r\n    <string name=\"percentage\">Percentage</string>\r\n    <string name=\"points\">Points</string>\r\n    <string name=\"resultX\">RESULT</string>\r\n    <string name=\"analysis\">Analysis</string>\r\n    <string name=\"percent\">Percent</string>\r\n    <string name=\"second\">Second</string>\r\n    <string name=\"accuracy\">Accuracy</string>\r\n    <string name=\"time_quetion\">Time / Quetion</string>\r\n    <string name=\"view_solution\">View Solution</string>\r\n    <string name=\"view_leader_board\">View Leader Board</string>\r\n    <string name=\"re_take_exam\">Re-Take Exam</string>\r\n    <string name=\"close\">CLOSE</string>\r\n    <string name=\"solution\">SOLUTION</string>\r\n    <string name=\"a\">A</string>\r\n    <string name=\"b\">B</string>\r\n    <string name=\"c\">C</string>\r\n    <string name=\"d\">D</string>\r\n    <string name=\"_100_u20b9\"><strike>100 ₹</strike></string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"i_have_read_all_instructions\">I have read all instructions</string>\r\n    <string name=\"instruction\">INSTRUCTION</string>\r\n    <string name=\"minutes\">Minutes</string>\r\n    <string name=\"marks\">Marks</string>\r\n    <string name=\"quetions\">Quetions</string>\r\n\r\n\r\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/strings.xml	(revision 1de29cbe87c7b180fa42f3be2356fca4e0761ea5)
-+++ app/src/main/res/values/strings.xml	(date 1607791663344)
-@@ -131,6 +131,7 @@
-     <string name="minutes">Minutes</string>
-     <string name="marks">Marks</string>
-     <string name="quetions">Quetions</string>
-+    <string name="Live_Test">Live Test</string>
- 
- 
- </resources>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41_[Default_Changelist]/shelved.patch	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41_[Default_Changelist]/shelved.patch	(revision f5367485fe42e341155a27ba38c3e9f870487778)
@@ -1,1048 +0,0 @@
-Index: app/src/main/java/com/example/itifighter/PreviousPaper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class PreviousPaper extends Fragment {\r\n\r\n\r\n    private int currentLayer = 0;\r\n    private int currentSubjectPos = 0, currentExamPos = 0;  //records which item was clicked in previous list\r\n    private ArrayList<CustomListItem> Subjects, Exams;\r\n    private ListView listView;\r\n    private ArrayList<String> PdfS, pdfFile, SubjectIds, ExamIds;\r\n    private ArrayList<CustomListItem> PdfS_CL;\r\n    private FirebaseFirestore db;\r\n    private ProgressDialog dialog;\r\n    private Context mContext;\r\n    private ImageButton back;\r\n    private ArrayAdapter adapter;\r\n\r\n    public PreviousPaper() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n\r\n    public void CustomBackButton(){\r\n\r\n        switch (currentLayer){\r\n            case 1: LoadSubjects();\r\n            break;\r\n            case 2: LoadExams();\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);\r\n        //this.spinner = R.layout.fragment_previous_paper.findViewById(R.id.progressBar1);\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        listView = ppView.findViewById(R.id.branch_list);\r\n        back = ppView.findViewById(R.id.CustomBackButtonPP);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        back.setVisibility(View.INVISIBLE);\r\n        CustomizeView();\r\n        return ppView;\r\n    }\r\n\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        SubjectIds.add(document.getId());\r\n                        Subjects.add(new CustomListItem(document.getString(/*\"Name\"*/\"name\"),\r\n                                        document.getString(/*\"description\"*/\"desc\"), \"pp\"));\r\n                    }\r\n\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    /*listView = (ListView) _ppView.findViewById(R.id.branch_list);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubjectPos = position;\r\n                            LoadExams();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadExams(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").document(SubjectIds.get(currentSubjectPos)).collection(\"exam\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    /*examList = new ArrayList<>();*/\r\n                    Exams = new ArrayList<>();\r\n                    ExamIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        /*examList.add(document.getString(\"Name\"));*/\r\n                        ExamIds.add(document.getId());\r\n                                            Exams.add(new CustomListItem(document.getString(\"name\"),\r\n                                        document.getString(\"desc\"), \"pp/chapter\"));\r\n                    }\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentExamPos = position;\r\n                            LoadPdfS();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadExams();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadPdfS(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch/\"+SubjectIds.get(currentSubjectPos)+\"/exam\").document(/*\"00\"+(currentExamPos+1)*/ExamIds.get(currentExamPos)).collection(\"pdf\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    PdfS = new ArrayList<>();\r\n                    PdfS_CL = new ArrayList<>();\r\n                    pdfFile = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        PdfS.add(document.getId());\r\n                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString(\"price\"))),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"discount\")))));\r\n                        pdfFile.add(\"\"+document.getString(\"Name\"));\r\n                    }\r\n                    adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);\r\n                    /*adapter = new ArrayAdapter<>(mContext,\r\n                            R.layout.activity__branch_list_view, PdfS);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            Intent intent = new Intent(mContext, LoadPdf.class);\r\n                            intent.putExtra(\"pdf\", pdfFile.get(position));\r\n                            startActivity(intent);\r\n                        }\r\n\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadPdfS();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n   private void CustomizeView() {\r\n        LoadSubjects();\r\n    }\r\n\r\n}\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/PreviousPaper.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/java/com/example/itifighter/PreviousPaper.java	(date 1607844990366)
-@@ -18,6 +18,8 @@
- 
- import com.google.android.gms.tasks.OnCompleteListener;
- import com.google.android.gms.tasks.Task;
-+import com.google.firebase.auth.FirebaseAuth;
-+import com.google.firebase.firestore.DocumentSnapshot;
- import com.google.firebase.firestore.FirebaseFirestore;
- import com.google.firebase.firestore.QueryDocumentSnapshot;
- import com.google.firebase.firestore.QuerySnapshot;
-@@ -31,6 +33,7 @@
- 
- 
-     private int currentLayer = 0;
-+    private String currentPdf = "";
-     private int currentSubjectPos = 0, currentExamPos = 0;  //records which item was clicked in previous list
-     private ArrayList<CustomListItem> Subjects, Exams;
-     private ListView listView;
-@@ -175,17 +178,14 @@
-                         pdfFile.add(""+document.getString("Name"));
-                     }
-                     adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);
--                    /*adapter = new ArrayAdapter<>(mContext,
--                            R.layout.activity__branch_list_view, PdfS);*/
-                     listView.setAdapter(adapter);
-                     dialog.dismiss();
-                     listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                         @Override
-                         public void onItemClick(AdapterView<?> parent, View view,
-                                                 int position, long id) {
--                            Intent intent = new Intent(mContext, LoadPdf.class);
--                            intent.putExtra("pdf", pdfFile.get(position));
--                            startActivity(intent);
-+                            if(paymentNotRequired(position))OpenPdf(position);
-+
-                         }
- 
-                     });
-@@ -197,8 +197,42 @@
-         });
-     }
- 
-+    private boolean paymentNotRequired(final int position) {
-+        String Uid = FirebaseAuth.getInstance().getUid();
-+        assert Uid != null;
-+        boolean validate = true;
-+        FirebaseFirestore.getInstance().collection("users").document(Uid).collection("Products")
-+                .document("pp").collection("ProductId").document(PdfS.get(position))
-+                .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
-+            @Override
-+            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
-+                if(task.isSuccessful()){
-+                    DocumentSnapshot documentSnapshot = task.getResult();
-+                    if(documentSnapshot!=null && documentSnapshot.exists()){currentPdf = PdfS.get(position);}
-+                    else{
-+                        Intent intent = new Intent(getContext(), PaytmPayment.class);
-+                        intent.putExtra("price",PdfS_CL.get(position).getPrice());
-+                        intent.putExtra("discount",PdfS_CL.get(position).getDiscount());
-+                        intent.putExtra("titleName",pdfFile.get(position));
-+                        intent.putExtra("curruntPdf",currentPdf);
-+                        intent.putExtra("currentSubject",SubjectIds.get(currentSubjectPos));
-+                        intent.putExtra("currentChapter",ExamIds.get(currentExamPos));
-+                        mContext.startActivity(intent);
-+                    }
-+                }
-+            }
-+        });
-+        return  true;
-+    }
-+
-+    private void OpenPdf(int position) {
-+        Intent intent = new Intent(mContext, LoadPdf.class);
-+        intent.putExtra("pdf", pdfFile.get(position));
-+        startActivity(intent);
-+    }
-+
- 
--   private void CustomizeView() {
-+    private void CustomizeView() {
-         LoadSubjects();
-     }
- 
-Index: app/src/main/res/layout/activity_live_test_home.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".LiveTestHomeActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"100\">\r\n        <ScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"100\">\r\n            <LinearLayout\r\n                android:id=\"@+id/LiveTestList\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_width=\"match_parent\"\r\n                android:orientation=\"vertical\"/>\r\n        </ScrollView>\r\n    </LinearLayout>\r\n\r\n    <include layout=\"@layout/include_progress_overlay\"/>\r\n</RelativeLayout>\r\n\r\n<!--\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".LiveTestHomeActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"110\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_weight=\"35\"\r\n            android:layout_height=\"0dp\">\r\n            <TextView\r\n                android:id=\"@+id/LiveTestTitle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Live Test Begins At:\"\r\n                android:paddingVertical=\"35dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:textSize=\"25sp\"/>\r\n            <TextView\r\n                android:id=\"@+id/countdown\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"35sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:text=\"00:00:00\"/>\r\n        </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/startTestBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginVertical=\"15dp\"\r\n            android:visibility=\"invisible\"\r\n            android:paddingHorizontal=\"65sp\"\r\n            android:textSize=\"25sp\"\r\n            android:layout_weight=\"10\"\r\n            android:text=\"Start Test\" />\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"10\"\r\n            android:weightSum=\"2\"\r\n            android:orientation=\"horizontal\">\r\n            <Button\r\n                android:id=\"@+id/BtnPrevList\"\r\n                android:layout_width=\"0dp\"\r\n                android:gravity=\"center\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Previous Tests\"/>\r\n            <Button\r\n                android:id=\"@+id/BtnFutureList\"\r\n                android:layout_width=\"0dp\"\r\n                android:gravity=\"center\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Upcoming Tests\"/>\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_weight=\"55\">\r\n            <ListView\r\n                android:id=\"@+id/lt_prev_list\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:divider=\"@color/list_divider\"\r\n                android:visibility=\"invisible\"\r\n                android:dividerHeight=\"1dp\"\r\n                android:listSelector=\"@drawable/list_row_selector\">\r\n            </ListView>\r\n            <ListView\r\n                android:id=\"@+id/lt_future_list\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:divider=\"@color/list_divider\"\r\n                android:dividerHeight=\"1dp\"\r\n                android:listSelector=\"@drawable/list_row_selector\">\r\n            </ListView>\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n    <include layout=\"@layout/include_progress_overlay\"/>\r\n</RelativeLayout>-->
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_live_test_home.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/res/layout/activity_live_test_home.xml	(date 1607794764691)
-@@ -1,126 +1,45 @@
- <?xml version="1.0" encoding="utf-8"?>
--<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-     xmlns:tools="http://schemas.android.com/tools"
-     android:layout_width="match_parent"
-     android:layout_height="match_parent"
--    android:orientation="vertical"
--    tools:context=".LiveTestHomeActivity">
--
--    <LinearLayout
--        android:layout_width="match_parent"
--        android:layout_height="match_parent"
--        android:orientation="vertical"
--        android:weightSum="100">
--        <ScrollView
--            android:layout_width="match_parent"
--            android:layout_height="0dp"
--            android:layout_weight="100">
--            <LinearLayout
--                android:id="@+id/LiveTestList"
--                android:layout_height="wrap_content"
--                android:layout_width="match_parent"
--                android:orientation="vertical"/>
--        </ScrollView>
--    </LinearLayout>
--
--    <include layout="@layout/include_progress_overlay"/>
--</RelativeLayout>
--
--<!--
--<?xml version="1.0" encoding="utf-8"?>
--<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:background="@drawable/bg_login"
-     xmlns:app="http://schemas.android.com/apk/res-auto"
--    xmlns:tools="http://schemas.android.com/tools"
--    android:layout_width="match_parent"
--    android:layout_height="match_parent"
-     android:orientation="vertical"
-     tools:context=".LiveTestHomeActivity">
- 
-     <LinearLayout
-         android:layout_width="match_parent"
--        android:layout_height="match_parent"
--        android:orientation="vertical"
--        android:weightSum="110">
--        <LinearLayout
--            android:layout_width="match_parent"
--            android:orientation="vertical"
--            android:layout_weight="35"
--            android:layout_height="0dp">
--            <TextView
--                android:id="@+id/LiveTestTitle"
--                android:layout_width="match_parent"
--                android:layout_height="wrap_content"
--                android:text="Live Test Begins At:"
--                android:paddingVertical="35dp"
--                android:layout_gravity="center"
--                android:gravity="center"
--                android:textSize="25sp"/>
--            <TextView
--                android:id="@+id/countdown"
--                android:layout_width="match_parent"
--                android:layout_height="wrap_content"
--                android:textSize="35sp"
--                android:layout_gravity="center"
--                android:gravity="center"
--                android:text="00:00:00"/>
--        </LinearLayout>
--
--        <Button
--            android:id="@+id/startTestBtn"
--            android:layout_width="wrap_content"
--            android:layout_gravity="center"
--            android:layout_height="0dp"
--            android:layout_marginVertical="15dp"
--            android:visibility="invisible"
--            android:paddingHorizontal="65sp"
--            android:textSize="25sp"
--            android:layout_weight="10"
--            android:text="Start Test" />
--        <LinearLayout
--            android:layout_width="match_parent"
--            android:layout_height="0dp"
--            android:layout_weight="10"
--            android:weightSum="2"
--            android:orientation="horizontal">
--            <Button
--                android:id="@+id/BtnPrevList"
--                android:layout_width="0dp"
--                android:gravity="center"
--                android:layout_height="match_parent"
--                android:layout_weight="1"
--                android:text="Previous Tests"/>
--            <Button
--                android:id="@+id/BtnFutureList"
--                android:layout_width="0dp"
--                android:gravity="center"
--                android:layout_height="match_parent"
--                android:layout_weight="1"
--                android:text="Upcoming Tests"/>
--        </LinearLayout>
--
--        <RelativeLayout
-+        android:layout_height="wrap_content"
-+        android:layout_margin="10sp">
-+        <TextView
-+            android:id="@+id/ContinueBTNLBT"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:textColor="@color/black"
-+            android:textStyle="bold"
-+            android:textSize="15sp"
-+            android:gravity="center"
-+            android:background="@color/white"
-+            android:padding="10sp"
-+            android:text="@string/Live_Test"
-+            app:drawableRightCompat="@drawable/cross"/>
-+    </LinearLayout>
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent"
-+        android:orientation="vertical">
-+        <ScrollView
-             android:layout_width="match_parent"
-             android:layout_height="0dp"
--            android:orientation="horizontal"
--            android:layout_weight="55">
--            <ListView
--                android:id="@+id/lt_prev_list"
-+            android:layout_weight="100">
-+            <LinearLayout
-+                android:id="@+id/LiveTestList"
-+                android:layout_height="wrap_content"
-                 android:layout_width="match_parent"
--                android:layout_height="match_parent"
--                android:divider="@color/list_divider"
--                android:visibility="invisible"
--                android:dividerHeight="1dp"
--                android:listSelector="@drawable/list_row_selector">
--            </ListView>
--            <ListView
--                android:id="@+id/lt_future_list"
--                android:layout_width="match_parent"
--                android:layout_height="match_parent"
--                android:divider="@color/list_divider"
--                android:dividerHeight="1dp"
--                android:listSelector="@drawable/list_row_selector">
--            </ListView>
--        </RelativeLayout>
-+                android:orientation="vertical"/>
-+        </ScrollView>
-     </LinearLayout>
-+
-     <include layout="@layout/include_progress_overlay"/>
--</RelativeLayout>-->
-\ No newline at end of file
-+</LinearLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/itifighter/PaytmPayment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.paytm.pgsdk.PaytmOrder;\r\nimport com.paytm.pgsdk.PaytmPaymentTransactionCallback;\r\nimport com.paytm.pgsdk.TransactionManager;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\nimport java.util.Set;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class PaytmPayment extends AppCompatActivity {\r\n\tprivate String Mid = \"ahKvVJ36172797507439\", Uid = FirebaseAuth.getInstance().getUid(), OrderId, Mobile, Email, txnAmount, firstName, FinalMonth, currentSubject, currentChapter, TAG = \"PaytmPayment\", currentSection;\r\n\r\n\t@SuppressLint(\"SetTextI18n\")\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_paytm_payment);\r\n\t\tIntent intent = getIntent();\r\n\t\t// get Data from intent\r\n\t\tfinal String Month1 = intent.getStringExtra(\"month1\");\r\n\t\tfinal String Month2 = intent.getStringExtra(\"month2\");\r\n\t\tfinal String Month3 = intent.getStringExtra(\"month3\");\r\n\t\tfinal String price1 = intent.getStringExtra(\"price1\");\r\n\t\tfinal String price2 = intent.getStringExtra(\"price2\");\r\n\t\tfinal String price3 = intent.getStringExtra(\"price3\");\r\n\t\tfinal String Disc01 = intent.getStringExtra(\"discount1\");\r\n\t\tfinal String Disc02 = intent.getStringExtra(\"discount2\");\r\n\t\tfinal String Disc03 = intent.getStringExtra(\"discount3\");\r\n\t\tcurrentSection      = intent.getStringExtra(\"currentSection\");\r\n\t\tcurrentSubject      = intent.getStringExtra(\"currentSubject\");\r\n\t\tcurrentChapter      = intent.getStringExtra(\"currentChapter\");\r\n\t\tString title0       = intent.getStringExtra(\"titleName\");\r\n\t\tString Count0       = intent.getStringExtra(\"countTest\");\r\n\r\n\r\n\t\t//get Instance of layout and set data in main view\r\n\t\tTextView title1 = findViewById(R.id.testxy_chapter_titlex),Count1 = findViewById(R.id.testxy_desc_textx),\r\n\t\t\t\tBatch0  = findViewById(R.id.testxytbatchx) ,Price0 = findViewById(R.id.testxytpricex);\r\n\t\t\t\t\t\ttitle1.setText(title0);\r\n\t\t\t\t\t\tCount1.setText(Count0 + \" Tests\");\r\n\t\t\t\t\t\tBatch0.setText(Month1 + \" Months Available with \" + Disc01 + \"% Discount\");\r\n\t\t\t\t\t\tPrice0.setText(\"\\u20B9 \" + price1);\r\n\t\t\t\t\t\tBatch0.setTextColor(Color.BLACK);\r\n\t\t\t\t\t\tCount1.setTextColor(Color.BLACK);\r\n\t\t\t\t\t\tPrice0.setTextColor(Color.BLACK);\r\n\r\n\t\t//set  Months in option\r\n\t\tfinal TextView monthX1 = findViewById(R.id.monthX1), monthX2 = findViewById(R.id.monthX2), monthX3 = findViewById(R.id.monthX3);\r\n\t\t\t\t\t\tmonthX1.setText(Month1 + \" Months\");\r\n\t\t\t\t\t\tmonthX2.setText(Month2 + \" Months\");\r\n\t\t\t\t\t\tmonthX3.setText(Month3 + \" Months\");\r\n\r\n\t\t//set Discount in option\r\n\t\tTextView descX1 = findViewById(R.id.descX1), descX2 = findViewById(R.id.descX2), descX3 = findViewById(R.id.descX3);\r\n\t\t\t\t\t\tdescX1.setText(\"Unlock all test @ \" + Disc01 + \"% \\nDiscount\");\r\n\t\t\t\t\t\tdescX2.setText(\"Unlock all test @ \" + Disc02 + \"% \\nDiscount\");\r\n\t\t\t\t\t\tdescX3.setText(\"Unlock all test @ \" + Disc03 + \"% \\nDiscount\");\r\n\r\n\t\t//set Price in option\r\n\t\tTextView priceX02 = findViewById(R.id.priceX02), priceX12 = findViewById(R.id.priceX12), priceX22 = findViewById(R.id.priceX22);\r\n\t\t\t\t\t\tpriceX02.setText(\"\\u20B9 \" + price1);\r\n\t\t\t\t\t\tpriceX12.setText(\"\\u20B9 \" + price2);\r\n\t\t\t\t\t\tpriceX22.setText(\"\\u20B9 \" + price3);\r\n\t\t\t\t\t\tpriceX02.setPaintFlags(priceX02.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n\t\t\t\t\t\tpriceX12.setPaintFlags(priceX12.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n\t\t\t\t\t\tpriceX22.setPaintFlags(priceX22.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n\r\n\t\t//set Discounted Final price in option\r\n\t\tTextView priceX01 = findViewById(R.id.priceX01), priceX11 = findViewById(R.id.priceX11), priceX21 = findViewById(R.id.priceX21);\r\n\t\tassert price1 != null && Disc01 != null;\r\n        final double  Discount1= (Integer.parseInt(price1) * Integer.parseInt(Disc01) * 0.01);\r\n\t\tfinal String FinalPrice1 = String.valueOf(Integer.parseInt(price1) - Discount1);\r\n\t\tpriceX01.setText(\"\\u20B9 \" + FinalPrice1);\r\n\t\tassert price2 != null && Disc02 != null;\r\n\t\tfinal double  Discount2= (Integer.parseInt(price2) * Integer.parseInt(Disc02) * 0.01);\r\n\t\tfinal String FinalPrice2 = String.valueOf(Integer.parseInt(price2) - Discount2);\r\n\t\tpriceX11.setText(\"\\u20B9 \" + FinalPrice2);\r\n\t\tassert price3 != null && Disc03 != null;\r\n\t\tfinal double  Discount3= (Integer.parseInt(price3) * Integer.parseInt(Disc03) * 0.01);\r\n\t\tfinal String FinalPrice3 = String.valueOf(Integer.parseInt(price3) - Discount3);\r\n\t\tpriceX21.setText(\"\\u20B9 \" + FinalPrice3);\r\n\r\n\t\tfinal TextView sub_itempricex = findViewById(R.id.sub_itempricex), sub_taxpricex = findViewById(R.id.sub_taxpricex),                                    sub_discountpricex = findViewById(R.id.sub_discountpricex), finalpricex = findViewById(R.id.finalpricex);\r\n\t\t\t\t\t   sub_taxpricex.setText(\"\\u20B9 0.0\");\r\n\t\tfinal RadioButton Ra1 = findViewById(R.id.ra1), Ra2 = findViewById(R.id.ra2), Ra3 = findViewById(R.id.ra3);\r\n\t\tfinal ConstraintLayout o1=findViewById(R.id.optionX1),o2=findViewById(R.id.optionX2),o3=findViewById(R.id.optionX3);\r\n\t\tButton cancel = findViewById(R.id.cancelx), payx = findViewById(R.id.payx);\r\n               cancel.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       AreYouSureCancel();\r\n                   }\r\n               });\r\n               payx.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       if (txnAmount.equals(\"\")) {\r\n                           Toast.makeText(PaytmPayment.this,\"Amount is mandatory\",Toast.LENGTH_SHORT).show();\r\n                       } else getToken();\r\n                   }\r\n               });\r\n               Ra1.setChecked(true);\r\n               Ra2.setChecked(false);\r\n               Ra3.setChecked(false);\r\n               sub_itempricex.setText(\"\\u20B9 \" + price1);\r\n               sub_discountpricex.setText(\"\\u20B9 \" + Discount1);\r\n               finalpricex.setText(\"\\u20B9 \" + FinalPrice1);\r\n               txnAmount = FinalPrice1;\r\n               FinalMonth = Month1;\r\n               o1.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(true);\r\n                       Ra2.setChecked(false);\r\n                       Ra3.setChecked(false);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price1);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount1);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice1);\r\n                       txnAmount = FinalPrice1;\r\n                       FinalMonth = Month1;\r\n                   }\r\n               });\r\n               o2.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(false);\r\n                       Ra2.setChecked(true);\r\n                       Ra3.setChecked(false);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price2);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount2);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice2);\r\n                       txnAmount = FinalPrice2;\r\n                       FinalMonth = Month2;\r\n                   }\r\n               });\r\n               o3.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(false);\r\n                       Ra2.setChecked(false);\r\n                       Ra3.setChecked(true);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price3);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount3);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice3);\r\n                       txnAmount = FinalPrice3;\r\n                       FinalMonth = Month3;\r\n                   }\r\n               });\r\n               Ra1.setOnClickListener(new View.OnClickListener() {\r\n                   @Override\r\n                   public void onClick(View view) {\r\n                       Ra1.setChecked(true);\r\n                       Ra2.setChecked(false);\r\n                       Ra3.setChecked(false);\r\n                       sub_itempricex.setText(\"\\u20B9 \" + price1);\r\n                       sub_discountpricex.setText(\"\\u20B9 \" + Discount1);\r\n                       finalpricex.setText(\"\\u20B9 \" + FinalPrice1);\r\n                       txnAmount = FinalPrice1;\r\n                       FinalMonth = Month1;\r\n                   }\r\n               });\r\n                Ra2.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        Ra1.setChecked(false);\r\n                        Ra2.setChecked(true);\r\n                        Ra3.setChecked(false);\r\n                        sub_itempricex.setText(\"\\u20B9 \" + price2);\r\n                        sub_discountpricex.setText(\"\\u20B9 \" + Discount2);\r\n                        finalpricex.setText(\"\\u20B9 \" + FinalPrice2);\r\n                        txnAmount = FinalPrice2;\r\n                        FinalMonth = Month2;\r\n                    }\r\n                });\r\n                Ra3.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        Ra1.setChecked(false);\r\n                        Ra2.setChecked(false);\r\n                        Ra3.setChecked(true);\r\n                        sub_itempricex.setText(\"\\u20B9 \" + price3);\r\n                        sub_discountpricex.setText(\"\\u20B9 \" + Discount3);\r\n                        finalpricex.setText(\"\\u20B9 \" + FinalPrice3);\r\n                        txnAmount = FinalPrice3;\r\n                        FinalMonth = Month3;\r\n                    }\r\n                });\r\n\r\n        // Set Image in main view\r\n\t\tStorageReference mmFirebaseStorageRef = FirebaseStorage.getInstance().getReference()\r\n                .child(\"menu/section/\"+currentSection + \"/chapter/\");\r\n\t\t                        if (title0 != null) {\r\n\t\t                            if (title0.trim().length() > 0) {\r\n\t\t                                Glide.with(this)\r\n                                                .load(mmFirebaseStorageRef.child(title0 + \".png\"))\r\n                                                .into((ImageView) findViewById(R.id.testxy_image_viewx));\r\n\t\t                            }\r\n\t\t                        }\r\n\t}\r\n\r\n    private void getToken() {\r\n        ServiceWrapper serviceWrapper = new ServiceWrapper();\r\n        Call<Token_Res> call = serviceWrapper.getTokenCall(\"12345\", Mid, OrderId, txnAmount, Uid, Email, Mobile, firstName);\r\n        call.enqueue(new Callback<Token_Res>() {\r\n            @Override\r\n            public void onResponse(@NonNull Call<Token_Res> call, @NonNull Response<Token_Res> response) {\r\n                try {\r\n                    if (response.isSuccessful() && response.body() != null) {\r\n                        if (!response.body().getBody().getTxnToken().equals(\"\")) {\r\n                            startPaytmPayment(response.body().getBody().getTxnToken());\r\n                        } else {\r\n\r\n                            Log.e(TAG, \"token status false\");\r\n                            Toast.makeText(PaytmPayment.this,\"token status false\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                } catch (Exception e) {\r\n\r\n                    Log.e(TAG, \"Error in token Response\" + e.toString());\r\n                    Toast.makeText(PaytmPayment.this,\"Error in token Response\" + e.toString(),Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n            @Override\r\n            public void onFailure(@NonNull Call<Token_Res> call, @NonNull Throwable t) {\r\n\r\n                Log.e(TAG, \" response error \" + t.toString());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void startPaytmPayment(String txnToken) {\r\n        // for test mode use it\r\n        String host = \"https://securegw-stage.paytm.in/\";\r\n        // for production mode use it //  String host = \"https://securegw.paytm.in/\";\r\n        String callBackUrl = host+\"theia/paytmCallback?ORDER_ID=\" + OrderId;\r\n        PaytmOrder paytmOrder = new PaytmOrder(OrderId, Mid, txnToken, txnAmount, callBackUrl);\r\n        TransactionManager transactionManager = new TransactionManager(paytmOrder, new PaytmPaymentTransactionCallback() {\r\n\r\n            @Override\r\n            public void onTransactionResponse(Bundle bundle) {\r\n                setTransactionDetails(bundle);\r\n            }\r\n\r\n            @Override\r\n            public void networkNotAvailable() {\r\n                Log.e(TAG, \"network not available \");\r\n                Toast.makeText(PaytmPayment.this,\"network not available\",Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void clientAuthenticationFailed(String s) {\r\n                Log.e(TAG, \"Clientauth \" + s);\r\n                Toast.makeText(PaytmPayment.this,\"Clientauth \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void someUIErrorOccurred(String s) {\r\n                Log.e(TAG, \" UI error \" + s);\r\n                Toast.makeText(PaytmPayment.this,\" UI error \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onErrorLoadingWebPage(int i, String s, String s1) {\r\n                Log.e(TAG, \" error loading web \" + s + \"--\" + s1);\r\n                Toast.makeText(PaytmPayment.this,\" error loading web \" + s + \"--\" + s1,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onBackPressedCancelTransaction() {\r\n                Log.e(TAG, \"backPress \");\r\n                Toast.makeText(PaytmPayment.this,\"backPress \",Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onTransactionCancel(String s, Bundle bundle) {\r\n                Log.e(TAG, \" transaction cancel \" + s);\r\n                Toast.makeText(PaytmPayment.this,\" transaction cancel \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            /*@Override\r\n\t\t\tpublic void onErrorProceed(String s) {\r\n\t\t\t\tLog.e(TAG, \" onErrorProcess \" + s);\r\n\t\t\t}*/\r\n\r\n        });\r\n\r\n        transactionManager.setShowPaymentUrl(host + \"theia/api/v1/showPaymentPage\");\r\n        transactionManager.startTransaction(this, 0);\r\n    }\r\n\tprivate void getDetails() {\r\n\t\tOrderId = Genrate();\r\n\t\tFirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n\t\t\t\t.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n\t\t\t\t\t\tassert value != null;\r\n\t\t\t\t\t\tEmail = value.getString(\"Email\");\r\n\t\t\t\t\t\tMobile = value.getString(\"Mobile\");\r\n\t\t\t\t\t\tfirstName = value.getString(\"Name\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t}\r\n\tprivate void AreYouSureCancel() {\r\n\t\tAlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n\t\talert.setMessage(\"Are you sure to Cancel this Payment ?\")\r\n\t\t\t\t.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\r\n\t\t\t\t\t    finish();\r\n\t\t\t\t\t}\r\n\t\t\t\t}).setNegativeButton(\"No\", null);\r\n\t\tAlertDialog alert1 = alert.create();\r\n\t\talert1.show();\r\n\t}\r\n    private void setTransactionDetails(final Bundle bundle) {\r\n        try {\r\n            DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                    .collection(\"transaction\").document(currentSection).collection(\"TXNID\")\r\n                    .document(Objects.requireNonNull(bundle.getString(\"TXNID\")));\r\n            final String TXNDATE = bundle.getString(\"TXNDATE\");\r\n            Map<String,String> map = new HashMap<>();\r\n            Set<String> d = bundle.keySet();\r\n            for (String key : d) map.put(key, bundle.getString(key));\r\n            map.put(\"currentSubject\",currentSubject);\r\n            map.put(\"currentChapter\",currentChapter);\r\n            reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void aVoid) {\r\n                    if(Objects.equals(bundle.getString(\"STATUS\"), \"TXN_SUCCESS\")) setSuccessProductDetails(TXNDATE);\r\n                    else{ Toast.makeText(PaytmPayment.this,\"Transaction failed\",Toast.LENGTH_SHORT).show(); }\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(PaytmPayment.this,\"Transaction insertion failure\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n        catch (Exception e){\r\n            e.printStackTrace();\r\n            Toast.makeText(PaytmPayment.this,\"Exception in data saving\",Toast.LENGTH_SHORT).show();\r\n        }\r\n\t}\r\n\tprivate void setSuccessProductDetails(final String TXNDATE) {\r\n\t\ttry {\r\n\t\t\tfinal DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                    .collection(\"Products\").document(currentSection).collection(\"ProductId\").document(currentChapter);\r\n            final Map<String, String> map = new HashMap<>();\r\n            reference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    String oldDate = documentSnapshot.getString(\"ExpiryDate\");\r\n                    if(oldDate!=null && getDateAfter(oldDate,TXNDATE)) map.put(\"ExpiryDate\",getExpiryDate(oldDate));\r\n                    else { map.put(\"ExpiryDate\",getExpiryDate(TXNDATE)); }\r\n                    map.put(\"currentSubject\",currentSubject);\r\n                    reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            Toast.makeText(PaytmPayment.this,\"Transaction successfully done\",Toast.LENGTH_SHORT).show();\r\n                            finish();\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(PaytmPayment.this,\"contact customer support\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(PaytmPayment.this,\"Failure product transaction\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n\t\t}\r\n\t\tcatch(Exception e){\r\n\t\t\te.printStackTrace();\r\n\t\t\tToast.makeText(PaytmPayment.this,\"Exception in setSuccessProductDetails\",Toast.LENGTH_SHORT).show();\r\n\t\t}\r\n\t}\r\n\r\n    private boolean getDateAfter(String oldDate1, String txndate) {\r\n\t\tboolean result = false;\r\n\t\ttry {\r\n\t\t\tSimpleDateFormat s1 = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.US);\r\n\t\t\tDate d1 = s1.parse(oldDate1), d2 = s1.parse(txndate);\r\n\t\t\tassert d1 != null;\r\n\t\t\tif (d1.after(d2)) result = true;\r\n\t\t} catch (ParseException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate String getExpiryDate(String txndate) {\r\n\t\ttry {\r\n\t\t\tCalendar c = Calendar.getInstance();\r\n\t\t\t@SuppressLint(\"SimpleDateFormat\") SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss.0\");\r\n\t\t\tc.setTime(Objects.requireNonNull(sdf.parse(txndate)));\r\n\t\t\tc.add(Calendar.DAY_OF_MONTH, Integer.parseInt(FinalMonth) * 30);\r\n\t\t\ttxndate = sdf.format(c.getTime());\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn txndate;\r\n\t}\r\n\r\n\r\n\t@Override\r\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\r\n\t\tint activityRequestCode = 0;\r\n\t\tif (requestCode == activityRequestCode) {\r\n\t\t\tBundle bundle = data.getExtras();\r\n\t\t\tassert bundle != null;\r\n\t\t\tfor (String key : bundle.keySet()) {\r\n\t\t\t\tLog.e(TAG, key + \" : \" + (bundle.get(key) != null ? bundle.get(key) : \"NULL\"));\r\n\t\t\t}\r\n\t\t\tLog.e(TAG, \" data \" + data.getStringExtra(\"nativeSdkForMerchantMessage\"));\r\n\t\t\tToast.makeText(this, data.getStringExtra(\"nativeSdkForMerchantMessage\")\r\n\t\t\t\t\t+ data.getStringExtra(\"response\"), Toast.LENGTH_SHORT).show();\r\n\t\t} else {\r\n\t\t\tLog.e(TAG, \" payment failed\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic String Genrate() {\r\n\t\tCalendar c = Calendar.getInstance();\r\n\t\t@SuppressLint(\"SimpleDateFormat\") SimpleDateFormat df = new SimpleDateFormat(\"ddMMyyhhmmss\");\r\n\t\tString date = df.format(c.getTime());\r\n\t\tRandom rand = new Random();\r\n\t\tint min = 1000, max = 9999;\r\n\t\tint randomNum = rand.nextInt((max - min) + 1) + min;\r\n\t\treturn date + randomNum;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onStart() {\r\n\t\tsuper.onStart();\r\n\t\tgetDetails();\r\n\t}\r\n    @Override\r\n\tprotected void onStop() {\r\n\t\tsuper.onStop();\r\n        Runtime.getRuntime().gc();\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onDestroy() {\r\n\t\tsuper.onDestroy();\r\n        Runtime.getRuntime().gc();\r\n\t}\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        AreYouSureCancel();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/PaytmPayment.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/java/com/example/itifighter/PaytmPayment.java	(date 1607845170156)
-@@ -497,4 +497,296 @@
-     public void onBackPressed() {
-         AreYouSureCancel();
-     }
-+}
-+
-+class PaytmPaymentpp extends AppCompatActivity {
-+    private final String Mid = "ahKvVJ36172797507439";
-+    private final String Uid = FirebaseAuth.getInstance().getUid();
-+    private String OrderId;
-+    private String Mobile;
-+    private String Email;
-+    private String txnAmount;
-+    private String firstName;
-+    private String currentSubject;
-+    private String currentChapter;
-+    private final String TAG = "PaytmPayment";
-+    private String currentSection;
-+
-+    @SuppressLint("SetTextI18n")
-+    @Override
-+    protected void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+        setContentView(R.layout.activity_paytm_payment_pp);
-+        Intent intent = getIntent();
-+        // get Data from intent
-+        final String pdfPrice = intent.getStringExtra("price");
-+        final String Discount = intent.getStringExtra("discount");
-+        currentSection      = intent.getStringExtra("curruntPdf");
-+        currentSubject      = intent.getStringExtra("currentSubject");
-+        currentChapter      = intent.getStringExtra("currentChapter");
-+        String pdfName       = intent.getStringExtra("titleName");
-+
-+
-+        //get Instance of layout and set data in main view
-+        TextView title = findViewById(R.id.pdfTitle),Price = findViewById(R.id.pdfPrice);
-+        title.setText(pdfName);
-+        Price.setText("\u20B9 " + pdfPrice);
-+        Price.setTextColor(Color.BLACK);
-+        final TextView subPdfPrice = findViewById(R.id.sub_pdfPrice),subPdfDiscount = findViewById(R.id.sub_pdfDiscountPrice),finalPrice = findViewById(R.id.finalpdfPrice);
-+        subPdfPrice.setText("\u20B9 "+pdfPrice);
-+        subPdfDiscount.setText("- \u20B9 "+Discount);
-+        final String pdfFinalPrice = getFinalPrice(pdfPrice,Discount);
-+        finalPrice.setText(pdfFinalPrice);
-+        Button cancel = findViewById(R.id.cancelx), payx = findViewById(R.id.payx);
-+        cancel.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                AreYouSureCancel();
-+            }
-+        });
-+        payx.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                txnAmount = pdfFinalPrice;
-+                if (txnAmount.equals("")) {
-+                    Toast.makeText(PaytmPaymentpp.this,"Amount is mandatory",Toast.LENGTH_SHORT).show();
-+                }
-+                else getToken();
-+            }
-+        });
-+    }
-+
-+    private String getFinalPrice(String pdfPrice, String discount) {
-+        int p=Integer.parseInt(pdfPrice),d=Integer.parseInt(discount);
-+        return String.valueOf(p-((p*d)/100));
-+    }
-+
-+    private void getToken() {
-+        ServiceWrapper serviceWrapper = new ServiceWrapper();
-+        Call<Token_Res> call = serviceWrapper.getTokenCall("12345", Mid, OrderId, txnAmount, Uid, Email, Mobile, firstName);
-+        call.enqueue(new Callback<Token_Res>() {
-+            @Override
-+            public void onResponse(@NonNull Call<Token_Res> call, @NonNull Response<Token_Res> response) {
-+                try {
-+                    if (response.isSuccessful() && response.body() != null) {
-+                        if (!response.body().getBody().getTxnToken().equals("")) {
-+                            startPaytmPayment(response.body().getBody().getTxnToken());
-+                        } else {
-+
-+                            Log.e(TAG, "token status false");
-+                            Toast.makeText(PaytmPaymentpp.this,"token status false",Toast.LENGTH_SHORT).show();
-+                        }
-+                    }
-+                } catch (Exception e) {
-+
-+                    Log.e(TAG, "Error in token Response" + e.toString());
-+                    Toast.makeText(PaytmPaymentpp.this,"Error in token Response" + e.toString(),Toast.LENGTH_LONG).show();
-+                }
-+            }
-+            @Override
-+            public void onFailure(@NonNull Call<Token_Res> call, @NonNull Throwable t) {
-+
-+                Log.e(TAG, " response error " + t.toString());
-+            }
-+        });
-+    }
-+
-+    private void startPaytmPayment(String txnToken) {
-+        // for test mode use it
-+        String host = "https://securegw-stage.paytm.in/";
-+        // for production mode use it //  String host = "https://securegw.paytm.in/";
-+        String callBackUrl = host+"theia/paytmCallback?ORDER_ID=" + OrderId;
-+        PaytmOrder paytmOrder = new PaytmOrder(OrderId, Mid, txnToken, txnAmount, callBackUrl);
-+        TransactionManager transactionManager = new TransactionManager(paytmOrder, new PaytmPaymentTransactionCallback() {
-+
-+            @Override
-+            public void onTransactionResponse(Bundle bundle) {
-+                setTransactionDetails(bundle);
-+            }
-+
-+            @Override
-+            public void networkNotAvailable() {
-+                Log.e(TAG, "network not available ");
-+                Toast.makeText(PaytmPaymentpp.this,"network not available",Toast.LENGTH_SHORT).show();
-+            }
-+
-+            @Override
-+            public void clientAuthenticationFailed(String s) {
-+                Log.e(TAG, "Clientauth " + s);
-+                Toast.makeText(PaytmPaymentpp.this,"Clientauth " + s,Toast.LENGTH_SHORT).show();
-+            }
-+
-+            @Override
-+            public void someUIErrorOccurred(String s) {
-+                Log.e(TAG, " UI error " + s);
-+                Toast.makeText(PaytmPaymentpp.this," UI error " + s,Toast.LENGTH_SHORT).show();
-+            }
-+
-+            @Override
-+            public void onErrorLoadingWebPage(int i, String s, String s1) {
-+                Log.e(TAG, " error loading web " + s + "--" + s1);
-+                Toast.makeText(PaytmPaymentpp.this," error loading web " + s + "--" + s1,Toast.LENGTH_SHORT).show();
-+            }
-+
-+            @Override
-+            public void onBackPressedCancelTransaction() {
-+                Log.e(TAG, "backPress ");
-+                Toast.makeText(PaytmPaymentpp.this,"backPress ",Toast.LENGTH_SHORT).show();
-+            }
-+
-+            @Override
-+            public void onTransactionCancel(String s, Bundle bundle) {
-+                Log.e(TAG, " transaction cancel " + s);
-+                Toast.makeText(PaytmPaymentpp.this," transaction cancel " + s,Toast.LENGTH_SHORT).show();
-+            }
-+
-+            /*@Override
-+			public void onErrorProceed(String s) {
-+				Log.e(TAG, " onErrorProcess " + s);
-+			}*/
-+
-+        });
-+
-+        transactionManager.setShowPaymentUrl(host + "theia/api/v1/showPaymentPage");
-+        transactionManager.startTransaction(this, 0);
-+    }
-+    private void getDetails() {
-+        OrderId = Genrate();
-+        FirebaseFirestore.getInstance().collection("users").document(Uid)
-+                .addSnapshotListener(new EventListener<DocumentSnapshot>() {
-+                    @Override
-+                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {
-+                        assert value != null;
-+                        Email = value.getString("Email");
-+                        Mobile = value.getString("Mobile");
-+                        firstName = value.getString("Name");
-+                    }
-+                });
-+    }
-+    private void AreYouSureCancel() {
-+        AlertDialog.Builder alert = new AlertDialog.Builder(this);
-+        alert.setMessage("Are you sure to Cancel this Payment ?")
-+                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
-+                    public void onClick(DialogInterface dialog, int which) {
-+                        finish();
-+                    }
-+                }).setNegativeButton("No", null);
-+        AlertDialog alert1 = alert.create();
-+        alert1.show();
-+    }
-+
-+    private void setTransactionDetails(final Bundle bundle) {
-+        try {
-+            DocumentReference reference = FirebaseFirestore.getInstance().collection("users").document(Uid)
-+                    .collection("transaction").document(currentSection).collection("TXNID")
-+                    .document(Objects.requireNonNull(bundle.getString("TXNID")));
-+            final String TXNDATE = bundle.getString("TXNDATE");
-+            Map<String,String> map = new HashMap<>();
-+            Set<String> d = bundle.keySet();
-+            for (String key : d) map.put(key, bundle.getString(key));
-+            map.put("currentSubject",currentSubject);
-+            map.put("currentChapter",currentChapter);
-+            reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {
-+                @Override
-+                public void onSuccess(Void aVoid) {
-+                    if(Objects.equals(bundle.getString("STATUS"), "TXN_SUCCESS")) setSuccessProductDetails(TXNDATE);
-+                    else{ Toast.makeText(PaytmPaymentpp.this,"Transaction failed",Toast.LENGTH_SHORT).show(); }
-+                }
-+            }).addOnFailureListener(new OnFailureListener() {
-+                @Override
-+                public void onFailure(@NonNull Exception e) {
-+                    Toast.makeText(PaytmPaymentpp.this,"Transaction insertion failure",Toast.LENGTH_SHORT).show();
-+                }
-+            });
-+        }
-+        catch (Exception e){
-+            e.printStackTrace();
-+            Toast.makeText(PaytmPaymentpp.this,"Exception in data saving",Toast.LENGTH_SHORT).show();
-+        }
-+    }
-+    private void setSuccessProductDetails(final String TXNDATE) {
-+        try {
-+            final DocumentReference reference = FirebaseFirestore.getInstance().collection("users").document(Uid)
-+                    .collection("Products").document(currentSection).collection("ProductId").document(currentChapter);
-+            final Map<String, String> map = new HashMap<>();
-+            reference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
-+                @Override
-+                public void onSuccess(DocumentSnapshot documentSnapshot) {
-+                    map.put("currentSubject",currentSubject);
-+                    reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {
-+                        @Override
-+                        public void onSuccess(Void aVoid) {
-+                            Toast.makeText(PaytmPaymentpp.this,"Transaction successfully done",Toast.LENGTH_SHORT).show();
-+                            finish();
-+                        }
-+                    }).addOnFailureListener(new OnFailureListener() {
-+                        @Override
-+                        public void onFailure(@NonNull Exception e) {
-+                            Toast.makeText(PaytmPaymentpp.this,"contact customer support",Toast.LENGTH_SHORT).show();
-+                        }
-+                    });
-+                }
-+            }).addOnFailureListener(new OnFailureListener() {
-+                @Override
-+                public void onFailure(@NonNull Exception e) {
-+                    Toast.makeText(PaytmPaymentpp.this,"Failure product transaction",Toast.LENGTH_SHORT).show();
-+                }
-+            });
-+        }
-+        catch(Exception e){
-+            e.printStackTrace();
-+            Toast.makeText(PaytmPaymentpp.this,"Exception in setSuccessProductDetails",Toast.LENGTH_SHORT).show();
-+        }
-+    }
-+
-+
-+    @Override
-+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-+        super.onActivityResult(requestCode, resultCode, data);
-+        int activityRequestCode = 0;
-+        if (requestCode == activityRequestCode) {
-+            Bundle bundle = data.getExtras();
-+            assert bundle != null;
-+            for (String key : bundle.keySet()) {
-+                Log.e(TAG, key + " : " + (bundle.get(key) != null ? bundle.get(key) : "NULL"));
-+            }
-+            Log.e(TAG, " data " + data.getStringExtra("nativeSdkForMerchantMessage"));
-+            Toast.makeText(this, data.getStringExtra("nativeSdkForMerchantMessage")
-+                    + data.getStringExtra("response"), Toast.LENGTH_SHORT).show();
-+        } else {
-+            Log.e(TAG, " payment failed");
-+        }
-+    }
-+
-+    public String Genrate() {
-+        Calendar c = Calendar.getInstance();
-+        @SuppressLint("SimpleDateFormat") SimpleDateFormat df = new SimpleDateFormat("ddMMyyhhmmss");
-+        String date = df.format(c.getTime());
-+        Random rand = new Random();
-+        int min = 1000, max = 9999;
-+        int randomNum = rand.nextInt((max - min) + 1) + min;
-+        return date + randomNum;
-+    }
-+
-+    @Override
-+    protected void onStart() {
-+        super.onStart();
-+        getDetails();
-+    }
-+    @Override
-+    protected void onStop() {
-+        super.onStop();
-+        Runtime.getRuntime().gc();
-+    }
-+
-+    @Override
-+    protected void onDestroy() {
-+        super.onDestroy();
-+        Runtime.getRuntime().gc();
-+    }
-+
-+    @Override
-+    public void onBackPressed() {
-+        AreYouSureCancel();
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/itifighter/TestSeries.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighter.TestSeriesX.CustomListItemX;\r\nimport com.example.itifighter.TestSeriesX.CustomListItemY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterX;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class TestSeries extends Fragment {\r\n\r\n    private String currentSubject,currentChapter,currentTest;\r\n    private ArrayList<CustomListItem> Subjects;\r\n    private ArrayList<CustomListItemX> Chapters;\r\n    private ArrayList<CustomListItemY> Tests;\r\n    private ListView listView;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n    private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;\r\n    private ImageButton back;\r\n    private ProgressDialog dialog;\r\n\r\n    private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters\r\n    public TestSeries() { }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);\r\n        listView = mtView.findViewById(R.id.testxtRecycle);\r\n        back = mtView.findViewById(R.id.CustomBackButtonTS);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        LoadSubjects();\r\n        return mtView;\r\n    }\r\n    public void CustomBackButton(){\r\n        switch (currentLayer){\r\n            case 1:\r\n                LoadSubjects();\r\n           case 2:\r\n                LoadChapters();\r\n        }\r\n    }\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Subjects.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\r\n                                \"ts\"));\r\n                        SubjectId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubject = SubjectId.get(position);\r\n                            currentSubjectPos = position;\r\n                            LoadChapters();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    void LoadChapters(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").document(currentSubject)\r\n                .collection(\"chapter\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Chapters = new ArrayList<>();\r\n                    ChapterId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Chapters.add(new CustomListItemX(document.getString(\"name\"), String.valueOf(document.get(\"cc\")) , \"ts\",document.getId(),document.getString(\"month1\"),document.getString(\"month2\"),document.getString(\"month3\"),document.getString(\"price1\"),document.getString(\"price2\"),document.getString(\"price3\"),document.getString(\"discount1\"),document.getString(\"discount2\"),document.getString(\"discount3\")));\r\n                        ChapterId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItemX> adapter = new CustomListViewArrayAdapterX(mContext,0,Chapters,currentSubject,ChapterId);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {\r\n                            String Uid = FirebaseAuth.getInstance().getUid();\r\n                            assert Uid != null;\r\n                            FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                                    .document(\"ts\").collection(\"ProductId\").document(ChapterId.get(i))\r\n                                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                            if(task.isSuccessful()){\r\n                                                DocumentSnapshot documentSnapshot = task.getResult();\r\n                                                if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                                                    currentChapter = ChapterId.get(i);\r\n                                                    currentChapterPos = i;\r\n                                                    LoadTest();\r\n                                                }\r\n                                                else{\r\n                                                    Intent intent = new Intent(getContext(), PaytmPayment.class);\r\n                                                    intent.putExtra(\"ProductId\",Chapters.get(i).getId());\r\n                                                    intent.putExtra(\"month1\",Chapters.get(i).getMonth1());\r\n                                                    intent.putExtra(\"month2\",Chapters.get(i).getMonth2());\r\n                                                    intent.putExtra(\"month3\",Chapters.get(i).getMonth3());\r\n                                                    intent.putExtra(\"price1\",Chapters.get(i).getPrice1());\r\n                                                    intent.putExtra(\"price2\",Chapters.get(i).getPrice2());\r\n                                                    intent.putExtra(\"price3\",Chapters.get(i).getPrice3());\r\n                                                    intent.putExtra(\"discount1\",Chapters.get(i).getDiscount1());\r\n                                                    intent.putExtra(\"discount2\",Chapters.get(i).getDiscount2());\r\n                                                    intent.putExtra(\"discount3\",Chapters.get(i).getDiscount3());\r\n                                                    intent.putExtra(\"currentSection\",Chapters.get(i).getImagex());\r\n                                                    intent.putExtra(\"titleName\",Chapters.get(i).getTopicHeader());\r\n                                                    intent.putExtra(\"countTest\",Chapters.get(i).getTest());\r\n                                                    intent.putExtra(\"currentSubject\",currentSubject);\r\n                                                    intent.putExtra(\"currentChapter\",ChapterId.get(i));\r\n                                                    mContext.startActivity(intent);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadTest(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    Tests = new ArrayList<>();\r\n                    TestId = new ArrayList<>();\r\n                    MPQ = new ArrayList<>();\r\n                    Timmr = new ArrayList<>();\r\n                    Tittl = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        int duration = Integer.parseInt(String.valueOf(document.get(\"duration\"))), marks = Integer.parseInt(String.valueOf(document.get(\"marks\"))), NOQ = Integer.parseInt(String.valueOf(document.get(\"NOQs\")));\r\n                        int score = marks*NOQ;\r\n                        Tests.add(new CustomListItemY(document.getId(),\r\n                                document.getString(\"title\"), String.valueOf(duration),\r\n                                String.valueOf(NOQ), String.valueOf(score)));\r\n                        TestId.add(document.getId());\r\n                        MPQ.add(String.valueOf(marks));\r\n                        Timmr.add(String.valueOf(duration));\r\n                        Tittl.add(document.getString(\"title\"));\r\n                    }\r\n                    listView.setAdapter(new CustomListViewArrayAdapterZ(mContext,0,Tests,currentSubject,currentChapter));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                                currentTest = TestId.get(i);\r\n                                currentTestPos = i;\r\n                                LoadExam();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void LoadExam() {\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").document(currentTest).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n\r\n\r\n                            final ArrayList<Object> questions = new ArrayList<>();\r\n                            for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                            }\r\n\r\n                            final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                            final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n                            final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"ts\").collection(\"test\");\r\n                            UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    boolean found = false;\r\n                                                    String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                                    String sub_list = \"\";\r\n                                                    String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                                    String targetChapterID = currentChapter;\r\n                                                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                                        if (document.getId().equals(targetChapterID)) {\r\n                                                            found = true;\r\n                                                            total_attempted = document.getString(\"total_attempted\");\r\n                                                            total_skipped = document.getString(\"total_skipped\");\r\n                                                            total_correct = document.getString(\"total_correct\");\r\n                                                            accuracy = document.getString(\"accuracy\");\r\n                                                            tpq = document.getString(\"tpq\");\r\n                                                            _mpq = document.getString(\"_mpq\");\r\n                                                            sub_list = document.getString(\"answer_key\");\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (found) {\r\n                                                        //load result activity\r\n                                                            Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                                            myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                                            myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                                            myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                                            myIntent.putExtra(\"total_correct\", total_correct);\r\n                                                            myIntent.putExtra(\"section\", \"ts\");\r\n                                                            myIntent.putExtra(\"subject\", currentSubject);\r\n                                                            myIntent.putExtra(\"chapter\", currentChapter);\r\n                                                            myIntent.putExtra(\"questions\", questions);\r\n                                                            myIntent.putExtra(\"answer_key\", sub_list);\r\n                                                            assert _mpq != null;\r\n                                                            myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                                            myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentTestPos)));\r\n                                                            myIntent.putExtra(\"title\", Tittl.get(currentTestPos));\r\n                                                            myIntent.putExtra(\"accuracy\", accuracy);\r\n                                                            myIntent.putExtra(\"tpq\", tpq);\r\n                                                            dialog.dismiss();\r\n                                                            startActivity(myIntent);\r\n                                                    } else {\r\n                                                        Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                        myIntent.putExtra(\"section\", \"ts\");\r\n                                                        myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                        myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                        myIntent.putExtra(\"questions\", questions);\r\n                                                        myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"title\", Tittl.get(currentChapterPos) + \" (Test Series)\");\r\n                                                        dialog.dismiss();\r\n                                                        startActivity(myIntent);\r\n                                                        }\r\n                                                }else {\r\n                                                  /*  Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                    myIntent.putExtra(\"section\", \"ts\");\r\n                                                    myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                    myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                    myIntent.putExtra(\"questions\", questions);\r\n                                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"title\", Tittl.get(currentChapterPos));\r\n                                                    dialog.dismiss();\r\n                                                    startActivity(myIntent);*/\r\n                                                }\r\n                                        }\r\n                            });\r\n\r\n\r\n\r\n                } else {\r\n                    Toast.makeText(mContext,\"no test found\",Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    }
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/TestSeries.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/java/com/example/itifighter/TestSeries.java	(date 1607796695520)
-@@ -219,7 +219,7 @@
-                         public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                                 currentTest = TestId.get(i);
-                                 currentTestPos = i;
--                                LoadExam();
-+                                 LoadExam();
-                         }
-                     });
-                     dialog.dismiss();
-Index: app/src/main/res/values/strings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <string name=\"app_name\">ITIFighter</string>\r\n    <string name=\"sign_in\">Sign In</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"login_to_continue_your_account\">Login to continue your account</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"don_t_have_an_account\">Don\\'t have an account</string>\r\n    <string name=\"register\">Register</string>\r\n    <string name=\"already_have_an_account\">Already have an account</string>\r\n    <string name=\"name\">Name</string>\r\n    <string name=\"mobile\">Mobile</string>\r\n    <string name=\"state\">State</string>\r\n    <string name=\"trade\">Trade</string>\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"menu_Profile\">My Profile</string>\r\n    <string name=\"menu_chat\">Discussion</string>\r\n    <string name=\"share\">Share</string>\r\n    <string name=\"rating\">Rating</string>\r\n    <string name=\"change\">Change Password</string>\r\n    <string name=\"logout\">Logout</string>\r\n    <string name=\"username\">ITIFighter</string>\r\n    <string name=\"menu_groups\">Groups</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"todo\">TODO</string>\r\n    <string name=\"user_email\">Wiliam@gmail.com</string>\r\n    <string name=\"stateX\">Uttar Pradesh</string>\r\n    <string name=\"TradeX\">Fitter</string>\r\n    <string name=\"designed_by_n_sharmask_amp_aj\"><![CDATA[Designed & Devloped by \\n Sharmask & AJ]]></string>\r\n    <string name=\"phone\">phone</string>\r\n    <string name=\"rate_our_app\">Rate our app</string>\r\n    <string name=\"rate_our_previous_paper\">Rate our previous Paper</string>\r\n    <string name=\"rate_our_mock_test\">Rate our mock test</string>\r\n    <string name=\"rate_our_test_series\">Rate our Tets series</string>\r\n    <string name=\"rate_our_daily_live_test\">Rate our daily live test</string>\r\n    <string name=\"submit\">submit</string>\r\n    <string name=\"oldpassword\">Old Password</string>\r\n    <string name=\"newpassword\">New Password</string>\r\n    <string name=\"confirmpassword\">Confirm Password</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n\r\n    <string name=\"joey_tribbiani\">Joey Tribbiani</string>\r\n    <string name=\"new_york_usa\">new york, usa</string>\r\n    <string name=\"_453k\">453K</string>\r\n    <string name=\"_873\">873</string>\r\n    <string name=\"_1_202_555_0157\" tools:ignore=\"TypographyDashes\">+1–202–555-0157</string>\r\n    <string name=\"MyScore\">My Score</string>\r\n    <string name=\"MyRank\">My Rank</string>\r\n    <string name=\"discription\">Discription</string>\r\n    <string name=\"title\">title</string>\r\n    <string name=\"new_message\">new message…</string>\r\n\r\n    <string name=\"placeholder_message\">Placeholder message</string>\r\n    <string name=\"rose\">Rose</string>\r\n    <string name=\"how_are_you_doing_this_is_a_long_message_that_should_probably_wrap\">How are you doing? This is a long message that should probably wrap.</string>\r\n\r\n    <!-- Strings related to login -->\r\n\r\n    <!-- Firestore Strings -->\r\n    <string name=\"collection_chatrooms\">Chatrooms</string>\r\n    <string name=\"collection_chat_messages\">Chat Messages</string>\r\n    <string name=\"collection_chatroom_user_list\">User List</string>\r\n\r\n    <!-- Intent extras -->\r\n\r\n    <!-- Fragments Names -->\r\n\r\n    <!-- Other Strings -->\r\n    <string name=\"payment_gateway\">Payment Gateway</string>\r\n    <string name=\"www_google_com\">www.noobworm.xyz</string>\r\n    <string name=\"paytm_integrations\">Payment integration</string>\r\n    <string name=\"order_id\">order id</string>\r\n    <string name=\"customer_id\">customer_id</string>\r\n    <string name=\"price\">price</string>\r\n    <string name=\"start_payment\">start payment</string>\r\n    <string name=\"choose_subscription_plan\">Choose Subscription</string>\r\n    <string name=\"start\">Start</string>\r\n    <string name=\"result\">Result</string>\r\n    <string name=\"title_here\">TITLE HERE</string>\r\n    <string name=\"submit_feedback\">Submit Feedback</string>\r\n    <string name=\"cancel\">Cancel</string>\r\n    <string name=\"_1\">+1</string>\r\n    <string name=\"dummy_question\">dummy_question</string>\r\n    <string name=\"something_wrong_with_this_question\">Something wrong with this question?</string>\r\n    <string name=\"give_feedback\">Give feedback!</string>\r\n    <string name=\"skip\">Skip</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"live\">LIVE</string>\r\n    <string name=\"ques_num\">Ques Num</string>\r\n    <string name=\"time_left\">Time left</string>\r\n    <string name=\"total_pending_quetion\">total pending quetion:</string>\r\n    <string name=\"total_skipped_quetion\">total skipped quetion:</string>\r\n    <string name=\"total_attempted_quetion\">total attempted quetion:</string>\r\n    <string name=\"total_available_quetion\">total available quetion:</string>\r\n    <string name=\"_10\">10</string>\r\n    <string name=\"score\">Score</string>\r\n    <string name=\"title_activity_view_solution_xyz\">ViewSolutionXyz</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"prev\">PREV</string>\r\n    <string name=\"leaderboard\">LEADERBOARD</string>\r\n    <string name=\"student_name\">Student Name</string>\r\n    <string name=\"rank\">Rank</string>\r\n    <string name=\"percentage\">Percentage</string>\r\n    <string name=\"points\">Points</string>\r\n    <string name=\"resultX\">RESULT</string>\r\n    <string name=\"analysis\">Analysis</string>\r\n    <string name=\"percent\">Percent</string>\r\n    <string name=\"second\">Second</string>\r\n    <string name=\"accuracy\">Accuracy</string>\r\n    <string name=\"time_quetion\">Time / Quetion</string>\r\n    <string name=\"view_solution\">View Solution</string>\r\n    <string name=\"view_leader_board\">View Leader Board</string>\r\n    <string name=\"re_take_exam\">Re-Take Exam</string>\r\n    <string name=\"close\">CLOSE</string>\r\n    <string name=\"solution\">SOLUTION</string>\r\n    <string name=\"a\">A</string>\r\n    <string name=\"b\">B</string>\r\n    <string name=\"c\">C</string>\r\n    <string name=\"d\">D</string>\r\n    <string name=\"_100_u20b9\"><strike>100 ₹</strike></string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"i_have_read_all_instructions\">I have read all instructions</string>\r\n    <string name=\"instruction\">INSTRUCTION</string>\r\n    <string name=\"minutes\">Minutes</string>\r\n    <string name=\"marks\">Marks</string>\r\n    <string name=\"quetions\">Quetions</string>\r\n\r\n\r\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/strings.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/res/values/strings.xml	(date 1607794764703)
-@@ -131,6 +131,7 @@
-     <string name="minutes">Minutes</string>
-     <string name="marks">Marks</string>
-     <string name="quetions">Quetions</string>
-+    <string name="Live_Test">Live Test</string>
- 
- 
- </resources>
-\ No newline at end of file
-Index: .idea/dictionaries/pos08.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><component name=\"ProjectDictionaryState\">\r\n  <dictionary name=\"pos08\">\r\n    <words>\r\n      <w>fprice</w>\r\n      <w>hapter</w>\r\n      <w>imagex</w>\r\n      <w>leaderboard</w>\r\n      <w>quesnumwindow</w>\r\n      <w>resultw</w>\r\n      <w>timmr</w>\r\n      <w>tittl</w>\r\n      <w>xview</w>\r\n    </words>\r\n  </dictionary>\r\n</component>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/dictionaries/pos08.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ .idea/dictionaries/pos08.xml	(date 1607842351633)
-@@ -1,10 +1,13 @@
- <component name="ProjectDictionaryState">
-   <dictionary name="pos08">
-     <words>
-+      <w>currunt</w>
-       <w>fprice</w>
-       <w>hapter</w>
-       <w>imagex</w>
-+      <w>itifighter</w>
-       <w>leaderboard</w>
-+      <w>paymentpp</w>
-       <w>quesnumwindow</w>
-       <w>resultw</w>
-       <w>timmr</w>
-Index: app/src/main/java/com/example/itifighter/TestResultActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>/*\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.WriteBatch;\r\n\r\nimport java.io.Serializable;\r\nimport java.math.BigDecimal;\r\nimport java.math.RoundingMode;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        findViewById(R.id.ResultLL).setVisibility(View.INVISIBLE);\r\n        findViewById(R.id.UploadingTXT).setVisibility(View.VISIBLE);\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        if (getIntent().getStringExtra(\"is_past_result\") != null && getIntent().getStringExtra(\"is_past_result\").contains(\"true\")) {\r\n            marksUploaded = true;\r\n            pastResultLT = true;\r\n            tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n            tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n            tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n            String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n            _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n            String[] str_ans = sub_list.split(\"_\");\r\n            sub_ans = new int[str_ans.length];\r\n            for (int i = 0; i < str_ans.length; i++)\r\n                sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n            findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n            findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n            if (targetSection == \"lt\") {\r\n\r\n            } else {\r\n                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n            }\r\n            accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n            total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n        } else {\r\n            findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n            sub_ans = getIntent().getIntArrayExtra(\"sub_ans\");\r\n            selectedFeedbackOption = getIntent().getIntArrayExtra(\"selectedFeedbackOption\");\r\n            //Toast.makeText(this, \"total ques: total ans: \"+questions.size()+\" : \"+sub_ans.length, Toast.LENGTH_LONG).show();\r\n\r\n            for (int i = 0; i < sub_ans.length; i++) {\r\n                //Toast.makeText(this, \"\"+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();\r\n                if (sub_ans[i] == -1) {\r\n                    tsq++;\r\n                } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {\r\n                    marks_obtained += _mpq;\r\n                    tca++;\r\n                } else {\r\n                    tra++;\r\n                }\r\n            }\r\n            total_time_taken = 0;\r\n            accuracy = ((((double) tca) / (tca + tra)) * 100.0);\r\n            accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();\r\n            if (tca + tra > 0) {\r\n                Accuracy.setText(\"\" + accuracy);\r\n                total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra(\"timer\", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));\r\n            }\r\n            tpq = total_time_taken;\r\n\r\n            UploadData();\r\n        }\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n        ;\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    void UploadData() {\r\n        final String uuid = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n        final DocumentReference UserTestRecordDoc = userDoc.collection(\"scoreboard\").document(\"\" + targetSection).collection(\"test\").document(\"\" + finalTCID);\r\n        final float percentageMarks = (tca * _mpq) / total_marks;\r\n        double userRecordScore = targetSection.equals(\"mt\") ? percentageMarks : targetSection.equals(\"lt\") ? percentageMarks * 2 : percentageMarks * 1.5;\r\n\r\n        Map<String, String> userTestRecordMap = new HashMap<>();\r\n        userTestRecordMap.put(\"score\", \"\" + userRecordScore);\r\n        userTestRecordMap.put(\"total_skipped\", \"\" + tsq);\r\n        userTestRecordMap.put(\"total_attempted\", \"\" + (tca + tra));\r\n        userTestRecordMap.put(\"total_correct\", \"\" + tca);\r\n        userTestRecordMap.put(\"_mpq\", \"\" + _mpq);\r\n        userTestRecordMap.put(\"accuracy\", \"\" + accuracy);\r\n        userTestRecordMap.put(\"tpq\", \"\" + tpq);\r\n        String answerString = \"\";\r\n        for (int n : sub_ans)\r\n            answerString += n + \"_\";\r\n        userTestRecordMap.put(\"answer_key\", answerString.substring(0, answerString.length() - 1));\r\n\r\n        UserTestRecordDoc.set(userTestRecordMap);\r\n\r\n        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    //Log.w(TAG, \"Listen failed.\", e);\r\n                    return;\r\n                }\r\n                if (snapshot != null && snapshot.exists()) {\r\n                    final String studentName = snapshot.getString(\"Name\");\r\n                    //Log.d(TAG, \"Current data: \" + snapshot.getData());\r\n                    Map<String, String> scoreboard = new HashMap<>();\r\n                    scoreboard.put(\"Score\", \"\" + (tca * _mpq));\r\n                    scoreboard.put(\"name\", \"\" + studentName);\r\n                    DocumentReference reference = mDatabaseReference.document(\"\" + uuid);\r\n                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            //Toast.makeText(TestResultActivity.this, \"score uploaded in database for user: \"+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();\r\n                            marksUploaded = true;\r\n                            //((TextView)findViewById(R.id.UploadingTXT)).setText(\"uploading feedback, please wait..\");\r\n                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"common\").document(\"post test\").collection(\"feedback\");\r\n                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid).collection(\"feedback\");\r\n                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                    if (task.isSuccessful()) {\r\n                                        int count = task.getResult().size();\r\n                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();\r\n                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {\r\n                                            if (selectedFeedbackOption[i] > -1) {\r\n                                                Map<String, String> _fb = new HashMap<>();\r\n                                                _fb.put(\"question\", questions.get(i).getQuestion());\r\n                                                _fb.put(\"issue\", feedbackOptions[selectedFeedbackOption[i]]);\r\n                                                _fb.put(\"section\", targetSection);\r\n                                                _fb.put(\"subject\", targetSubject);\r\n                                                */\r\n/*_fb.put(\"student\", studentName);*//*\r\n\r\n */\r\n/*_fb.put(\"date\", \"\"+Calendar.getInstance().getTimeInMillis());*//*\r\n\r\n                                                if (targetSection == \"lt\") {\r\n                                                    _fb.put(\"testID\", getIntent().getStringExtra(\"tid\"));\r\n                                                } else {\r\n                                                    _fb.put(\"chapter\", targetChapter);\r\n                                                }\r\n                                                //DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + (++count));\r\n                                                DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + Calendar.getInstance().getTimeInMillis());\r\n                                                batch.set(nycRef, _fb);\r\n                                            }\r\n                                        }\r\n                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n                                                findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n                                                if (targetSection == \"lt\") {\r\n                                                    (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);\r\n                                                    if(!pastResultLT){\r\n                                                        findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n                                                    }else{\r\n                                                        findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                        findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                                    }\r\n                                                } else {\r\n                                                    findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                    findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);\r\n                                        findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);\r\n\r\n                                        if (targetSection == \"lt\") {\r\n                                            (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);\r\n                                            if(!pastResultLT){\r\n                                                findViewById(R.id.ResultLL).setVisibility(View.GONE);\r\n                                            }else{\r\n                                                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                            }\r\n                                        } else {\r\n                                            findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);\r\n                                            findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        //cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        marksUploaded = true;\r\n        pastResultLT = true;\r\n        tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n        tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n        tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n        String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n        String[] str_ans = sub_list.split(\"_\");\r\n        sub_ans = new int[str_ans.length];\r\n        for (int i = 0; i < str_ans.length; i++)\r\n            sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n\r\n        accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n        total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/TestResultActivity.java	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/java/com/example/itifighter/TestResultActivity.java	(date 1607794976243)
-@@ -1,369 +1,3 @@
--/*
--package com.example.itifighter;
--
--import android.annotation.SuppressLint;
--import android.content.Intent;
--import android.os.Bundle;
--import android.view.MotionEvent;
--import android.view.View;
--import android.widget.TextView;
--import android.widget.Toast;
--
--import androidx.annotation.NonNull;
--import androidx.annotation.Nullable;
--import androidx.appcompat.app.AppCompatActivity;
--
--import com.example.itifighterAdmin.Question;
--import com.google.android.gms.tasks.OnCompleteListener;
--import com.google.android.gms.tasks.OnSuccessListener;
--import com.google.android.gms.tasks.Task;
--import com.google.firebase.auth.FirebaseAuth;
--import com.google.firebase.firestore.CollectionReference;
--import com.google.firebase.firestore.DocumentReference;
--import com.google.firebase.firestore.DocumentSnapshot;
--import com.google.firebase.firestore.EventListener;
--import com.google.firebase.firestore.FirebaseFirestore;
--import com.google.firebase.firestore.FirebaseFirestoreException;
--import com.google.firebase.firestore.QuerySnapshot;
--import com.google.firebase.firestore.WriteBatch;
--
--import java.io.Serializable;
--import java.math.BigDecimal;
--import java.math.RoundingMode;
--import java.util.ArrayList;
--import java.util.Arrays;
--import java.util.Calendar;
--import java.util.Collections;
--import java.util.HashMap;
--import java.util.List;
--import java.util.Map;
--import java.util.Objects;
--
--public class TestResultActivity extends AppCompatActivity {
--
--    List<Question> questions;
--    int[] sub_ans, selectedFeedbackOption;
--    int total_marks = 0;
--    long timeLeft;
--    double accuracy = 0.0;
--    int tpq = 0;
--    int marks_obtained = 0;
--    int _mpq = 1;
--    boolean pastResultLT = false;
--    String[] feedbackOptions = {"Wrong Question", "Wrong Options", "Incomplete Question", "Incorrect Grammar", "Question out of syllabus",
--            "Question on old pattern", "Repeated Question"};
--    boolean marksUploaded = false;
--
--    int tca = 0, tra = 0, tsq = 0;
--    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;
--    String targetSection, targetSubject, targetChapter;
--    String finalTCID;
--
--    CollectionReference mDatabaseReference;
--
--    @SuppressLint({"WrongViewCast", "ClickableViewAccessibility"})
--    @Override
--    protected void onCreate(Bundle savedInstanceState) {
--        super.onCreate(savedInstanceState);
--        setContentView(R.layout.activity_result_xyz);
--
--
--        findViewById(R.id.ResultLL).setVisibility(View.INVISIBLE);
--        findViewById(R.id.UploadingTXT).setVisibility(View.VISIBLE);
--
--        final TextView cbt = findViewById(R.id.ContinueBTNRT);
--        cbt.setVisibility(View.INVISIBLE);
--        cbt.setOnTouchListener(new View.OnTouchListener() {
--            @Override
--            public boolean onTouch(View v, MotionEvent event) {
--                if (event.getAction() == MotionEvent.ACTION_UP) {
--                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {
--                        // your action for drawable click event
--                        FinishExam();
--                        return true;
--                    }
--                }
--                return true;
--            }
--        });
--
--        targetSection = getIntent().getStringExtra("section");
--        targetSubject = getIntent().getStringExtra("subject");
--        targetChapter = getIntent().getStringExtra("chapter");
--        timeLeft = getIntent().getLongExtra("timeLeft", 0);
--        questions = (List<Question>) getIntent().getSerializableExtra("questions");
--        _mpq = getIntent().getIntExtra("_mpq", 1);
--
--        finalTCID = targetSection.equals("lt") ? getIntent().getStringExtra("tid") : targetChapter;
--
--        if (targetSection.equals("lt")) {
--            mDatabaseReference = FirebaseFirestore.getInstance().collection("section").document(targetSection).collection("branch").document(targetSubject).collection("chapter").document(targetChapter).collection("tests").document(finalTCID).collection("scoreboard");
--        } else {
--            mDatabaseReference = FirebaseFirestore.getInstance().collection("section").document(targetSection).collection("branch").document(targetSubject).collection("chapter").document(finalTCID).collection("scoreboard");
--        }
--
--        MO = findViewById(R.id.marksObtained);
--        TM = findViewById(R.id.totalMarks);
--        TCA = findViewById(R.id.TCA);
--        TRA = findViewById(R.id.TRA);
--        TSQ = findViewById(R.id.TSQ);
--        Accuracy = findViewById(R.id.Accuracy);
--        TimePerQuestion = findViewById(R.id.TimePerQuestion);
--
--
--        total_marks = _mpq * questions.size();
--        TM.setText("" + (questions.size() * _mpq));
--
--        int total_time_taken = 0;
--
--        if (getIntent().getStringExtra("is_past_result") != null && getIntent().getStringExtra("is_past_result").contains("true")) {
--            marksUploaded = true;
--            pastResultLT = true;
--            tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_skipped")));
--            tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_correct")));
--            tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("total_attempted"))) - tca;
--            String sub_list = Objects.requireNonNull(getIntent().getStringExtra("answer_key"));
--            _mpq = getIntent().getIntExtra("_mpq", 1);
--            String[] str_ans = sub_list.split("_");
--            sub_ans = new int[str_ans.length];
--            for (int i = 0; i < str_ans.length; i++)
--                sub_ans[i] = Integer.parseInt(str_ans[i]);
--            findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
--            findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
--
--            if (targetSection == "lt") {
--
--            } else {
--                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--            }
--            accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra("accuracy")));
--            total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra("tpq")));
--
--        } else {
--            findViewById(R.id.ResultLL).setVisibility(View.GONE);
--            sub_ans = getIntent().getIntArrayExtra("sub_ans");
--            selectedFeedbackOption = getIntent().getIntArrayExtra("selectedFeedbackOption");
--            //Toast.makeText(this, "total ques: total ans: "+questions.size()+" : "+sub_ans.length, Toast.LENGTH_LONG).show();
--
--            for (int i = 0; i < sub_ans.length; i++) {
--                //Toast.makeText(this, ""+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();
--                if (sub_ans[i] == -1) {
--                    tsq++;
--                } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {
--                    marks_obtained += _mpq;
--                    tca++;
--                } else {
--                    tra++;
--                }
--            }
--            total_time_taken = 0;
--            accuracy = ((((double) tca) / (tca + tra)) * 100.0);
--            accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();
--            if (tca + tra > 0) {
--                Accuracy.setText("" + accuracy);
--                total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra("timer", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));
--            }
--            tpq = total_time_taken;
--
--            UploadData();
--        }
--
--
--        int timerValue = getIntent().getIntExtra("timer", 60);
--        Toast.makeText(this, "tca=" + tca + " tra=" + tra + " timerValue=" + timerValue + " timeLeft=" + timeLeft, Toast.LENGTH_SHORT).show();
--        if (tca + tra > 0) {
--            Accuracy.setText("" + accuracy);
--        } else {
--            Accuracy.setText("0");
--        }
--        TimePerQuestion.setText("" + total_time_taken);
--        MO.setText("" + (tca * _mpq));
--        TCA.setText("" + tca + " Correct");
--        TRA.setText("" + tra + " Incorrect");
--        ;
--        TSQ.setText("" + tsq + " Skipped");
--    }
--
--    void UploadData() {
--        final String uuid = FirebaseAuth.getInstance().getCurrentUser().getUid();
--        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection("users").document("" + uuid);
--        final DocumentReference UserTestRecordDoc = userDoc.collection("scoreboard").document("" + targetSection).collection("test").document("" + finalTCID);
--        final float percentageMarks = (tca * _mpq) / total_marks;
--        double userRecordScore = targetSection.equals("mt") ? percentageMarks : targetSection.equals("lt") ? percentageMarks * 2 : percentageMarks * 1.5;
--
--        Map<String, String> userTestRecordMap = new HashMap<>();
--        userTestRecordMap.put("score", "" + userRecordScore);
--        userTestRecordMap.put("total_skipped", "" + tsq);
--        userTestRecordMap.put("total_attempted", "" + (tca + tra));
--        userTestRecordMap.put("total_correct", "" + tca);
--        userTestRecordMap.put("_mpq", "" + _mpq);
--        userTestRecordMap.put("accuracy", "" + accuracy);
--        userTestRecordMap.put("tpq", "" + tpq);
--        String answerString = "";
--        for (int n : sub_ans)
--            answerString += n + "_";
--        userTestRecordMap.put("answer_key", answerString.substring(0, answerString.length() - 1));
--
--        UserTestRecordDoc.set(userTestRecordMap);
--
--        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {
--            @Override
--            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {
--                if (e != null) {
--                    //Log.w(TAG, "Listen failed.", e);
--                    return;
--                }
--                if (snapshot != null && snapshot.exists()) {
--                    final String studentName = snapshot.getString("Name");
--                    //Log.d(TAG, "Current data: " + snapshot.getData());
--                    Map<String, String> scoreboard = new HashMap<>();
--                    scoreboard.put("Score", "" + (tca * _mpq));
--                    scoreboard.put("name", "" + studentName);
--                    DocumentReference reference = mDatabaseReference.document("" + uuid);
--                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {
--                        @Override
--                        public void onSuccess(Void aVoid) {
--                            //Toast.makeText(TestResultActivity.this, "score uploaded in database for user: "+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();
--                            marksUploaded = true;
--                            //((TextView)findViewById(R.id.UploadingTXT)).setText("uploading feedback, please wait..");
--                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection("common").document("post test").collection("feedback");
--                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection("users").document("" + uuid).collection("feedback");
--                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
--                                @Override
--                                public void onComplete(@NonNull Task<QuerySnapshot> task) {
--                                    if (task.isSuccessful()) {
--                                        int count = task.getResult().size();
--                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();
--                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {
--                                            if (selectedFeedbackOption[i] > -1) {
--                                                Map<String, String> _fb = new HashMap<>();
--                                                _fb.put("question", questions.get(i).getQuestion());
--                                                _fb.put("issue", feedbackOptions[selectedFeedbackOption[i]]);
--                                                _fb.put("section", targetSection);
--                                                _fb.put("subject", targetSubject);
--                                                */
--/*_fb.put("student", studentName);*//*
--
-- */
--/*_fb.put("date", ""+Calendar.getInstance().getTimeInMillis());*//*
--
--                                                if (targetSection == "lt") {
--                                                    _fb.put("testID", getIntent().getStringExtra("tid"));
--                                                } else {
--                                                    _fb.put("chapter", targetChapter);
--                                                }
--                                                //DocumentReference nycRef = feedbackBasePath.document("Feedback_" + (++count));
--                                                DocumentReference nycRef = feedbackBasePath.document("Feedback_" + Calendar.getInstance().getTimeInMillis());
--                                                batch.set(nycRef, _fb);
--                                            }
--                                        }
--                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {
--                                            @Override
--                                            public void onComplete(@NonNull Task<Void> task) {
--                                                findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
--                                                findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
--
--                                                if (targetSection == "lt") {
--                                                    (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);
--                                                    if(!pastResultLT){
--                                                        findViewById(R.id.ResultLL).setVisibility(View.GONE);
--                                                    }else{
--                                                        findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                                        findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                                    }
--                                                } else {
--                                                    findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                                    findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                                }
--                                            }
--                                        });
--                                    } else {
--                                        findViewById(R.id.UploadingTXT).setVisibility(View.INVISIBLE);
--                                        findViewById(R.id.ContinueBTNRT).setVisibility(View.VISIBLE);
--
--                                        if (targetSection == "lt") {
--                                            (findViewById(R.id.RetakeExam)).setVisibility(View.GONE);
--                                            if(!pastResultLT){
--                                                findViewById(R.id.ResultLL).setVisibility(View.GONE);
--                                            }else{
--                                                findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                                findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                            }
--                                        } else {
--                                            findViewById(R.id.ResultLL).setVisibility(View.VISIBLE);
--                                            findViewById(R.id.ResultLTHider).setVisibility(View.INVISIBLE);
--                                        }
--                                    }
--                                }
--                            });
--                        }
--                    });
--                }
--            }
--        });
--    }
--
--    public void CheckLeaderBoard(View view) {
--        Intent intent = new Intent(this, TestLeaderBoardActivity.class);
--        intent.putExtra("section", targetSection);
--        intent.putExtra("subject", targetSubject);
--        intent.putExtra("chapter", targetChapter);
--        intent.putExtra("tid", finalTCID);
--        startActivity(intent);
--    }
--
--    public void TakeARetest(View view) {
--        if (targetSection.contains("lt"))
--            return;
--        Intent myIntent = new Intent(this, TestInstructionsActivity.class);
--        //clears all other activities from stack and makes the new one the root of stack
--        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
--        myIntent.putExtra("section", targetSection);
--        myIntent.putExtra("subject", targetSubject);
--        myIntent.putExtra("chapter", targetChapter);
--        myIntent.putExtra("questions", (Serializable) questions);
--        myIntent.putExtra("_mpq", _mpq);
--        myIntent.putExtra("timer", getIntent().getIntExtra("timer", 60));
--        myIntent.putExtra("title", getIntent().getStringExtra("title"));
--        startActivity(myIntent);
--    }
--
--    @Override
--    public void onBackPressed() {
--        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
--        if (marksUploaded) finish();
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--
--    public void FinishExam() {
--        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
--        if (marksUploaded) finish();
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--
--    public void FinishExam2(View view) {
--        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));
--        if (marksUploaded) finish();
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--
--    public void CheckAnswerSheet(View view) {
--        Intent intent = new Intent(this, TestAnswerSheetActivity.class);
--        intent.putExtra("questions", (Serializable) questions);
--        intent.putExtra("answer_key", (Serializable) sub_ans);
--        if (marksUploaded) startActivity(intent);
--        else {
--            //Toast.makeText(this, "uploading marks, please wait...", Toast.LENGTH_SHORT).show();
--        }
--    }
--}*/
- 
- 
- package com.example.itifighter;
-Index: app/src/main/res/layout/test_series_chapter.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"wrap_content\"\r\ntools:context=\".LiveTestXyz\"\r\nandroid:orientation=\"vertical\"\r\nandroid:baselineAligned=\"false\">\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:baselineAligned=\"false\">\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\">\r\n            <ImageView\r\n                android:id=\"@+id/testxy_image_view\"\r\n                android:layout_width=\"70dp\"\r\n                android:layout_height=\"70dp\"\r\n                android:background=\"@drawable/rounded_text\"\r\n                android:layout_margin=\"5dp\"\r\n                android:src=\"@drawable/user\"\r\n                android:contentDescription=\"@string/todo\" />\r\n        </LinearLayout>\r\n        <LinearLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"vertical\">\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:id=\"@+id/testxy_chapter_title\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textStyle=\"bold\"\r\n                    android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                    android:text=\"New Test Model\"/>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:id=\"@+id/testxy_desc_text\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textSize=\"12sp\"\r\n                    android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                    android:text=\"40 Qs  |  70 Mins  |  100 Marks\"/>\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:gravity=\"start\">\r\n                <TextView\r\n                    android:id=\"@+id/Test_Price\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:textColor=\"@color/black_overlay\"\r\n                    android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                    android:textSize=\"12sp\"\r\n                    android:text=\"@string/_100_u20b9\"\r\n                    />\r\n                <TextView\r\n                    android:id=\"@+id/Test_FPrice\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:textColor=\"@color/black_overlay\"\r\n                    android:layout_marginStart=\"10sp\"\r\n                    android:textSize=\"12sp\"\r\n                    android:text=\"FREE\"\r\n                    />\r\n                <LinearLayout\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:gravity=\"end\">\r\n                    <TextView\r\n                        android:id=\"@+id/counterTime\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginEnd=\"@dimen/dimen_20dp\"\r\n                        android:textSize=\"12sp\"\r\n                        android:textColor=\"@color/black\"/>\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\">\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:background=\"@color/grey\"\r\n            android:layout_height=\"2dp\"/>\r\n    </LinearLayout>\r\n</LinearLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/test_series_chapter.xml	(revision 03513af2e7d4f0490547ac45666927915e0556cd)
-+++ app/src/main/res/layout/test_series_chapter.xml	(date 1607795129638)
-@@ -20,7 +20,6 @@
-                 android:layout_height="70dp"
-                 android:background="@drawable/rounded_text"
-                 android:layout_margin="5dp"
--                android:src="@drawable/user"
-                 android:contentDescription="@string/todo" />
-         </LinearLayout>
-         <LinearLayout
-@@ -40,8 +39,7 @@
-                     android:layout_weight="1"
-                     android:textColor="@color/black"
-                     android:textStyle="bold"
--                    android:layout_marginStart="@dimen/dimen_20dp"
--                    android:text="New Test Model"/>
-+                    android:layout_marginStart="@dimen/dimen_20dp"/>
-             </LinearLayout>
-             <LinearLayout
-                 android:layout_width="match_parent"
-@@ -54,8 +52,7 @@
-                     android:layout_height="wrap_content"
-                     android:layout_weight="1"
-                     android:textSize="12sp"
--                    android:layout_marginStart="@dimen/dimen_20dp"
--                    android:text="40 Qs  |  70 Mins  |  100 Marks"/>
-+                    android:layout_marginStart="@dimen/dimen_20dp"/>
-             </LinearLayout>
-             <LinearLayout
-                 android:layout_width="match_parent"
-@@ -78,7 +75,6 @@
-                     android:textColor="@color/black_overlay"
-                     android:layout_marginStart="10sp"
-                     android:textSize="12sp"
--                    android:text="FREE"
-                     />
-                 <LinearLayout
-                     android:layout_width="0dp"
Index: .idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18_[Default_Changelist]/shelved.patch	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_14-12-2020_23_18_[Default_Changelist]/shelved.patch	(revision f5367485fe42e341155a27ba38c3e9f870487778)
@@ -1,100 +0,0 @@
-Index: app/src/main/java/com/example/itifighter/PreviousPaper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnCanceledListener;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class PreviousPaper extends Fragment {\r\n\r\n\r\n    private int currentLayer = 0;\r\n    private String currentPdf = \"\";\r\n    //private int currentSubjectPos = 0, currentExamPos = 0;  //records which item was clicked in previous list\r\n    private ArrayList<CustomListItem> Subjects, Exams;\r\n    private ListView listView;\r\n    private ArrayList<String> PdfS, pdfFile, SubjectIds, ExamIds;\r\n    private ArrayList<CustomListItem> PdfS_CL;\r\n    private FirebaseFirestore db;\r\n    private ProgressDialog dialog;\r\n    private Context mContext;\r\n    private ImageButton back;\r\n    private ArrayAdapter adapter;\r\n    private String status=\"\",curruntSubjectPdf=\"\",currentChapterPdf=\"\",curruntSubject=\"\",curruntChapter=\"\";\r\n\r\n    public PreviousPaper() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n\r\n    public void CustomBackButton(){\r\n\r\n        switch (currentLayer){\r\n            case 1: LoadSubjects();\r\n            break;\r\n            case 2: LoadExams();\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);\r\n        //this.spinner = R.layout.fragment_previous_paper.findViewById(R.id.progressBar1);\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        listView = ppView.findViewById(R.id.branch_list);\r\n        back = ppView.findViewById(R.id.CustomBackButtonPP);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        back.setVisibility(View.INVISIBLE);\r\n        CustomizeView();\r\n        return ppView;\r\n    }\r\n\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        SubjectIds.add(document.getId());\r\n                        Subjects.add(new CustomListItem(document.getString(/*\"Name\"*/\"name\"),\r\n                                        document.getString(/*\"description\"*/\"desc\"), \"pp\"));\r\n                    }\r\n\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    /*listView = (ListView) _ppView.findViewById(R.id.branch_list);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            curruntSubject = SubjectIds.get(position);\r\n                            LoadExams();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadExams(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").document(curruntSubject).collection(\"exam\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Exams = new ArrayList<>();\r\n                    ExamIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        ExamIds.add(document.getId());\r\n                        Exams.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"), \"pp/chapter\"));\r\n                    }\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            curruntChapter = ExamIds.get(position);\r\n                            LoadPdfS();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadExams();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadPdfS(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch/\"+curruntSubject+\"/exam\").document(curruntChapter).collection(\"pdf\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    PdfS = new ArrayList<>();\r\n                    PdfS_CL = new ArrayList<>();\r\n                    pdfFile = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        PdfS.add(document.getId());\r\n                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString(\"price\"))),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"discount\")))));\r\n                        pdfFile.add(\"\"+document.getString(\"Name\"));\r\n                    }\r\n                    adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            String price = String.valueOf(PdfS_CL.get(position).getPrice());\r\n                            String discount = String.valueOf(PdfS_CL.get(position).getDiscount());\r\n                            String finalPrice = getFinalPrice(price,discount);\r\n                            currentPdf = PdfS.get(position);\r\n                            setPaymentNotRequiredDetails();\r\n                            if(paymentNotRequired(finalPrice)){\r\n                                OpenPdf(position);\r\n                            }\r\n                            else{\r\n                                Intent intent = new Intent(getContext(), PaytmPaymentpp.class);\r\n                                intent.putExtra(\"price\",price);\r\n                                intent.putExtra(\"discount\",discount);\r\n                                intent.putExtra(\"titleName\",pdfFile.get(position));\r\n                                intent.putExtra(\"curruntPdf\",currentPdf);\r\n                                intent.putExtra(\"currentSubject\",curruntSubject);\r\n                                intent.putExtra(\"currentChapter\",curruntChapter);\r\n                                startActivity(intent);\r\n                            }\r\n                        }\r\n\r\n                        private boolean paymentNotRequired(String finalPrice) {\r\n                            if(Double.parseDouble(finalPrice)<1) return true;\r\n                            else return (status.equals(\"1\") && currentChapterPdf.equals(curruntChapter) && curruntSubjectPdf.equals(curruntSubject));\r\n                        }\r\n\r\n                        private String getFinalPrice(String price, String discount) {\r\n                            double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);\r\n                            return  String.valueOf((price1)-((price1*discount1)/100));\r\n                        }\r\n\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadPdfS();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setPaymentNotRequiredDetails() {\r\n        String Uid = FirebaseAuth.getInstance().getUid();\r\n        assert Uid != null;\r\n        try{\r\n            FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                        .document(\"pp\").collection(\"ProductId\").document(currentPdf)\r\n                        .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                        status = documentSnapshot.getString(\"status\");\r\n                        curruntSubjectPdf = documentSnapshot.getString(\"currentSubject\");\r\n                        currentChapterPdf = documentSnapshot.getString(\"currentChapter\");\r\n                    }\r\n                }\r\n            }).addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    Toast.makeText(getContext(),\"completed\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(getContext(),\"failed\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnCanceledListener(new OnCanceledListener() {\r\n                @Override\r\n                public void onCanceled() {\r\n                    Toast.makeText(getContext(),\"Canciled\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }catch (Exception e){\r\n            Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void OpenPdf(int position) {\r\n        Intent intent = new Intent(mContext, LoadPdf.class);\r\n        intent.putExtra(\"pdf\", pdfFile.get(position));\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n    private void CustomizeView() {\r\n        LoadSubjects();\r\n    }\r\n\r\n}\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/PreviousPaper.java	(revision 5c4dc090ab4273e4d94df201f5e1e19abeffd5f6)
-+++ app/src/main/java/com/example/itifighter/PreviousPaper.java	(date 1607962674112)
-@@ -226,13 +226,21 @@
-         });
-     }
- 
-+    private boolean paymentNotRequired(String finalPrice) {
-+        if(Double.parseDouble(finalPrice)<1) return true;
-+        else return (status.equals("1") && currentChapterPdf.equals(curruntChapter) && curruntSubjectPdf.equals(curruntSubject));
-+    }
-+    private String getFinalPrice(String price, String discount) {
-+        double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);
-+        return  String.valueOf((price1)-((price1*discount1)/100));
-+    }
-     private void setPaymentNotRequiredDetails() {
-         String Uid = FirebaseAuth.getInstance().getUid();
-         assert Uid != null;
-         try{
--            FirebaseFirestore.getInstance().collection("users").document(Uid).collection("Products")
--                        .document("pp").collection("ProductId").document(currentPdf)
--                        .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
-+            db.collection("users").document(Uid).collection("Products")
-+                    .document("pp").collection("ProductId").document(currentPdf)
-+                    .get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
-                 @Override
-                 public void onSuccess(DocumentSnapshot documentSnapshot) {
-                     if(documentSnapshot!=null && documentSnapshot.exists()){
-@@ -257,6 +265,7 @@
-                     Toast.makeText(getContext(),"Canciled",Toast.LENGTH_SHORT).show();
-                 }
-             });
-+
-         }catch (Exception e){
-             Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();
-         }
-Index: app/src/main/java/com/example/itifighter/TestSeries.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighter.TestSeriesX.CustomListItemX;\r\nimport com.example.itifighter.TestSeriesX.CustomListItemY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterX;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class TestSeries extends Fragment {\r\n\r\n    private String currentSubject,currentChapter,currentTest;\r\n    private ArrayList<CustomListItem> Subjects;\r\n    private ArrayList<CustomListItemX> Chapters;\r\n    private ArrayList<CustomListItemY> Tests;\r\n    private ListView listView;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n    private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;\r\n    private ImageButton back;\r\n    private ProgressDialog dialog;\r\n\r\n    private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters\r\n    public TestSeries() { }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);\r\n        listView = mtView.findViewById(R.id.testxtRecycle);\r\n        back = mtView.findViewById(R.id.CustomBackButtonTS);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        LoadSubjects();\r\n        return mtView;\r\n    }\r\n    public void CustomBackButton(){\r\n        switch (currentLayer){\r\n            case 1:\r\n                LoadSubjects();\r\n           case 2:\r\n                LoadChapters();\r\n        }\r\n    }\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Subjects.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\r\n                                \"ts\"));\r\n                        SubjectId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubject = SubjectId.get(position);\r\n                            currentSubjectPos = position;\r\n                            LoadChapters();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    void LoadChapters(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").document(currentSubject)\r\n                .collection(\"chapter\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Chapters = new ArrayList<>();\r\n                    ChapterId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Chapters.add(new CustomListItemX(document.getString(\"name\"), String.valueOf(document.get(\"cc\")) , \"ts\",document.getId(),document.getString(\"month1\"),document.getString(\"month2\"),document.getString(\"month3\"),document.getString(\"price1\"),document.getString(\"price2\"),document.getString(\"price3\"),document.getString(\"discount1\"),document.getString(\"discount2\"),document.getString(\"discount3\")));\r\n                        ChapterId.add(document.getId());\r\n                    }\r\n                    ArrayAdapter<CustomListItemX> adapter = new CustomListViewArrayAdapterX(mContext,0,Chapters,currentSubject,ChapterId);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {\r\n                            String Uid = FirebaseAuth.getInstance().getUid();\r\n                            assert Uid != null;\r\n                            FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                                    .document(\"ts\").collection(\"ProductId\").document(ChapterId.get(i))\r\n                                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                            if(task.isSuccessful()){\r\n                                                DocumentSnapshot documentSnapshot = task.getResult();\r\n                                                if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                                                    currentChapter = ChapterId.get(i);\r\n                                                    currentChapterPos = i;\r\n                                                    LoadTest();\r\n                                                }\r\n                                                else{\r\n                                                    Intent intent = new Intent(getContext(), PaytmPayment.class);\r\n                                                    intent.putExtra(\"ProductId\",Chapters.get(i).getId());\r\n                                                    intent.putExtra(\"month1\",Chapters.get(i).getMonth1());\r\n                                                    intent.putExtra(\"month2\",Chapters.get(i).getMonth2());\r\n                                                    intent.putExtra(\"month3\",Chapters.get(i).getMonth3());\r\n                                                    intent.putExtra(\"price1\",Chapters.get(i).getPrice1());\r\n                                                    intent.putExtra(\"price2\",Chapters.get(i).getPrice2());\r\n                                                    intent.putExtra(\"price3\",Chapters.get(i).getPrice3());\r\n                                                    intent.putExtra(\"discount1\",Chapters.get(i).getDiscount1());\r\n                                                    intent.putExtra(\"discount2\",Chapters.get(i).getDiscount2());\r\n                                                    intent.putExtra(\"discount3\",Chapters.get(i).getDiscount3());\r\n                                                    intent.putExtra(\"currentSection\",Chapters.get(i).getImagex());\r\n                                                    intent.putExtra(\"titleName\",Chapters.get(i).getTopicHeader());\r\n                                                    intent.putExtra(\"countTest\",Chapters.get(i).getTest());\r\n                                                    intent.putExtra(\"currentSubject\",currentSubject);\r\n                                                    intent.putExtra(\"currentChapter\",ChapterId.get(i));\r\n                                                    mContext.startActivity(intent);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadTest(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    Tests = new ArrayList<>();\r\n                    TestId = new ArrayList<>();\r\n                    MPQ = new ArrayList<>();\r\n                    Timmr = new ArrayList<>();\r\n                    Tittl = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        int duration = Integer.parseInt(String.valueOf(document.get(\"duration\"))), marks = Integer.parseInt(String.valueOf(document.get(\"marks\"))), NOQ = Integer.parseInt(String.valueOf(document.get(\"NOQs\")));\r\n                        int score = marks*NOQ;\r\n                        Tests.add(new CustomListItemY(document.getId(),\r\n                                document.getString(\"title\"), String.valueOf(duration),\r\n                                String.valueOf(NOQ), String.valueOf(score)));\r\n                        TestId.add(document.getId());\r\n                        MPQ.add(String.valueOf(marks));\r\n                        Timmr.add(String.valueOf(duration));\r\n                        Tittl.add(document.getString(\"title\"));\r\n                    }\r\n                    listView.setAdapter(new CustomListViewArrayAdapterZ(mContext,0,Tests,currentSubject,currentChapter));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                                currentTest = TestId.get(i);\r\n                                currentTestPos = i;\r\n                                 LoadExam();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void LoadExam() {\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").document(currentTest).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n\r\n\r\n                            final ArrayList<Object> questions = new ArrayList<>();\r\n                            for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                            }\r\n\r\n                            final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                            final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n                            final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"ts\").collection(\"test\");\r\n                            UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    boolean found = false;\r\n                                                    String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                                    String sub_list = \"\";\r\n                                                    String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                                    String targetChapterID = currentChapter;\r\n                                                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                                        if (document.getId().equals(targetChapterID)) {\r\n                                                            found = true;\r\n                                                            total_attempted = document.getString(\"total_attempted\");\r\n                                                            total_skipped = document.getString(\"total_skipped\");\r\n                                                            total_correct = document.getString(\"total_correct\");\r\n                                                            accuracy = document.getString(\"accuracy\");\r\n                                                            tpq = document.getString(\"tpq\");\r\n                                                            _mpq = document.getString(\"_mpq\");\r\n                                                            sub_list = document.getString(\"answer_key\");\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (found) {\r\n                                                        //load result activity\r\n                                                            Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                                            myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                                            myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                                            myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                                            myIntent.putExtra(\"total_correct\", total_correct);\r\n                                                            myIntent.putExtra(\"section\", \"ts\");\r\n                                                            myIntent.putExtra(\"subject\", currentSubject);\r\n                                                            myIntent.putExtra(\"chapter\", currentChapter);\r\n                                                            myIntent.putExtra(\"questions\", questions);\r\n                                                            myIntent.putExtra(\"answer_key\", sub_list);\r\n                                                            assert _mpq != null;\r\n                                                            myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                                            myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentTestPos)));\r\n                                                            myIntent.putExtra(\"title\", Tittl.get(currentTestPos));\r\n                                                            myIntent.putExtra(\"accuracy\", accuracy);\r\n                                                            myIntent.putExtra(\"tpq\", tpq);\r\n                                                            dialog.dismiss();\r\n                                                            startActivity(myIntent);\r\n                                                    } else {\r\n                                                        Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                        myIntent.putExtra(\"section\", \"ts\");\r\n                                                        myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                        myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                        myIntent.putExtra(\"questions\", questions);\r\n                                                        myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"title\", Tittl.get(currentChapterPos) + \" (Test Series)\");\r\n                                                        dialog.dismiss();\r\n                                                        startActivity(myIntent);\r\n                                                        }\r\n                                                }else {\r\n                                                  /*  Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                    myIntent.putExtra(\"section\", \"ts\");\r\n                                                    myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                    myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                    myIntent.putExtra(\"questions\", questions);\r\n                                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                    myIntent.putExtra(\"title\", Tittl.get(currentChapterPos));\r\n                                                    dialog.dismiss();\r\n                                                    startActivity(myIntent);*/\r\n                                                }\r\n                                        }\r\n                            });\r\n\r\n\r\n\r\n                } else {\r\n                    Toast.makeText(mContext,\"no test found\",Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    }
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/itifighter/TestSeries.java	(revision 5c4dc090ab4273e4d94df201f5e1e19abeffd5f6)
-+++ app/src/main/java/com/example/itifighter/TestSeries.java	(date 1607960378489)
-@@ -51,8 +51,8 @@
-     private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;
-     private ImageButton back;
-     private ProgressDialog dialog;
--
-     private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters
-+
-     public TestSeries() { }
-     @Override
-     public void onCreate(Bundle savedInstanceState) {
-@@ -61,8 +61,7 @@
-         mContext = getContext();
-     }
-     @Override
--    public View onCreateView(LayoutInflater inflater, ViewGroup container,
--                             Bundle savedInstanceState) {
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-         final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);
-         listView = mtView.findViewById(R.id.testxtRecycle);
-         back = mtView.findViewById(R.id.CustomBackButtonTS);
-@@ -129,7 +128,7 @@
-         db.collection("section").document("ts")
-                 .collection("branch").document(currentSubject)
-                 .collection("chapter").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
--            @RequiresApi(api = Build.VERSION_CODES.M)
-+                    @RequiresApi(api = Build.VERSION_CODES.M)
-             @Override
-             public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                 if (task.isSuccessful()) {
-@@ -301,18 +300,7 @@
-                                                         dialog.dismiss();
-                                                         startActivity(myIntent);
-                                                         }
--                                                }else {
--                                                  /*  Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);
--                                                    myIntent.putExtra("section", "ts");
--                                                    myIntent.putExtra("subject", SubjectId.get(currentSubjectPos));
--                                                    myIntent.putExtra("chapter", ChapterId.get(currentChapterPos));
--                                                    myIntent.putExtra("questions", questions);
--                                                    myIntent.putExtra("_mpq", Integer.parseInt(MPQ.get(currentChapterPos)));
--                                                    myIntent.putExtra("timer", Integer.parseInt(Timmr.get(currentChapterPos)));
--                                                    myIntent.putExtra("title", Tittl.get(currentChapterPos));
--                                                    dialog.dismiss();
--                                                    startActivity(myIntent);*/
--                                                }
-+                                                }else { }
-                                         }
-                             });
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41__Default_Changelist_.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41__Default_Changelist_.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_13-12-2020_14_41_[Default_Changelist]" date="1607845270615" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 13-12-2020 14:41 [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable/pdficon.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13-12-2020_14_41_[Default_Changelist]/pdficon.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/itifighter/LiveTestHomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class LiveTestHomeActivity extends AppCompatActivity {\r\n\r\n    TextView countdown, TestIsLiveTag;\r\n    CollectionReference colRef;\r\n    boolean utAvailable = false;\r\n    LinearLayout ltList;\r\n    int ftCount = 0;\r\n    private Context mContext;\r\n    private View progressOverlay;\r\n    private ArrayList<Question> questions, these_questions;\r\n    private ArrayList<String> attemptedTestIDs; //tests that student has taken in past.\r\n    ArrayList<LiveTestBody> allTests;\r\n    private LiveTestBody upcomingTest;\r\n    private String utID = \"\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_live_test_home);\r\n        mContext = getApplicationContext();\r\n        Toast.makeText(mContext, \"ltha: onCreate\", Toast.LENGTH_SHORT).show();\r\n        progressOverlay = findViewById(R.id.progress_overlay);\r\n        ltList = findViewById(R.id.LiveTestList);\r\n        progressOverlay.setVisibility(View.VISIBLE);\r\n        Toast.makeText(mContext, \"ltha: progress activated in oncreate\", Toast.LENGTH_SHORT).show();\r\n        colRef = FirebaseFirestore.getInstance().collection(\"section\").document(\"lt\")\r\n                .collection(\"branch\").document(\"\" + getIntent().getStringExtra(\"subject\"))\r\n                .collection(\"chapter\").document(\"\" + getIntent().getStringExtra(\"chapter\"))\r\n                .collection(\"tests\");\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNLBT);\r\n        //cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @SuppressLint(\"ClickableViewAccessibility\")\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        finish();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n\r\n        attemptedTestIDs = new ArrayList<>();\r\n        FirebaseFirestore.getInstance().collection(\"users\").document(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).collection(\"scoreboard\").document(\"lt\")\r\n                .collection(\"branch\").document(\"\" + getIntent().getStringExtra(\"subject\"))\r\n                .collection(\"chapter\").document(\"\" + getIntent().getStringExtra(\"chapter\"))\r\n                .collection(\"test\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        attemptedTestIDs.add(document.getId());\r\n                    }\r\n                }\r\n                CustomizeView();\r\n            }\r\n        });\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    void FillLiveTestList(final String _id, int phase, final String title, int noq, final int min, final int marks, long start, long result) {\r\n        Calendar st = Calendar.getInstance();\r\n        st.setTimeInMillis(start);\r\n        String sTime = \"\" + st.get(Calendar.DAY_OF_MONTH) + \"/\" + (st.get(Calendar.MONTH) + 1) + \"/\" + st.get(Calendar.YEAR) + \" \" + st.get(Calendar.HOUR) + \":\" + st.get(Calendar.MINUTE) + \" am\";\r\n\r\n        Calendar rt = Calendar.getInstance();\r\n        rt.setTimeInMillis(result);\r\n        String rTime = \"\" + rt.get(Calendar.DAY_OF_MONTH) + \"/\" + (rt.get(Calendar.MONTH) + 1) + \"/\" + rt.get(Calendar.YEAR) + \" \" + rt.get(Calendar.HOUR) + \":\" + rt.get(Calendar.MINUTE) + \" am\";\r\n\r\n        View ltRow;\r\n        ltRow = View.inflate(this, R.layout.activity_live_test_xyz, null);\r\n        ((TextView) ltRow.findViewById(R.id.ltTitle)).setText(title);\r\n        ((TextView) ltRow.findViewById(R.id.ltQMM)).setText(\"\" + noq + \" Qs  |  \" + min + \" Min's  |  \" + marks + \" Marks\");\r\n        ((TextView) ltRow.findViewById(R.id.ltSTRT)).setText(\"start: \" + sTime + \"   |   result: \" + rTime);\r\n        if (phase == 0) {\r\n            if (!attemptedTestIDs.contains(_id)) {\r\n                //haven't attempted this live test yet\r\n                if (countdown == null) {\r\n                    countdown = ltRow.findViewById(R.id.upcomingCountDown);\r\n                    countdown.setText(\"countdown\");\r\n                }\r\n                TestIsLiveTag = ltRow.findViewById(R.id.TestIsLiveTAG);\r\n                utAvailable = false;\r\n                ltRow.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        StartLiveTest();\r\n                    }\r\n                });\r\n            } else {\r\n                ((TextView) ltRow.findViewById(R.id.upcomingCountDown)).setText(\"attempted...\");\r\n                ltRow.findViewById(R.id.upcomingCountDown).setBackgroundResource(R.color.green);\r\n            }\r\n            ltList.addView(ltRow, 0);\r\n        } else if (phase == 1) {\r\n            //future test\r\n            ((TextView) ltRow.findViewById(R.id.upcomingCountDown)).setText(\"coming soon...\");\r\n            ltRow.findViewById(R.id.upcomingCountDown).setBackgroundResource(R.color.yellow);\r\n            ((TextView) ltRow.findViewById(R.id.upcomingCountDown)).setTextColor(getResources().getColor(R.color.black));\r\n            ltList.addView(ltRow, ftCount + 1);\r\n            ftCount++;\r\n        } else {\r\n            //past test\r\n            if (result <= Calendar.getInstance().getTimeInMillis()) {\r\n                ((TextView) ltRow.findViewById(R.id.upcomingCountDown)).setText(\"expired...\");\r\n                ltRow.findViewById(R.id.upcomingCountDown).setBackgroundResource(R.color.red);\r\n                ltRow.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        //LoadPastTestResult(_id);\r\n                        LoadPastResult(_id, min, title);\r\n                    }\r\n                });\r\n            } else {\r\n                ((TextView) ltRow.findViewById(R.id.upcomingCountDown)).setText(\"pending result...\");\r\n                ltRow.findViewById(R.id.upcomingCountDown).setBackgroundResource(R.color.yellow);\r\n                ((TextView) ltRow.findViewById(R.id.upcomingCountDown)).setTextColor(getResources().getColor(R.color.black));\r\n            }\r\n            ltList.addView(ltRow);\r\n        }\r\n    }\r\n\r\n    public void LoadPastResult(final String pid, final int min, final String title) {\r\n\r\n        final String tid = pid;\r\n\r\n        final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid)\r\n                .collection(\"scoreboard\").document(\"lt\")\r\n                .collection(\"test\").document(pid);\r\n\r\n        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot valuee, @Nullable FirebaseFirestoreException error) {\r\n                if (valuee != null && valuee.exists()) {\r\n                    final DocumentSnapshot value = valuee;\r\n                    colRef.document(\"\" + tid).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                these_questions = new ArrayList<>();\r\n                                Toast.makeText(mContext, tid + \" task successful: \" + Objects.requireNonNull(task.getResult()).size(), Toast.LENGTH_SHORT).show();\r\n                                for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                    Toast.makeText(mContext, \"fetched: \" + document.getId(), Toast.LENGTH_SHORT).show();\r\n                                    these_questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                            document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                            document.getString(\"option4\"), document.getString(\"answer\")));\r\n                                }\r\n\r\n\r\n                                String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                String sub_list = \"\";\r\n                                String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                total_attempted = value.getString(\"total_attempted\");\r\n                                total_skipped = value.getString(\"total_skipped\");\r\n                                total_correct = value.getString(\"total_correct\");\r\n                                accuracy = value.getString(\"accuracy\");\r\n                                tpq = value.getString(\"tpq\");\r\n                                _mpq = value.getString(\"_mpq\");\r\n                                sub_list = value.getString(\"answer_key\");\r\n\r\n\r\n                                Intent myIntent = new Intent(getApplicationContext(), TestResultActivity.class);\r\n                                myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                myIntent.putExtra(\"total_correct\", total_correct);\r\n                                myIntent.putExtra(\"section\", \"lt\");\r\n                                myIntent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n                                myIntent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n                                myIntent.putExtra(\"tid\", pid);\r\n                                myIntent.putExtra(\"questions\", /*questions*/(Serializable) these_questions);\r\n                                myIntent.putExtra(\"answer_key\", sub_list);\r\n                                assert _mpq != null;\r\n                                myIntent.putExtra(\"_mpq\", _mpq);\r\n                                myIntent.putExtra(\"timer\", min);\r\n                                myIntent.putExtra(\"title\", title);\r\n                                myIntent.putExtra(\"accuracy\", accuracy);\r\n                                myIntent.putExtra(\"tpq\", tpq);\r\n                                startActivity(myIntent);\r\n\r\n\r\n                            } else {\r\n                                Toast.makeText(mContext, \"error getting answer sheet\", Toast.LENGTH_LONG).show();\r\n                                Log.d(TAG, \"Error getting answer sheet: \", task.getException());\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    Toast.makeText(mContext, \"error fetching test\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void CustomizeView() {\r\n        //0: get attempted ids from user\r\n        //1: get all tests and sort by start time (making it in order of future-live-past)\r\n        //2: list of past tests with declared results\r\n        //3: list of past tests with pending results\r\n        //4: list of upcoming tests other than latest one that's live\r\n        //5: latest upcoming test that's live\r\n        //6: latest test that's live but attempted already\r\n\r\n        Toast.makeText(mContext, \"ltha: customize view\", Toast.LENGTH_SHORT).show();\r\n\r\n        //..0..\\\\\r\n        final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n        final CollectionReference userDoc = FirebaseFirestore.getInstance()\r\n                .collection(\"users\").document(\"\" + uuid)\r\n                .collection(\"scoreboard\").document(\"lt\")\r\n                .collection(\"test\");\r\n\r\n        userDoc.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                attemptedTestIDs = new ArrayList<>();\r\n                if (task.isSuccessful()) {\r\n                    for (QueryDocumentSnapshot doc : task.getResult())\r\n                        attemptedTestIDs.add(doc.getId());\r\n                }\r\n                BeginFetchingTests();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void BeginFetchingTests() {\r\n        allTests = new ArrayList<>();\r\n        colRef.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    //..1..\\\\\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        allTests.add(new LiveTestBody(document.getId(), Objects.requireNonNull(document.getLong(\"NOQs\")).intValue(),\r\n                                document.getString(\"TestInHistory\"),\r\n                                Objects.requireNonNull(document.getLong(\"duration\")).intValue(),\r\n                                Objects.requireNonNull(document.getLong(\"marks\")).intValue(),\r\n                                document.getLong(\"rTime\"),\r\n                                document.getLong(\"sTime\"),\r\n                                document.getString(\"title\")));\r\n                    }\r\n\r\n                    Collections.sort(allTests, new Comparator<LiveTestBody>() {\r\n                        @Override\r\n                        public int compare(LiveTestBody o1, LiveTestBody o2) {\r\n                            Long s1 = o1.sTime;\r\n                            Long s2 = o2.sTime;\r\n                            return s1.compareTo(s2);\r\n                        }\r\n                    });\r\n\r\n                    //finding the nearest live test\r\n                    for (LiveTestBody ltb : allTests) {\r\n                        if (!ltb.TestInHistory.equals(\"true\") && ((ltb.sTime + (ltb.duration * 60 * 1000)) > Calendar.getInstance().getTimeInMillis())) {\r\n                            if (upcomingTest == null || upcomingTest.sTime > ltb.sTime) {\r\n                                utID = ltb._id;\r\n                                upcomingTest = ltb;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (upcomingTest != null) {\r\n                        FillLiveTestList(upcomingTest._id, 0, upcomingTest.title, upcomingTest.NOQs,\r\n                                upcomingTest.duration, upcomingTest.marks, upcomingTest.sTime, upcomingTest.rTime);\r\n                    }\r\n\r\n                    final long currentTime = Calendar.getInstance().getTimeInMillis();\r\n                    boolean one = false;\r\n                    for (LiveTestBody ltb : allTests) {\r\n                        if(upcomingTest == null || !ltb._id.equals(utID)){\r\n                            if (ltb.TestInHistory.equals(\"true\") || ((ltb.sTime + (ltb.duration * 60 * 100)) <= Calendar.getInstance().getTimeInMillis())) {\r\n                                //past with/without result declared\r\n                                FillLiveTestList(ltb._id, 2, ltb.title, ltb.NOQs, ltb.duration, ltb.marks, ltb.sTime, ltb.rTime);\r\n                            } else {\r\n                                FillLiveTestList(ltb._id, 1, ltb.title, ltb.NOQs, ltb.duration, ltb.marks, ltb.sTime, ltb.rTime);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (upcomingTest == null || countdown == null) {\r\n                        progressOverlay.setVisibility(View.GONE);\r\n                        return;\r\n                    }\r\n                    new CountDownTimer(\r\n                            upcomingTest.sTime - Calendar.getInstance().getTimeInMillis(), 1000) {\r\n\r\n                        @SuppressLint(\"SetTextI18n\")\r\n                        public void onTick(long millisUntilFinished) {\r\n                            long secs = millisUntilFinished / 1000;\r\n                            long min = secs / 60;\r\n                            secs %= 60;\r\n                            countdown.setText(\"Test start in \" + (min > 9 ? min : \"0\" + min) + \":\" + (secs > 9 ? secs : \"0\" + secs));\r\n                        }\r\n\r\n                        @SuppressLint(\"SetTextI18n\")\r\n                        public void onFinish() {\r\n                            countdown.setVisibility(View.GONE);\r\n                            TestIsLiveTag.setVisibility(View.VISIBLE);\r\n                            //show start test btn...\r\n                            if (attemptedTestIDs.contains(utID)) {\r\n                                countdown.setText(\"You have successfully attempted the test. Wait for the result!\");\r\n                                //startTestBtn.setVisibility(View.INVISIBLE);\r\n                            } else {\r\n                                utAvailable = true;\r\n\r\n                                new CountDownTimer(\r\n                                        (upcomingTest.sTime + (upcomingTest.duration * 60 * 1000)) - Calendar.getInstance().getTimeInMillis(), 1000) {\r\n\r\n                                    @SuppressLint(\"SetTextI18n\")\r\n                                    public void onTick(long millisUntilFinished) {\r\n                                        long secs = millisUntilFinished / 1000;\r\n                                        long min = secs / 60;\r\n                                        secs %= 60;\r\n                                        countdown.setText(\"Test ends in \" + (min > 9 ? min : \"0\" + min) + \":\" + (secs > 9 ? secs : \"0\" + secs));\r\n                                        countdown.setBackgroundResource(R.color.green);\r\n                                        countdown.setTextColor(getResources().getColor(R.color.white));\r\n                                    }\r\n\r\n                                    public void onFinish() {\r\n                                        utAvailable = false;\r\n                                        countdown.setVisibility(View.GONE);\r\n                                        TestIsLiveTag.setVisibility(View.INVISIBLE);\r\n                                        //hide start test btn...\r\n                                        //startTestBtn.setVisibility(View.INVISIBLE);\r\n                                        //move test to history...\r\n                                    }\r\n                                }.start();\r\n                            }\r\n                        }\r\n                    }.start();\r\n                    progressOverlay.setVisibility(View.GONE);\r\n                } else {\r\n                    Toast.makeText(mContext, \"ltha: error in fetching tests in customize view\", Toast.LENGTH_SHORT).show();\r\n                    progressOverlay.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void StartLiveTest() {\r\n        if (!utAvailable) {\r\n            Toast.makeText(mContext, \"test not available at the moment.\", Toast.LENGTH_LONG).show();\r\n            return;\r\n        }\r\n\r\n        progressOverlay.setVisibility(View.VISIBLE);\r\n        questions = new ArrayList<>();\r\n        colRef.document(\"\" + utID).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    questions = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                    }\r\n\r\n                    Intent myIntent = new Intent(mContext, TestInstructionsActivity.class);\r\n                    myIntent.putExtra(\"section\", \"lt\");\r\n                    myIntent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n                    myIntent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n                    myIntent.putExtra(\"questions\", (Serializable) questions);\r\n                    myIntent.putExtra(\"_mpq\", upcomingTest.marks);\r\n                    myIntent.putExtra(\"timer\", (upcomingTest.sTime/*+(upcomingTest.duration*60*1000)*/));\r\n                    myIntent.putExtra(\"duration\", upcomingTest.duration);\r\n                    myIntent.putExtra(\"title\", upcomingTest.title + \" (Live Test)\");\r\n                    myIntent.putExtra(\"tid\", utID);\r\n                    progressOverlay.setVisibility(View.GONE);\r\n                    Toast.makeText(getApplicationContext(), \"section, subject, chap, test: lt,\" + getIntent().getStringExtra(\"subject\") + \",\" + getIntent().getStringExtra(\"chapter\") + \",\" + utID, Toast.LENGTH_LONG).show();\r\n\r\n                    startActivity(myIntent);\r\n                } else {\r\n                    progressOverlay.setVisibility(View.GONE);\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass LiveTestBody {\r\n    public String _id;\r\n    public int NOQs;\r\n    public String TestInHistory;\r\n    public int duration;\r\n    public int marks;\r\n    public long rTime;\r\n    public long sTime;\r\n    public String title;\r\n\r\n    public LiveTestBody(String _id, int NOQs, String testInHistory, int duration, int marks, long rTime, long sTime, String title) {\r\n        this._id = _id;\r\n        this.NOQs = NOQs;\r\n        TestInHistory = testInHistory;\r\n        this.duration = duration;\r\n        this.marks = marks;\r\n        this.rTime = rTime;\r\n        this.sTime = sTime;\r\n        this.title = title;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/LiveTestHomeActivity.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/LiveTestHomeActivity.java	(date 1608291355415)
@@ -16,7 +16,6 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.example.itifighterAdmin.Question;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
Index: app/src/main/java/com/example/itifighter/Question.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/Question.java	(date 1608291355391)
+++ app/src/main/java/com/example/itifighter/Question.java	(date 1608291355391)
@@ -0,0 +1,69 @@
+package com.example.itifighter;
+
+import java.io.Serializable;
+
+public class Question implements Serializable {
+    private String question = "";
+    private String answer = "";
+    private String option1 = "";
+    private String option2 = "";
+    private String option3 = "";
+    private String option4 = "";
+
+    public Question(String question, String option1, String option2, String option3, String option4, String answer) {
+        this.question = question;
+        this.answer = answer;
+        this.option1 = option1;
+        this.option2 = option2;
+        this.option3 = option3;
+        this.option4 = option4;
+    }
+
+    public String getQuestion() {
+        return question;
+    }
+
+    public void setQuestion(String question) {
+        this.question = question;
+    }
+
+    public String getAnswer() {
+        return answer;
+    }
+
+    public void setAnswer(String answer) {
+        this.answer = answer;
+    }
+
+    public String getOption1() {
+        return option1;
+    }
+
+    public void setOption1(String option1) {
+        this.option1 = option1;
+    }
+
+    public String getOption2() {
+        return option2;
+    }
+
+    public void setOption2(String option2) {
+        this.option2 = option2;
+    }
+
+    public String getOption3() {
+        return option3;
+    }
+
+    public void setOption3(String option3) {
+        this.option3 = option3;
+    }
+
+    public String getOption4() {
+        return option4;
+    }
+
+    public void setOption4(String option4) {
+        this.option4 = option4;
+    }
+}
Index: app/src/main/java/com/example/itifighter/TestInstructionsActivityX.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.view.View;\r\nimport android.widget.CheckBox;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class TestInstructionsActivityX extends AppCompatActivity {\r\n    TextView tQues, tMarks, tMin,examTitle;\r\n    CheckBox insCB;\r\n    List<Question> questions;\r\n    List<String> quetionId;\r\n    FirebaseFirestore db;\r\n    String quetion,marks,time,testName;\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.instruction_testseries);\r\n        db = FirebaseFirestore.getInstance();\r\n        String currentSubject = getIntent().getStringExtra(\"currentSubject\");\r\n        String currentChapter = getIntent().getStringExtra(\"currentChapter\");\r\n        String currentTest = getIntent().getStringExtra(\"currentTest\");\r\n        assert currentChapter != null;\r\n        assert currentSubject != null;\r\n        assert currentTest != null;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"exam\").document(currentChapter).collection(\"tests\").document(currentTest).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot documentSnapshot = task.getResult();\r\n                    quetion = documentSnapshot.getString(\"qutions\");\r\n                    marks = documentSnapshot.getString(\"score\");\r\n                    time = documentSnapshot.getString(\"duration\");\r\n                    testName = documentSnapshot.getString(\"name\");\r\n                    if(documentSnapshot==null)Toast.makeText(TestInstructionsActivityX.this,\"null value\",Toast.LENGTH_SHORT).show();\r\n                    else Toast.makeText(TestInstructionsActivityX.this,quetion+marks+time+testName,Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter).collection(\"tests\").document(currentTest).collection(\"quetions\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    questions = new ArrayList<>();\r\n                    quetionId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document: Objects.requireNonNull(task.getResult())){\r\n                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                        quetionId.add(document.getId());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        tQues = findViewById(R.id.TQuesX);\r\n        tMarks = findViewById(R.id.TMarksY);\r\n        tMin = findViewById(R.id.TMinZ);\r\n        examTitle = findViewById(R.id.examTitle);\r\n        tQues.setText(\"50\");\r\n        tMarks.setText(\"10\");\r\n        tMin.setText(\"20\");\r\n        //instructionTV = findViewById(R.id.InstructionText);\r\n        insCB = findViewById(R.id.InsCBX);\r\n        examTitle.setText(\"ibps\");\r\n       /* instructionTV.setText(\"Read each question carefully.\\n\" +\r\n                \"You cannot skip a question. You must provide an answer to each question to proceed with the test.\\n\" +\r\n                \"Once answered, you cannot go back to a question. You will be given an opportunity to review questions at the end of the test.\\n\" +\r\n                \"If you exit the test, you will not be able to resume your place in the test. You will have to start from the beginning.\\n\" +\r\n                \"There may be tools available (i.e., glossary, calculator, etc.) to help you answer the questions. You can access this information by clicking in the tools bar that may be located above the questions.\\n\" +\r\n                \"There may be support information that is required to answer the questions. You can access this information by clicking on \\\"Show Support Information\\\" located in the question box.\\n\" +\r\n                \"Your test will not be timed. You can take as much time as you need to complete this test. Please keep in mind, however, that the actual test that you take to gain employment with the County of Los Angeles will be timed.\\n\" +\r\n                \"This practice test was designed to build upon a basic understanding of the subject area being tested. It was not intended to serve as the sole instruction method or initial exposure to the subject area. Instead, it should serve as a refresher mechanism in your examination preparation. If more in-depth training is required, visit the Local Resources section of this site to locate colleges and organizations that may provide additional training.\\n\" +\r\n                \"For more detailed instructions, please visit our System Overview section.\\n\" +\r\n                \"This test is only a guide. The test questions that you complete during your actual employment test may vary in format, content, and level of difficulty.\\n\");*/\r\n    }\r\n\r\n    public void BeginTest(View view) {\r\n        if(insCB.isChecked()){\r\n            Intent myIntent = new Intent(TestInstructionsActivityX.this, TestQuestionsActivity.class);\r\n            myIntent.putExtra(\"questions\", (Parcelable) questions);\r\n            myIntent.putExtra(\"_mpq\",Integer.parseInt(marks));\r\n            myIntent.putExtra(\"timer\",Integer.parseInt(time));\r\n            startActivity(myIntent);\r\n        }else{\r\n            Toast.makeText(this, \"Please agree to the terms and conditions in order to proceed with test\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestInstructionsActivityX.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/TestInstructionsActivityX.java	(date 1608291409319)
@@ -11,8 +11,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
-
-import com.example.itifighterAdmin.Question;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.firestore.DocumentSnapshot;
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <string name=\"app_name\">ITIFighter</string>\r\n    <string name=\"sign_in\">Sign In</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"login_to_continue_your_account\">Login to continue your account</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"don_t_have_an_account\">Don\\'t have an account</string>\r\n    <string name=\"register\">Register</string>\r\n    <string name=\"already_have_an_account\">Already have an account</string>\r\n    <string name=\"name\">Name</string>\r\n    <string name=\"mobile\">Mobile</string>\r\n    <string name=\"state\">State</string>\r\n    <string name=\"trade\">Trade</string>\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"menu_Profile\">My Profile</string>\r\n    <string name=\"menu_chat\">Discussion</string>\r\n    <string name=\"share\">Share</string>\r\n    <string name=\"rating\">Rating</string>\r\n    <string name=\"change\">Change Password</string>\r\n    <string name=\"logout\">Logout</string>\r\n    <string name=\"username\">ITIFighter</string>\r\n    <string name=\"menu_groups\">Groups</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"todo\">TODO</string>\r\n    <string name=\"user_email\">Wiliam@gmail.com</string>\r\n    <string name=\"stateX\">Uttar Pradesh</string>\r\n    <string name=\"TradeX\">Fitter</string>\r\n    <string name=\"designed_by_n_sharmask_amp_aj\"><![CDATA[Designed & Devloped by \\n Sharmask & AJ]]></string>\r\n    <string name=\"phone\">phone</string>\r\n    <string name=\"rate_our_app\">Rate our app</string>\r\n    <string name=\"rate_our_previous_paper\">Rate our previous Paper</string>\r\n    <string name=\"rate_our_mock_test\">Rate our mock test</string>\r\n    <string name=\"rate_our_test_series\">Rate our Tets series</string>\r\n    <string name=\"rate_our_daily_live_test\">Rate our daily live test</string>\r\n    <string name=\"submit\">submit</string>\r\n    <string name=\"oldpassword\">Old Password</string>\r\n    <string name=\"newpassword\">New Password</string>\r\n    <string name=\"confirmpassword\">Confirm Password</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n\r\n    <string name=\"joey_tribbiani\">Joey Tribbiani</string>\r\n    <string name=\"new_york_usa\">new york, usa</string>\r\n    <string name=\"_453k\">453K</string>\r\n    <string name=\"_873\">873</string>\r\n    <string name=\"_1_202_555_0157\" tools:ignore=\"TypographyDashes\">+1–202–555-0157</string>\r\n    <string name=\"MyScore\">My Score</string>\r\n    <string name=\"MyRank\">My Rank</string>\r\n    <string name=\"discription\">Discription</string>\r\n    <string name=\"title\">title</string>\r\n    <string name=\"new_message\">new message…</string>\r\n\r\n    <string name=\"placeholder_message\">Placeholder message</string>\r\n    <string name=\"rose\">Rose</string>\r\n    <string name=\"how_are_you_doing_this_is_a_long_message_that_should_probably_wrap\">How are you doing? This is a long message that should probably wrap.</string>\r\n\r\n    <!-- Strings related to login -->\r\n\r\n    <!-- Firestore Strings -->\r\n    <string name=\"collection_chatrooms\">Chatrooms</string>\r\n    <string name=\"collection_chat_messages\">Chat Messages</string>\r\n    <string name=\"collection_chatroom_user_list\">User List</string>\r\n\r\n    <!-- Intent extras -->\r\n\r\n    <!-- Fragments Names -->\r\n\r\n    <!-- Other Strings -->\r\n    <string name=\"payment_gateway\">Payment Gateway</string>\r\n    <string name=\"www_google_com\">www.noobworm.xyz</string>\r\n    <string name=\"paytm_integrations\">Payment integration</string>\r\n    <string name=\"order_id\">order id</string>\r\n    <string name=\"customer_id\">customer_id</string>\r\n    <string name=\"price\">price</string>\r\n    <string name=\"start_payment\">start payment</string>\r\n    <string name=\"choose_subscription_plan\">Choose Subscription</string>\r\n    <string name=\"start\">Start</string>\r\n    <string name=\"result\">Result</string>\r\n    <string name=\"title_here\">TITLE HERE</string>\r\n    <string name=\"submit_feedback\">Submit Feedback</string>\r\n    <string name=\"cancel\">Cancel</string>\r\n    <string name=\"_1\">+1</string>\r\n    <string name=\"dummy_question\">dummy_question</string>\r\n    <string name=\"something_wrong_with_this_question\">Something wrong with this question?</string>\r\n    <string name=\"give_feedback\">Give feedback!</string>\r\n    <string name=\"skip\">Skip</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"live\">LIVE</string>\r\n    <string name=\"ques_num\">Ques Num</string>\r\n    <string name=\"time_left\">Time left</string>\r\n    <string name=\"total_pending_quetion\">total pending quetion:</string>\r\n    <string name=\"total_skipped_quetion\">total skipped quetion:</string>\r\n    <string name=\"total_attempted_quetion\">total attempted quetion:</string>\r\n    <string name=\"total_available_quetion\">total available quetion:</string>\r\n    <string name=\"_10\">10</string>\r\n    <string name=\"score\">Score</string>\r\n    <string name=\"title_activity_view_solution_xyz\">ViewSolutionXyz</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"prev\">PREV</string>\r\n    <string name=\"leaderboard\">LEADERBOARD</string>\r\n    <string name=\"student_name\">Student Name</string>\r\n    <string name=\"rank\">Rank</string>\r\n    <string name=\"percentage\">Percentage</string>\r\n    <string name=\"points\">Points</string>\r\n    <string name=\"resultX\">RESULT</string>\r\n    <string name=\"analysis\">Analysis</string>\r\n    <string name=\"percent\">Percent</string>\r\n    <string name=\"second\">Second</string>\r\n    <string name=\"accuracy\">Accuracy</string>\r\n    <string name=\"time_quetion\">Time / Quetion</string>\r\n    <string name=\"view_solution\">View Solution</string>\r\n    <string name=\"view_leader_board\">View Leader Board</string>\r\n    <string name=\"re_take_exam\">Re-Take Exam</string>\r\n    <string name=\"close\">CLOSE</string>\r\n    <string name=\"solution\">SOLUTION</string>\r\n    <string name=\"a\">A</string>\r\n    <string name=\"b\">B</string>\r\n    <string name=\"c\">C</string>\r\n    <string name=\"d\">D</string>\r\n    <string name=\"_100_u20b9\"><strike>100 ₹</strike></string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"i_have_read_all_instructions\">I have read all instructions</string>\r\n    <string name=\"instruction\">INSTRUCTION</string>\r\n    <string name=\"minutes\">Minutes</string>\r\n    <string name=\"marks\">Marks</string>\r\n    <string name=\"quetions\">Quetions</string>\r\n    <string name=\"Live_Test\">Live Test</string>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/res/values/strings.xml	(date 1608291032426)
@@ -132,6 +132,7 @@
     <string name="marks">Marks</string>
     <string name="quetions">Quetions</string>
     <string name="Live_Test">Live Test</string>
+    <string name="oops_no_data_available">oops, no data available</string>
 
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/itifighter/TestAnswerSheetActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.itifighterAdmin.Question;\r\n\r\nimport java.util.List;\r\n\r\npublic class TestAnswerSheetActivity extends AppCompatActivity {\r\n\r\n    LinearLayout AnswerList;\r\n    List<Question> questions;\r\n    int[] sub_ans;\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_test_answer_sheet);\r\n        AnswerList = findViewById(R.id.AnswerSheetList);\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNAST);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if(event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if(event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        finish();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        sub_ans = getIntent().getIntArrayExtra(\"answer_key\");\r\n        int i=1;\r\n        for(Question ques : questions){\r\n            fillAnswerSheet(i, ques, sub_ans[i-1]);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    private void fillAnswerSheet(int num, Question ques, int ans) {\r\n        if(questions == null)\r\n            return;\r\n        View mAnswerRow = null;\r\n        mAnswerRow = View.inflate(this, R.layout.activity_view_solution_xyz, null);\r\n        ((TextView)mAnswerRow.findViewById(R.id.SheetIndex)).setText(\"\"+num);\r\n        ((TextView)mAnswerRow.findViewById(R.id.SheetQues)).setText(\"\"+ques.getQuestion());\r\n        ((TextView)mAnswerRow.findViewById(R.id.SheetOption1)).setText(\"\"+ques.getOption1());\r\n        ((TextView)mAnswerRow.findViewById(R.id.SheetOption2)).setText(\"\"+ques.getOption2());\r\n        ((TextView)mAnswerRow.findViewById(R.id.SheetOption3)).setText(\"\"+ques.getOption3());\r\n        ((TextView)mAnswerRow.findViewById(R.id.SheetOption4)).setText(\"\"+ques.getOption4());\r\n\r\n        TextView _response = mAnswerRow.findViewById(R.id.SheetResponseTag);\r\n\r\n        int correct_ans = Integer.parseInt(ques.getAnswer().trim());\r\n        if(ans <= 0){\r\n            //display skipped tag\r\n            _response.setText(\"Skipped\");\r\n            _response.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.holo_purple)));\r\n            loadCheck(correct_ans, mAnswerRow, true);\r\n        }else{\r\n            if(correct_ans == ans){\r\n                _response.setText(\"Correct Answer\");\r\n                _response.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.holo_green_dark)));\r\n                loadCheck(ans, mAnswerRow, true);\r\n            }else{\r\n                _response.setText(\"Wrong Answer\");\r\n                _response.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.holo_red_dark)));\r\n                loadCheck(ans, mAnswerRow, false);\r\n                loadCheck(correct_ans, mAnswerRow, true);\r\n            }\r\n        }\r\n        AnswerList.addView(mAnswerRow);\r\n    }\r\n\r\n    void loadCheck(int index, View mAnsRow, boolean affirmative){\r\n        if(index<1 || index>4)\r\n            return;\r\n        ImageView _img = null;\r\n        LinearLayout _strip = null;\r\n        TextView _char = null;\r\n        switch (index){\r\n            case 1:\r\n                _img = mAnsRow.findViewById(R.id.SheetCheck1);\r\n                _strip = mAnsRow.findViewById(R.id.SheetStrip1);\r\n                _char = mAnsRow.findViewById(R.id.SheetCHar1);\r\n                break;\r\n            case 2:\r\n                _img = mAnsRow.findViewById(R.id.SheetCheck2);\r\n                _strip = mAnsRow.findViewById(R.id.SheetStrip2);\r\n                _char = mAnsRow.findViewById(R.id.SheetCHar2);\r\n                break;\r\n            case 3:\r\n                _img = mAnsRow.findViewById(R.id.SheetCheck3);\r\n                _strip = mAnsRow.findViewById(R.id.SheetStrip3);\r\n                _char = mAnsRow.findViewById(R.id.SheetCHar3);\r\n                break;\r\n            case 4:\r\n                _img = mAnsRow.findViewById(R.id.SheetCheck4);\r\n                _strip = mAnsRow.findViewById(R.id.SheetStrip4);\r\n                _char = mAnsRow.findViewById(R.id.SheetCHar4);\r\n                break;\r\n        }\r\n        _img.setImageResource(affirmative ? R.drawable.checked : R.drawable.cancel);\r\n        _strip.setBackgroundColor(Color.parseColor(affirmative ? \"#DEFDC8\" : \"#FDC8C8\"));\r\n        _char.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(affirmative ? R.color.green1 : R.color.grey)));\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(TestAnswerSheetActivity.this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"tid\", /*getIntent().getStringExtra(\"tid\")*/\"002\");\r\n        startActivity(intent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestAnswerSheetActivity.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/TestAnswerSheetActivity.java	(date 1608291400422)
@@ -13,9 +13,6 @@
 
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.bumptech.glide.Glide;
-import com.example.itifighterAdmin.Question;
-
 import java.util.List;
 
 public class TestAnswerSheetActivity extends AppCompatActivity {
Index: app/src/main/java/com/example/itifighter/TestResultActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n\r\npackage com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class TestResultActivity extends AppCompatActivity {\r\n\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    boolean pastResultLT = false;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    TextView MO, TM, TCA, TRA, TSQ, Accuracy, TimePerQuestion;\r\n    String targetSection, targetSubject, targetChapter;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @SuppressLint({\"WrongViewCast\", \"ClickableViewAccessibility\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_xyz);\r\n\r\n\r\n        final TextView cbt = findViewById(R.id.ContinueBTNRT);\r\n        //cbt.setVisibility(View.INVISIBLE);\r\n        cbt.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                    if (event.getRawX() >= cbt.getRight() - cbt.getTotalPaddingRight()) {\r\n                        // your action for drawable click event\r\n                        FinishExam();\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        MO = findViewById(R.id.marksObtained);\r\n        TM = findViewById(R.id.totalMarks);\r\n        TCA = findViewById(R.id.TCA);\r\n        TRA = findViewById(R.id.TRA);\r\n        TSQ = findViewById(R.id.TSQ);\r\n        Accuracy = findViewById(R.id.Accuracy);\r\n        TimePerQuestion = findViewById(R.id.TimePerQuestion);\r\n\r\n\r\n        total_marks = _mpq * questions.size();\r\n        TM.setText(\"\" + (questions.size() * _mpq));\r\n\r\n        int total_time_taken = 0;\r\n\r\n        marksUploaded = true;\r\n        pastResultLT = true;\r\n        tsq = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_skipped\")));\r\n        tca = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_correct\")));\r\n        tra = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"total_attempted\"))) - tca;\r\n        String sub_list = Objects.requireNonNull(getIntent().getStringExtra(\"answer_key\"));\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n        String[] str_ans = sub_list.split(\"_\");\r\n        sub_ans = new int[str_ans.length];\r\n        for (int i = 0; i < str_ans.length; i++)\r\n            sub_ans[i] = Integer.parseInt(str_ans[i]);\r\n\r\n        accuracy = Double.parseDouble(Objects.requireNonNull(getIntent().getStringExtra(\"accuracy\")));\r\n        total_time_taken = Integer.parseInt(Objects.requireNonNull(getIntent().getStringExtra(\"tpq\")));\r\n\r\n\r\n        int timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n        if (tca + tra > 0) {\r\n            Accuracy.setText(\"\" + accuracy);\r\n        } else {\r\n            Accuracy.setText(\"0\");\r\n        }\r\n        TimePerQuestion.setText(\"\" + total_time_taken);\r\n        MO.setText(\"\" + (tca * _mpq));\r\n        TCA.setText(\"\" + tca + \" Correct\");\r\n        TRA.setText(\"\" + tra + \" Incorrect\");\r\n\r\n        TSQ.setText(\"\" + tsq + \" Skipped\");\r\n    }\r\n\r\n    public void CheckLeaderBoard(View view) {\r\n        Intent intent = new Intent(this, TestLeaderBoardActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void TakeARetest(View view) {\r\n        if (targetSection.contains(\"lt\"))\r\n            return;\r\n        Intent myIntent = new Intent(this, TestInstructionsActivity.class);\r\n        //clears all other activities from stack and makes the new one the root of stack\r\n        myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        myIntent.putExtra(\"section\", targetSection);\r\n        myIntent.putExtra(\"subject\", targetSubject);\r\n        myIntent.putExtra(\"chapter\", targetChapter);\r\n        myIntent.putExtra(\"questions\", (Serializable) questions);\r\n        myIntent.putExtra(\"_mpq\", _mpq);\r\n        myIntent.putExtra(\"timer\", getIntent().getIntExtra(\"timer\", 60));\r\n        myIntent.putExtra(\"title\", getIntent().getStringExtra(\"title\"));\r\n        startActivity(myIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam() {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void FinishExam2(View view) {\r\n        //startActivity(new Intent(TestResultActivity.this, MainDashboard.class));\r\n        if (marksUploaded) finish();\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void CheckAnswerSheet(View view) {\r\n        Intent intent = new Intent(this, TestAnswerSheetActivity.class);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"answer_key\", (Serializable) sub_ans);\r\n        if (marksUploaded) startActivity(intent);\r\n        else {\r\n            //Toast.makeText(this, \"uploading marks, please wait...\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestResultActivity.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/TestResultActivity.java	(date 1608291437476)
@@ -12,7 +12,6 @@
 
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.example.itifighterAdmin.Question;
 import com.google.firebase.firestore.CollectionReference;
 import com.google.firebase.firestore.FirebaseFirestore;
 
Index: app/src/main/java/com/example/itifighter/ResultUploader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.WriteBatch;\r\n\r\nimport java.io.Serializable;\r\nimport java.math.BigDecimal;\r\nimport java.math.RoundingMode;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\npublic class ResultUploader extends AppCompatActivity {\r\n    List<Question> questions;\r\n    int[] sub_ans, selectedFeedbackOption;\r\n    int total_marks = 0;\r\n    long timeLeft;\r\n    double accuracy = 0.0;\r\n    int tpq = 0;\r\n    int timerValue = 0;\r\n    int marks_obtained = 0;\r\n    int _mpq = 1;\r\n    String[] feedbackOptions = {\"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    boolean marksUploaded = false;\r\n\r\n    int tca = 0, tra = 0, tsq = 0;\r\n    String targetSection, targetSubject, targetChapter, sub_list;\r\n    String finalTCID;\r\n\r\n    CollectionReference mDatabaseReference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result_uploader);\r\n\r\n        targetSection = getIntent().getStringExtra(\"section\");\r\n        targetSubject = getIntent().getStringExtra(\"subject\");\r\n        targetChapter = getIntent().getStringExtra(\"chapter\");\r\n        timeLeft = getIntent().getLongExtra(\"timeLeft\", 0);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n        Toast.makeText(this, \"ru: 1\", Toast.LENGTH_SHORT).show();\r\n        finalTCID = targetSection.equals(\"lt\") ? getIntent().getStringExtra(\"tid\") : targetChapter;\r\n\r\n        if (targetSection.equals(\"lt\")) {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(targetChapter).collection(\"tests\").document(finalTCID).collection(\"scoreboard\");\r\n        } else {\r\n            mDatabaseReference = FirebaseFirestore.getInstance().collection(\"section\").document(targetSection).collection(\"branch\").document(targetSubject).collection(\"chapter\").document(finalTCID).collection(\"scoreboard\");\r\n        }\r\n\r\n        total_marks = _mpq * questions.size();\r\n        int total_time_taken;\r\n\r\n        sub_ans = getIntent().getIntArrayExtra(\"sub_ans\");\r\n        selectedFeedbackOption = getIntent().getIntArrayExtra(\"selectedFeedbackOption\");\r\n        //Toast.makeText(this, \"total ques: total ans: \"+questions.size()+\" : \"+sub_ans.length, Toast.LENGTH_LONG).show();\r\n\r\n        for (int i = 0; i < sub_ans.length; i++) {\r\n            //Toast.makeText(this, \"\"+questions.get(i).getAnswer(), Toast.LENGTH_LONG).show();\r\n            if (sub_ans[i] == -1) {\r\n                tsq++;\r\n            } else if (sub_ans[i] == Integer.parseInt(questions.get(i).getAnswer())) {\r\n                marks_obtained += _mpq;\r\n                tca++;\r\n            } else {\r\n                tra++;\r\n            }\r\n        }\r\n        total_time_taken = 0;\r\n        accuracy = ((((double) tca) / (tca + tra)) * 100.0);\r\n        accuracy = new BigDecimal(accuracy).setScale(2, RoundingMode.HALF_UP).doubleValue();\r\n        if (tca + tra > 0) {\r\n            total_time_taken = Math.toIntExact(Math.round((((getIntent().getIntExtra(\"timer\", 60) * 60 * 1000) - timeLeft) / (1000.0)) / ((double) (tca + tra))));\r\n        }\r\n        tpq = total_time_taken;\r\n\r\n        UploadData();\r\n\r\n        timerValue = getIntent().getIntExtra(\"timer\", 60);\r\n        Toast.makeText(this, \"tca=\" + tca + \" tra=\" + tra + \" timerValue=\" + timerValue + \" timeLeft=\" + timeLeft, Toast.LENGTH_SHORT).show();\r\n\r\n    }\r\n\r\n    void UploadData() {\r\n        Toast.makeText(this, \"ru: 2\", Toast.LENGTH_SHORT).show();\r\n        final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n        final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n        final DocumentReference UserTestRecordDoc = userDoc.collection(\"scoreboard\").document(\"\" + targetSection).collection(\"test\").document(\"\" + finalTCID);\r\n        final float percentageMarks = (tca * _mpq) / total_marks;\r\n        double userRecordScore = targetSection.equals(\"mt\") ? percentageMarks : targetSection.equals(\"lt\") ? percentageMarks * 2 : percentageMarks * 1.5;\r\n\r\n        Map<String, String> userTestRecordMap = new HashMap<>();\r\n        userTestRecordMap.put(\"score\", \"\" + userRecordScore);\r\n        userTestRecordMap.put(\"total_skipped\", \"\" + tsq);\r\n        userTestRecordMap.put(\"total_attempted\", \"\" + (tca + tra));\r\n        userTestRecordMap.put(\"total_correct\", \"\" + tca);\r\n        userTestRecordMap.put(\"_mpq\", \"\" + _mpq);\r\n        userTestRecordMap.put(\"accuracy\", \"\" + accuracy);\r\n        userTestRecordMap.put(\"tpq\", \"\" + tpq);\r\n        String answerString = \"\";\r\n        for (int n : sub_ans)\r\n            answerString += n + \"_\";\r\n        sub_list = answerString.substring(0, answerString.length() - 1);\r\n        userTestRecordMap.put(\"answer_key\", sub_list);\r\n\r\n        UserTestRecordDoc.set(userTestRecordMap);\r\n        Toast.makeText(this, \"ru: 3\", Toast.LENGTH_SHORT).show();\r\n        userDoc.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    //Log.w(TAG, \"Listen failed.\", e);\r\n                    Toast.makeText(getApplicationContext(), \"ru: 4\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if (snapshot != null && snapshot.exists()) {\r\n                    Toast.makeText(getApplicationContext(), \"ru: 5\", Toast.LENGTH_SHORT).show();\r\n                    final String studentName = snapshot.getString(\"Name\");\r\n                    final String smail = snapshot.getString(\"Email\");\r\n                    //Log.d(TAG, \"Current data: \" + snapshot.getData());\r\n                    Map<String, String> scoreboard = new HashMap<>();\r\n                    scoreboard.put(\"Score\", \"\" + (tca * _mpq));\r\n                    scoreboard.put(\"name\", \"\" + studentName);\r\n                    DocumentReference reference = mDatabaseReference.document(\"\" + uuid);\r\n                    reference.set(scoreboard).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            //Toast.makeText(TestResultActivity.this, \"score uploaded in database for user: \"+FirebaseAuth.getInstance().getCurrentUser().getUid(), Toast.LENGTH_SHORT).show();\r\n                            marksUploaded = true;\r\n                            Toast.makeText(getApplicationContext(), \"ru: 6\", Toast.LENGTH_SHORT).show();\r\n                            //((TextView)findViewById(R.id.UploadingTXT)).setText(\"uploading feedback, please wait..\");\r\n                            final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"common\").document(\"post test\").collection(\"feedback\");\r\n                            //final CollectionReference feedbackBasePath = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid).collection(\"feedback\");\r\n                            feedbackBasePath.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                    Toast.makeText(getApplicationContext(), \"ru: 7\", Toast.LENGTH_SHORT).show();\r\n                                    if (task.isSuccessful()) {\r\n                                        Toast.makeText(getApplicationContext(), \"ru: 8\", Toast.LENGTH_SHORT).show();\r\n                                        WriteBatch batch = FirebaseFirestore.getInstance().batch();\r\n                                        for (int i = 0; i < selectedFeedbackOption.length; i++) {\r\n                                            if (selectedFeedbackOption[i] > -1) {\r\n                                                Map<String, String> _fb = new HashMap<>();\r\n                                                _fb.put(\"question\", questions.get(i).getQuestion());\r\n                                                _fb.put(\"issue\", feedbackOptions[selectedFeedbackOption[i]]);\r\n                                                _fb.put(\"section\", targetSection);\r\n                                                _fb.put(\"subject\", targetSubject);\r\n                                                _fb.put(\"chapter\", targetChapter);\r\n                                                _fb.put(\"student\", studentName);\r\n                                                _fb.put(\"smail\", smail);\r\n                                                _fb.put(\"date\", \"\"+Calendar.getInstance().getTimeInMillis());\r\n                                                if (targetSection.equals(\"lt\")) {\r\n                                                    _fb.put(\"testID\", getIntent().getStringExtra(\"tid\"));\r\n                                                }\r\n                                                //DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + (++count));\r\n                                                DocumentReference nycRef = feedbackBasePath.document(\"Feedback_\" + Calendar.getInstance().getTimeInMillis());\r\n                                                batch.set(nycRef, _fb);\r\n                                            }\r\n                                        }\r\n                                        Toast.makeText(getApplicationContext(), \"ru: 9\", Toast.LENGTH_SHORT).show();\r\n                                        batch.commit().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                //add forwarding code here\r\n                                                if (targetSection.contains(\"lt\")) {\r\n                                                    Toast.makeText(getApplicationContext(), \"ru: 10\", Toast.LENGTH_SHORT).show();\r\n                                                    finish();\r\n                                                } else {\r\n                                                    //forward to resultba\r\n                                                    Toast.makeText(getApplicationContext(), \"ru: 11\", Toast.LENGTH_SHORT).show();\r\n                                                    ForwardToResult();\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        //and here\r\n                                        Toast.makeText(getApplicationContext(), \"ru: 12\", Toast.LENGTH_SHORT).show();\r\n                                        if (targetSection.contains(\"lt\")) {\r\n                                            Toast.makeText(getApplicationContext(), \"ru: 13\", Toast.LENGTH_SHORT).show();\r\n                                            finish();\r\n                                        } else {\r\n                                            Toast.makeText(getApplicationContext(), \"ru: 14\", Toast.LENGTH_SHORT).show();\r\n                                            //forward to resultba\r\n                                            ForwardToResult();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ForwardToResult() {\r\n        Toast.makeText(getApplicationContext(), \"ru: 15\", Toast.LENGTH_SHORT).show();\r\n        Intent intent = new Intent(getApplicationContext(), TestResultActivity.class);\r\n        intent.putExtra(\"section\", targetSection);\r\n        intent.putExtra(\"subject\", targetSubject);\r\n        intent.putExtra(\"chapter\", targetChapter);\r\n        intent.putExtra(\"tid\", finalTCID);\r\n        intent.putExtra(\"timeLeft\", timeLeft);\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        intent.putExtra(\"_mpq\", _mpq);\r\n\r\n        intent.putExtra(\"total_skipped\", \"\"+tsq);\r\n        intent.putExtra(\"total_correct\", \"\"+tca);\r\n        intent.putExtra(\"total_attempted\", \"\"+(tra+tca));\r\n        intent.putExtra(\"answer_key\", sub_list);\r\n        intent.putExtra(\"accuracy\", \"\"+accuracy);\r\n        intent.putExtra(\"tpq\", \"\"+tpq);\r\n        intent.putExtra(\"timer\", timerValue);\r\n        startActivity(intent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/ResultUploader.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/ResultUploader.java	(date 1608291483360)
@@ -1,5 +1,6 @@
 package com.example.itifighter;
 
+import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.os.Bundle;
 import android.widget.Toast;
@@ -8,7 +9,6 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.example.itifighterAdmin.Question;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
@@ -51,6 +51,7 @@
 
     CollectionReference mDatabaseReference;
 
+    @SuppressLint("NewApi")
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
Index: app/src/main/java/com/example/itifighter/MockTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\n\r\npublic class MockTest extends Fragment {\r\n\r\n\r\n    private int currentLayer = 0;\r\n    private int currentSubjectPos = 0, currentChapterPos = 0;   //records which item was clicked in previous list\r\n    private ProgressDialog dialog;\r\n    private ArrayList<CustomListItem> Subjects, Chapters;\r\n    private ArrayList<String> MPQs, Timers, Titles, SubjectIds, CHapterIds;\r\n    private ArrayList<Question> questions;\r\n    private ListView listView;\r\n    private ImageButton back;\r\n    private TextView emptyListMessage;\r\n\r\n    //private View progressOverlay;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n\r\n    public MockTest() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View mtView = inflater.inflate(R.layout.fragment_mock_test, container, false);\r\n        listView = mtView.findViewById(R.id.mt_branch_list);\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        emptyListMessage = mtView.findViewById(R.id.emptyListMessagetsmt);\r\n        back = mtView.findViewById(R.id.CustomBackButtonMT);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        CustomizeView();\r\n        return mtView;\r\n    }\r\n\r\n    public void CustomBackButton(){\r\n        if (currentLayer == 1) {\r\n            LoadSubjects();\r\n        }\r\n    }\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"mt\").collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n\r\n\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        /*list.add(document.getString(\"Name\"));*/\r\n                        SubjectIds.add(document.getId());\r\n                        Subjects.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\"mt\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(SubjectIds.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n\r\n                    /*listView = (ListView) _ppView.findViewById(R.id.branch_list);*/\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubjectPos = position;\r\n                            LoadChapters();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadChapters(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"mt\").collection(\"branch\").document(SubjectIds.get(currentSubjectPos)).collection(\"chapter\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    /*examList = new ArrayList<>();*/\r\n                    Chapters = new ArrayList<>();\r\n                    CHapterIds = new ArrayList<>();\r\n                    MPQs = new ArrayList<>();\r\n                    Timers = new ArrayList<>();\r\n                    Titles = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        CHapterIds.add(document.getId());\r\n                        Chapters.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"price\"))),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"discount\"))),\r\n                                Integer.parseInt((Objects.requireNonNull(document.getString(\"NOQ\")))), Integer.parseInt(Objects.requireNonNull(document.getString(\"Timer\"))),\r\n                                Integer.parseInt(Objects.requireNonNull(document.getString(\"MPQ\"))),\"mt/chapter\"));\r\n                        /*Chapters.add(document.getString(\"Name\"));*/\r\n\r\n                        MPQs.add(document.getString(\"MPQ\"));\r\n                        Timers.add(document.getString(\"Timer\"));\r\n                        Titles.add(document.getString(\"name\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(CHapterIds.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    //create our new array adapter\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Chapters);\r\n\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentChapterPos = position;\r\n                            LoadTest();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadChapters();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadTest() {\r\n\r\n        db.collection(\"section\").document(\"mt\").collection(\"branch\").document(SubjectIds.get(currentSubjectPos)).collection(\"chapter\").document(CHapterIds.get(currentChapterPos)).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    questions = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                    }\r\n\r\n                    final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                    final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\"+uuid);\r\n                    final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"mt\").collection(\"test\");\r\n                    UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if(task.isSuccessful()){\r\n                                boolean found = false;\r\n                                String total_attempted=\"\", total_skipped=\"\", total_correct=\"\";\r\n                                String sub_list = \"\";\r\n                                String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                String targetChapterID = CHapterIds.get(currentChapterPos);\r\n                                for(QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())){\r\n                                    if(document.getId().equals(targetChapterID)){\r\n                                        found = true;\r\n                                        total_attempted = document.getString(\"total_attempted\");\r\n                                        total_skipped = document.getString(\"total_skipped\");\r\n                                        total_correct = document.getString(\"total_correct\");\r\n                                        accuracy = document.getString(\"accuracy\");\r\n                                        tpq = document.getString(\"tpq\");\r\n                                        _mpq = document.getString(\"_mpq\");\r\n                                        sub_list = document.getString(\"answer_key\");\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if(found){\r\n                                    //load result activity\r\n                                    Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                    myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                    myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                    myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                    myIntent.putExtra(\"total_correct\", total_correct);\r\n                                    myIntent.putExtra(\"section\", \"mt\");\r\n                                    myIntent.putExtra(\"subject\", SubjectIds.get(currentSubjectPos));\r\n                                    myIntent.putExtra(\"chapter\", CHapterIds.get(currentChapterPos));\r\n                                    myIntent.putExtra(\"questions\", questions);\r\n                                    myIntent.putExtra(\"answer_key\", sub_list);\r\n                                    assert _mpq != null;\r\n                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timers.get(currentChapterPos)));\r\n                                    myIntent.putExtra(\"title\", Titles.get(currentChapterPos));\r\n                                    myIntent.putExtra(\"accuracy\", accuracy);\r\n                                    myIntent.putExtra(\"tpq\", tpq);\r\n                                    startActivity(myIntent);\r\n                                }else{\r\n                                    Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                    myIntent.putExtra(\"section\", \"mt\");\r\n                                    myIntent.putExtra(\"subject\", SubjectIds.get(currentSubjectPos));\r\n                                    myIntent.putExtra(\"chapter\", CHapterIds.get(currentChapterPos));\r\n                                    myIntent.putExtra(\"questions\", questions);\r\n                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQs.get(currentChapterPos)));\r\n                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timers.get(currentChapterPos)));\r\n                                    myIntent.putExtra(\"title\", Titles.get(currentChapterPos) + \" (Mock Test)\");\r\n                                    startActivity(myIntent);\r\n                                }\r\n                            }else{\r\n                                Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                myIntent.putExtra(\"section\", \"mt\");\r\n                                myIntent.putExtra(\"subject\", SubjectIds.get(currentSubjectPos));\r\n                                myIntent.putExtra(\"chapter\", CHapterIds.get(currentChapterPos));\r\n                                myIntent.putExtra(\"questions\", questions);\r\n                                myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQs.get(currentChapterPos)));\r\n                                myIntent.putExtra(\"timer\", Integer.parseInt(Timers.get(currentChapterPos)));\r\n                                myIntent.putExtra(\"title\", Titles.get(currentChapterPos));\r\n                                startActivity(myIntent);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void CustomizeView() {\r\n        LoadSubjects();\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        LoadSubjects();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/MockTest.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/MockTest.java	(date 1608291355428)
@@ -17,7 +17,6 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 
-import com.example.itifighterAdmin.Question;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
Index: app/src/main/java/com/example/itifighter/MyTestSeries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighter.TestSeriesX.CustomListItemY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class MyTestSeries extends Fragment {\r\n    private ListView listView;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n    private String Uid = FirebaseAuth.getInstance().getUid();\r\n    private ArrayList<CustomListItemY> ProductData,Tests;\r\n    private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;\r\n    private String currentChapter,currentSubject,currentTest;\r\n    private ProgressDialog dialog;\r\n    private int currentLayer = 0,currentChapterPos=0,currentSubjectPos=0,currentTestPos=0;   //0=subjects, 1=chapters\r\n    private ImageButton back;\r\n    private TextView emptyListMessage;\r\n\r\n\r\n    public MyTestSeries() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View mtView = inflater.inflate(R.layout.fragment_my_test_series, container, false);\r\n        listView = mtView.findViewById(R.id.testmtRecycle);\r\n        back = mtView.findViewById(R.id.CustomBackButtonMTS);\r\n        emptyListMessage = mtView.findViewById(R.id.emptyListMessagemts);\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        back.setVisibility(View.INVISIBLE);\r\n        LoadChapters();\r\n        return mtView;\r\n    }\r\n\r\n    private void CustomBackButton() {\r\n        if (currentLayer == 1) LoadChapters();\r\n    }\r\n\r\n    void LoadChapters(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"users\").document(Uid)\r\n                .collection(\"Products\").document(\"ts\")\r\n                .collection(\"ProductId\")\r\n        .get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    ProductData = new ArrayList<>();\r\n                    ChapterId = new ArrayList<>();\r\n                    SubjectId = new ArrayList<>();\r\n                    for(QueryDocumentSnapshot queryDocumentSnapshot : Objects.requireNonNull(task.getResult())){\r\n                        ProductData.add(new CustomListItemY(queryDocumentSnapshot.getString(\"currentSubject\"),\r\n                                queryDocumentSnapshot.getId(),queryDocumentSnapshot.getString(\"ExpiryDate\")));\r\n                        SubjectId.add(queryDocumentSnapshot.getString(\"currentSubject\"));\r\n                        ChapterId.add(queryDocumentSnapshot.getId());\r\n                    }\r\n                    emptyListMessage.setVisibility(SubjectId.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    listView.setAdapter( new CustomListViewArrayAdapterY(mContext,0,ProductData));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                            currentChapter = ChapterId.get(i);\r\n                            currentSubject = SubjectId.get(i);\r\n                            currentSubjectPos = currentChapterPos = i;\r\n                            LoadTest();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadTest(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    Tests = new ArrayList<>();\r\n                    TestId = new ArrayList<>();\r\n                    MPQ = new ArrayList<>();\r\n                    Timmr = new ArrayList<>();\r\n                    Tittl = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        int duration = Integer.parseInt(String.valueOf(document.get(\"duration\"))), marks = Integer.parseInt(String.valueOf(document.get(\"marks\"))), NOQ = Integer.parseInt(String.valueOf(document.get(\"NOQs\")));\r\n                        int score = marks*NOQ;\r\n                        Tests.add(new CustomListItemY(document.getId(),\r\n                                document.getString(\"title\"), String.valueOf(duration),\r\n                                String.valueOf(NOQ), String.valueOf(score)));\r\n                        TestId.add(document.getId());\r\n                        MPQ.add(String.valueOf(marks));\r\n                        Timmr.add(String.valueOf(duration));\r\n                        Tittl.add(document.getString(\"title\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(TestId.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    listView.setAdapter(new CustomListViewArrayAdapterZ(mContext,0,Tests,currentSubject,currentChapter));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                            currentTest = TestId.get(i);\r\n                            currentTestPos = i;\r\n                            LoadExam();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void LoadExam() {\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").document(currentTest).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful() && task.getResult()!=null) {\r\n                    final ArrayList<Object> questions = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                    }\r\n                    final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                    final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n                    final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"ts\").collection(\"test\");\r\n                    UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                boolean found = false;\r\n                                String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                String sub_list = \"\";\r\n                                String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                String targetChapterID = currentChapter;\r\n                                for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                    if (document.getId().equals(targetChapterID)) {\r\n                                        found = true;\r\n                                        total_attempted = document.getString(\"total_attempted\");\r\n                                        total_skipped = document.getString(\"total_skipped\");\r\n                                        total_correct = document.getString(\"total_correct\");\r\n                                        accuracy = document.getString(\"accuracy\");\r\n                                        tpq = document.getString(\"tpq\");\r\n                                        _mpq = document.getString(\"_mpq\");\r\n                                        sub_list = document.getString(\"answer_key\");\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (found) {\r\n                                    //load result activity\r\n                                    Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                    myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                    myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                    myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                    myIntent.putExtra(\"total_correct\", total_correct);\r\n                                    myIntent.putExtra(\"section\", \"ts\");\r\n                                    myIntent.putExtra(\"subject\", currentSubject);\r\n                                    myIntent.putExtra(\"chapter\", currentChapter);\r\n                                    myIntent.putExtra(\"questions\", questions);\r\n                                    myIntent.putExtra(\"answer_key\", sub_list);\r\n                                    assert _mpq != null;\r\n                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentTestPos)));\r\n                                    myIntent.putExtra(\"title\", Tittl.get(currentTestPos));\r\n                                    myIntent.putExtra(\"accuracy\", accuracy);\r\n                                    myIntent.putExtra(\"tpq\", tpq);\r\n                                    dialog.dismiss();\r\n                                    startActivity(myIntent);\r\n                                } else {\r\n                                    Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                    myIntent.putExtra(\"section\", \"ts\");\r\n                                    myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                    myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                    myIntent.putExtra(\"questions\", questions);\r\n                                    myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                    myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                    myIntent.putExtra(\"title\", Tittl.get(currentChapterPos) + \" (Test Series)\");\r\n                                    dialog.dismiss();\r\n                                    startActivity(myIntent);\r\n                                }\r\n                            }else {\r\n                                Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                myIntent.putExtra(\"section\", \"ts\");\r\n                                myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                myIntent.putExtra(\"questions\", questions);\r\n                                myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                myIntent.putExtra(\"title\", Tittl.get(currentChapterPos));\r\n                                dialog.dismiss();\r\n                                startActivity(myIntent);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    Toast.makeText(mContext,\"no test found\",Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/MyTestSeries.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/MyTestSeries.java	(date 1608291355422)
@@ -20,7 +20,6 @@
 import com.example.itifighter.TestSeriesX.CustomListItemY;
 import com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterY;
 import com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;
-import com.example.itifighterAdmin.Question;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
Index: app/src/main/java/com/example/itifighter/TestQuestionsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class TestQuestionsActivity extends AppCompatActivity {\r\n    RadioGroup radioGroup, feedbackGroup;\r\n    long millisecondsLeft = 0;\r\n    int skippedCount, attemptedCount;\r\n    int[] pendingQuestions;\r\n    TextView SkippedCount, AttemptedCount, PendingCount;\r\n    int currentQues = 0; //may also be used to go back to a particular question.\r\n    List<Question> questions;\r\n    int[] sub_ans;\r\n    boolean testBegan = false;\r\n    int _mpq;   //marks per question\r\n    int timer;  //time in seconds\r\n    int currentApiVersion;\r\n    TextView questionText, timerText, quesNumText;\r\n    CountDownTimer testTimer = null;\r\n    Button submitBtn, nextBtn, skipBtn;\r\n    int picked_ans = -1;\r\n    String title;\r\n    LinearLayout quesNavPanel;\r\n    ArrayList<Button> quesBtns;\r\n\r\n    String[] feedbackOptions = { \"Wrong Question\", \"Wrong Options\", \"Incomplete Question\", \"Incorrect Grammar\", \"Question out of syllabus\",\r\n            \"Question on old pattern\", \"Repeated Question\"};\r\n    int[] selectedFeedbackOption;\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_test_questions);\r\n        currentApiVersion = android.os.Build.VERSION.SDK_INT;\r\n        final int flags = View.SYSTEM_UI_FLAG_LAYOUT_STABLE\r\n                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\r\n                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n                | View.SYSTEM_UI_FLAG_FULLSCREEN\r\n                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;\r\n\r\n        // This work only for android 4.4+\r\n        if(currentApiVersion >= Build.VERSION_CODES.KITKAT)\r\n        {\r\n\r\n            getWindow().getDecorView().setSystemUiVisibility(flags);\r\n            final View decorView = getWindow().getDecorView();\r\n            decorView.setOnSystemUiVisibilityChangeListener(new View.OnSystemUiVisibilityChangeListener()\r\n            {\r\n                @Override\r\n                public void onSystemUiVisibilityChange(int visibility)\r\n                {\r\n                    if((visibility & View.SYSTEM_UI_FLAG_FULLSCREEN) == 0) decorView.setSystemUiVisibility(flags);\r\n                }\r\n            });\r\n        }\r\n\r\n        /* let's see if putting my code here works... */\r\n        radioGroup = findViewById(R.id.radioGroup1);\r\n        feedbackGroup = findViewById(R.id.feedBackGroup);\r\n        radioGroup.setOnCheckedChangeListener(radioListener);\r\n        feedbackGroup.setOnCheckedChangeListener(feedBackListener);\r\n        questionText = findViewById(R.id.questionText);\r\n        quesNumText = findViewById(R.id.QuesNum);\r\n        timerText = findViewById(R.id.TestTimer);\r\n        quesNavPanel = findViewById(R.id.QuesNavPanel);\r\n        quesBtns = new ArrayList<>();\r\n        ViewGroup.LayoutParams layoutParams = quesNavPanel.getLayoutParams();\r\n        layoutParams.width = 0;\r\n        quesNavPanel.setLayoutParams(layoutParams);\r\n        title = getIntent().getStringExtra(\"title\");\r\n        /*Spinner spin = findViewById(R.id.TestQuestionFeedbackSpinner);\r\n        spin.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                selectedFeedbackOption[currentQues] = i;\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n            }\r\n        });\r\n        ArrayAdapter aa = new ArrayAdapter<>(this,android.R.layout.simple_spinner_item,feedbackOptions);\r\n        aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spin.setAdapter(aa);*/\r\n        submitBtn = findViewById(R.id.submitBtn);\r\n        nextBtn = findViewById(R.id.nextBtn);\r\n        skipBtn = findViewById(R.id.skipBtn);\r\n\r\n        submitBtn.setVisibility(View.INVISIBLE);\r\n\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");  //= question list from prev activity\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n\r\n        if(getIntent().getStringExtra(\"section\").equals(\"lt\")){\r\n        }else{\r\n            timer = getIntent().getIntExtra(\"timer\", 60)/**60*/;   //default an hour.\r\n        }\r\n\r\n        sub_ans = new int[questions.size()];\r\n        Toast.makeText(this, \"total ans blocks: \"+sub_ans.length, Toast.LENGTH_SHORT).show();\r\n        selectedFeedbackOption = new int[questions.size()];\r\n        Toast.makeText(this, \"total ques: total ans: \"+questions.size()+\" : \"+sub_ans.length, Toast.LENGTH_LONG).show();\r\n        Arrays.fill(sub_ans, -1);\r\n        Arrays.fill(selectedFeedbackOption, -1);\r\n\r\n        pendingQuestions = new int[questions.size()];\r\n        Arrays.fill(pendingQuestions, 0);\r\n\r\n        ((TextView)findViewById(R.id.availableX)).setText(\"\"+questions.size());\r\n        PendingCount = findViewById(R.id.pendingX);\r\n        AttemptedCount = findViewById(R.id.attemptedX);\r\n        SkippedCount = findViewById(R.id.skippedX);\r\n\r\n        skippedCount = 0;\r\n        attemptedCount = 0;\r\n\r\n        PendingCount.setText(\"\"+questions.size());\r\n        AttemptedCount.setText(\"0\");\r\n        SkippedCount.setText(\"0\");\r\n\r\n        int ii=1;\r\n        while(ii*5<=questions.size()){\r\n            fillQuesNumTable(quesNavPanel, ii*5);\r\n            ii++;\r\n        }\r\n        ii--;\r\n        ii *= 5;\r\n        ii++;\r\n        final int ii1 = ii;\r\n        if(ii <= questions.size()){\r\n            LinearLayout ll = quesNavPanel.findViewById(R.id.tableLayoutList);\r\n            View mTableRow = null;\r\n            mTableRow = View.inflate(this, R.layout.activity_test_quesnumlist_row, null);\r\n            Button b1 = mTableRow.findViewById(R.id.B1);\r\n            b1.setVisibility(View.VISIBLE);\r\n            b1.setText(\"\"+ii);\r\n            b1.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    JumpTopQuestion(ii1-1);\r\n                }\r\n            });\r\n            quesBtns.add(b1);\r\n            ii++;\r\n            if(ii <= questions.size()){\r\n                final int ii2 = ii;\r\n                Button b2 = mTableRow.findViewById(R.id.B2);\r\n                b2.setVisibility(View.VISIBLE);\r\n                b2.setText(\"\"+ii);\r\n                b2.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        JumpTopQuestion(ii2-1);\r\n                    }\r\n                });\r\n                quesBtns.add(b2);\r\n                ii++;\r\n                if(ii <= questions.size()){\r\n                    final int ii3 = ii;\r\n                    Button b3 = mTableRow.findViewById(R.id.B3);\r\n                    b3.setVisibility(View.VISIBLE);\r\n                    b3.setText(\"\"+ii);\r\n                    b3.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            JumpTopQuestion(ii3-1);\r\n                        }\r\n                    });\r\n                    quesBtns.add(b3);\r\n                    ii++;\r\n                    if(ii <= questions.size()){\r\n                        final int ii4 = ii;\r\n                        Button b4 = mTableRow.findViewById(R.id.B4);\r\n                        b4.setVisibility(View.VISIBLE);\r\n                        b4.setText(\"\"+ii);\r\n                        b4.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                JumpTopQuestion(ii4-1);\r\n                            }\r\n                        });\r\n                        quesBtns.add(b4);\r\n                        ii++;\r\n                        if(ii <= questions.size()){\r\n                            final int ii5 = ii;\r\n                            Button b5 = mTableRow.findViewById(R.id.B5);\r\n                            b5.setVisibility(View.VISIBLE);\r\n                            b5.setText(\"\"+ii);\r\n                            b5.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    JumpTopQuestion(ii5-1);\r\n                                }\r\n                            });\r\n                            quesBtns.add(b5);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ll.addView(mTableRow);\r\n        }\r\n        ((TextView)findViewById(R.id.TestTitle)).setText(title != null ? title : \"IBPS PO\");\r\n        FirstLoad();\r\n        /*my territory ends here.... idk what the hell is beyond here.*/\r\n    }\r\n\r\n    /*to hide bottom nav buttons permanently*/\r\n    @SuppressLint(\"NewApi\")\r\n    @Override\r\n    public void onWindowFocusChanged(boolean hasFocus)\r\n    {\r\n        super.onWindowFocusChanged(hasFocus);\r\n        if(currentApiVersion >= Build.VERSION_CODES.KITKAT && hasFocus)\r\n        {\r\n            getWindow().getDecorView().setSystemUiVisibility(\r\n                    View.SYSTEM_UI_FLAG_LAYOUT_STABLE\r\n                            | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\r\n                            | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                            | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n                            | View.SYSTEM_UI_FLAG_FULLSCREEN\r\n                            | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\r\n        }\r\n    }\r\n    /**/\r\n\r\n    /*my func copied and pasted from overflow*/\r\n\r\n    private void fillQuesNumTable(View v, int i) {\r\n        final int i1 = i-4;\r\n        final int i2 = i-3;\r\n        final int i3 = i-2;\r\n        final int i4 = i-1;\r\n        final int i5 = i;\r\n        LinearLayout ll = v.findViewById(R.id.tableLayoutList);\r\n\r\n        View mTableRow = null;\r\n        mTableRow = View.inflate(this, R.layout.activity_test_quesnumlist_row, null);\r\n\r\n        Button b1 = mTableRow.findViewById(R.id.B1);\r\n        Button b2 = mTableRow.findViewById(R.id.B2);\r\n        Button b3 = mTableRow.findViewById(R.id.B3);\r\n        Button b4 = mTableRow.findViewById(R.id.B4);\r\n        Button b5 = mTableRow.findViewById(R.id.B5);\r\n        b1.setVisibility(View.VISIBLE);\r\n        b2.setVisibility(View.VISIBLE);\r\n        b3.setVisibility(View.VISIBLE);\r\n        b4.setVisibility(View.VISIBLE);\r\n        b5.setVisibility(View.VISIBLE);\r\n\r\n\r\n        b1.setText(\"\"+(i-4));\r\n        b2.setText(\"\"+(i-3));\r\n        b3.setText(\"\"+(i-2));\r\n        b4.setText(\"\"+(i-1));\r\n        b5.setText(\"\"+(i));\r\n\r\n        b1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                JumpTopQuestion(i1-1);\r\n            }\r\n        });\r\n        b2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                JumpTopQuestion(i1);\r\n            }\r\n        });\r\n        b3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                JumpTopQuestion(i2);\r\n            }\r\n        });\r\n        b4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                JumpTopQuestion(i3);\r\n            }\r\n        });\r\n        b5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                JumpTopQuestion(i4);\r\n            }\r\n        });\r\n\r\n        ll.addView(mTableRow);\r\n        quesBtns.add(b1);\r\n        quesBtns.add(b2);\r\n        quesBtns.add(b3);\r\n        quesBtns.add(b4);\r\n        quesBtns.add(b5);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        /*AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setCancelable(false);\r\n        builder.setMessage(\"Do you want to Quit?\");\r\n        builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //if user pressed \"yes\", then he is allowed to exit from application\r\n                //startActivity(new Intent(TestQuestionsActivity.this, MainDashboard.class));\r\n                if(testTimer != null)\r\n                    testTimer.cancel();\r\n                finish();\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\",new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //if user select \"No\", just cancel this dialog and continue with app\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        AlertDialog alert=builder.create();\r\n        alert.show();*/\r\n        findViewById(R.id.TQAlertQuitExamLayout).setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    void FirstLoad(){\r\n        if(testBegan)\r\n            return;\r\n        testBegan = true;\r\n        /*super.onResume();*/\r\n        //build our first question\r\n        buildQuestion(0);\r\n        testTimer = new CountDownTimer(Objects.equals(getIntent().getStringExtra(\"section\"), \"lt\")\r\n                ? (getIntent().getLongExtra(\"timer\", 0)+ (getIntent().getIntExtra(\"duration\", 60)*60*1000))-Calendar.getInstance().getTimeInMillis() /*(55*60*1000)*/\r\n                : (timer * 60 * 1000), 1000) {\r\n\r\n            @SuppressLint(\"SetTextI18n\")\r\n            public void onTick(long millisUntilFinished) {\r\n                millisecondsLeft = millisUntilFinished;\r\n                long secs = millisUntilFinished / 1000;\r\n                long min = secs / 60;\r\n                secs %= 60;\r\n                timerText.setText(\"TIME LEFT: \" + (min > 9 ? min : \"0\"+min) + \":\" + (secs > 9 ? secs : \"0\"+secs));\r\n            }\r\n\r\n            @SuppressLint(\"SetTextI18n\")\r\n            public void onFinish() {\r\n                timerText.setText(\"done!\");\r\n                Intent intent = new Intent(TestQuestionsActivity.this, TestResultActivity.class);\r\n                intent.putExtra(\"sub_ans\", sub_ans);\r\n                intent.putExtra(\"selectedFeedbackOption\", selectedFeedbackOption);\r\n                intent.putExtra(\"section\", getIntent().getStringExtra(\"section\"));\r\n                intent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n                int tttt = getIntent().getStringExtra(\"section\").contains(\"lt\") ? getIntent().getIntExtra(\"duration\", 60) : timer;\r\n                intent.putExtra(\"timer\", tttt);\r\n                intent.putExtra(\"timeLeft\", millisecondsLeft);\r\n                //ab to lt me bhi chapter hai...\r\n                intent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n                if(Objects.equals(getIntent().getStringExtra(\"section\"), \"lt\")){\r\n                    intent.putExtra(\"tid\", getIntent().getStringExtra(\"tid\"));\r\n                }\r\n                intent.putExtra(\"questions\", (Serializable) questions);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        };\r\n        testTimer.start();\r\n    }\r\n\r\n    /*@Override\r\n    protected void onResume() {\r\n        if(testBegan)\r\n            return;\r\n        testBegan = true;\r\n        super.onResume();\r\n        //build our first question\r\n        buildQuestion(0);\r\n        new CountDownTimer(getIntent().getStringExtra(\"section\").equals(\"lt\")\r\n                ? (getIntent().getLongExtra(\"timer\", 0)+ (getIntent().getIntExtra(\"duration\", 60)*60*1000))-Calendar.getInstance().getTimeInMillis() *//*(55*60*1000)*//*\r\n                : (timer * 60 * 1000), 1000) {\r\n            public void onTick(long millisUntilFinished) {\r\n                long secs = millisUntilFinished / 1000;\r\n                long min = secs / 60;\r\n                secs %= 60;\r\n                timerText.setText(\"TIME LEFT: \" + (min > 9 ? min : \"0\"+min) + \":\" + (secs > 9 ? secs : \"0\"+secs));\r\n            }\r\n            public void onFinish() {\r\n                timerText.setText(\"done!\");\r\n                Intent intent = new Intent(TestQuestionsActivity.this, TestResultActivity.class);\r\n                intent.putExtra(\"sub_ans\", sub_ans);\r\n                intent.putExtra(\"selectedFeedbackOption\", selectedFeedbackOption);\r\n                intent.putExtra(\"section\", getIntent().getStringExtra(\"section\"));\r\n                intent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n                if(getIntent().getStringExtra(\"section\").equals(\"lt\")){\r\n                    intent.putExtra(\"tid\", getIntent().getStringExtra(\"tid\"));\r\n                }else{\r\n                    intent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n                }\r\n                intent.putExtra(\"questions\", (Serializable) questions);\r\n                startActivity(intent);\r\n            }\r\n        }.start();\r\n    }*/\r\n\r\n    /**\r\n     * This is how we will capture our User's response.  Once they click on a radio button,\r\n     * the response can immediately be checked if it is correct.\r\n     * <p/>\r\n     * we can modify the accessor method submitAnswer(int) to be something like collectAnswer(int) instead.\r\n     * Then with the use of a button on the screen which the user can use to submit their answer.\r\n     */\r\n\r\n    RadioGroup.OnCheckedChangeListener feedBackListener = new RadioGroup.OnCheckedChangeListener() {\r\n        @Override\r\n        public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n            switch (checkedId) {\r\n                default:\r\n                    selectedFeedbackOption[currentQues] = -1;\r\n                    break;\r\n                case R.id.feedbackOption1:\r\n                    selectedFeedbackOption[currentQues] = 0;\r\n                    break;\r\n                case R.id.feedbackOption2:\r\n                    selectedFeedbackOption[currentQues] = 1;\r\n                    break;\r\n                case R.id.feedbackOption3:\r\n                    selectedFeedbackOption[currentQues] = 2;\r\n                    break;\r\n                case R.id.feedbackOption4:\r\n                    selectedFeedbackOption[currentQues] = 3;\r\n                    break;\r\n                case R.id.feedbackOption5:\r\n                    selectedFeedbackOption[currentQues] = 4;\r\n                    break;\r\n                case R.id.feedbackOption6:\r\n                    selectedFeedbackOption[currentQues] = 5;\r\n                    break;\r\n                case R.id.feedbackOption7:\r\n                    selectedFeedbackOption[currentQues] = 6;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    RadioGroup.OnCheckedChangeListener radioListener = new RadioGroup.OnCheckedChangeListener() {\r\n        @Override\r\n        public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n            switch (checkedId) {\r\n                default:\r\n                    //Toast.makeText(TestQuestionsActivity.this, \"No Support for questions with more than 4 possible answers. checkId: \" + checkedId, Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case R.id.radioButton4:\r\n                    //Toast.makeText(TestQuestionsActivity.this, \"option 4\", Toast.LENGTH_SHORT).show();\r\n                    //submitAnswer(4);\r\n                    picked_ans = 4;\r\n                    break;\r\n                case R.id.radioButton3:\r\n                    //Toast.makeText(TestQuestionsActivity.this, \"option 3\", Toast.LENGTH_SHORT).show();\r\n                    picked_ans = 3;\r\n                    //submitAnswer(3);\r\n                    break;\r\n                case R.id.radioButton2:\r\n                    //Toast.makeText(TestQuestionsActivity.this, \"option 2\", Toast.LENGTH_SHORT).show();\r\n                    picked_ans = 2;\r\n                    //submitAnswer(2);\r\n                    break;\r\n                case R.id.radioButton:\r\n                    //Toast.makeText(TestQuestionsActivity.this, \"option 1\", Toast.LENGTH_SHORT).show();\r\n                    picked_ans = 1;\r\n                    //submitAnswer(1);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    public void SubmitAns(View v){\r\n        if(picked_ans == -1){\r\n            Toast.makeText(this, \"please select an answer\", Toast.LENGTH_SHORT).show();\r\n        }else\r\n            submitAnswer(picked_ans);\r\n    }\r\n\r\n    /**\r\n     * Build and Display question for user.\r\n     *\r\n     * @param question the position which question whould be shown to the user.\r\n     */\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void buildQuestion(int question) {\r\n        if(sub_ans[question] < 1){\r\n            radioGroup.clearCheck();\r\n        }else{\r\n            radioGroup.check(radioGroup.getChildAt(sub_ans[question]-1).getId());\r\n        }\r\n        quesNumText.setText((question+1)+\"/\"+ questions.size());\r\n        //this method would set and display your question\r\n        displayQuestionText(question);\r\n\r\n        //this would gather your answers to display to your user.\r\n        String[] orderedAnswers = displayPossibleAnswers(question);\r\n\r\n        for (int i = 0; i < radioGroup.getChildCount(); i++) {\r\n            View o = radioGroup.getChildAt(i);\r\n            if (o instanceof RadioButton) {\r\n                if(i < orderedAnswers.length) {\r\n                    ((RadioButton) o).setText(orderedAnswers[i]);\r\n                    o.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    ((RadioButton) o).setText(\"\");\r\n                    o.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void JumpTopQuestion(int question){\r\n        buildQuestion(question);\r\n        currentQues = question;\r\n        if (currentQues == questions.size() - 1){\r\n            submitBtn.setVisibility(View.VISIBLE);\r\n            nextBtn.setVisibility(View.INVISIBLE);\r\n        }else{\r\n            submitBtn.setVisibility(View.GONE);\r\n            nextBtn.setVisibility(View.VISIBLE);\r\n        }\r\n        ViewGroup.LayoutParams layoutParams = quesNavPanel.getLayoutParams();\r\n        layoutParams.width = 0;\r\n        quesNavPanel.setLayoutParams(layoutParams);\r\n    }\r\n\r\n    private String[] displayPossibleAnswers(int question) {\r\n        String[] options = new String[4];\r\n        options[0] = questions.get(question).getOption1();\r\n        options[1] = questions.get(question).getOption2();\r\n        options[2] = questions.get(question).getOption3();\r\n        options[3] = questions.get(question).getOption4();\r\n\r\n        return options;\r\n    }\r\n\r\n    private void displayQuestionText(int question) {\r\n        //previous activity: fetch questions from fire-store- create class list of questions.\r\n        questionText.setText(questions.get(question).getQuestion());\r\n    }\r\n\r\n    public void SkipQuestion(View v){\r\n        submitAnswer(-1);\r\n    }\r\n\r\n    /**\r\n     * Submit user's answer.  This also handles the return of checking answer to display to the user\r\n     * whether they got the question correct or incorrect.\r\n     *\r\n     * @param i position of user's answer\r\n     */\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void submitAnswer(int i) {\r\n        if(i != -1 && sub_ans[currentQues] == -1){\r\n            attemptedCount++;\r\n        }else if(i == -1 && pendingQuestions[currentQues] != 1){\r\n            skippedCount++;\r\n        }\r\n        pendingQuestions[currentQues] = 1;\r\n        PendingCount.setText(\"\"+(questions.size() - (skippedCount+attemptedCount)));\r\n        SkippedCount.setText(\"\"+skippedCount);\r\n        AttemptedCount.setText(\"\"+attemptedCount);\r\n        //call on next/submit click\r\n        //currently ato-submit by on radio button lick listener above.\r\n        //collect student answers in an array and proceed to next ques if not last.\r\n        Toast.makeText(this, \"saving ans index: \"+currentQues, Toast.LENGTH_LONG).show();\r\n        sub_ans[currentQues] = i;\r\n        if(i == -1)\r\n            quesBtns.get(currentQues).setBackgroundColor(getResources().getColor(R.color.design_default_color_error));\r\n        else\r\n            quesBtns.get(currentQues).setBackgroundColor(getResources().getColor(R.color.green1));\r\n        if(++currentQues >= questions.size()){\r\n            currentQues = questions.size()-1;\r\n            if(i != -1){\r\n                //confirmation box before submission.\r\n                //submit test.\r\n                /*AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n                builder.setCancelable(false);\r\n                builder.setMessage(\"Do you want to Submit?\");\r\n                builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        Intent intent = new Intent(TestQuestionsActivity.this, TestResultActivity.class);\r\n                        intent.putExtra(\"sub_ans\", sub_ans);\r\n                        intent.putExtra(\"selectedFeedbackOption\", selectedFeedbackOption);\r\n                        intent.putExtra(\"section\", getIntent().getStringExtra(\"section\"));\r\n                        intent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n                        intent.putExtra(\"timeLeft\", millisecondsLeft);\r\n                        //now even lt has chapter list, so...\r\n                        intent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n                        if(getIntent().getStringExtra(\"section\").equals(\"lt\")){\r\n                            intent.putExtra(\"tid\", getIntent().getStringExtra(\"tid\"));\r\n                        }\r\n                        intent.putExtra(\"questions\", (Serializable) questions);\r\n                        if(testTimer != null)\r\n                            testTimer.cancel();\r\n                        startActivity(intent);\r\n                        finish();\r\n                    }\r\n                });\r\n                builder.setNegativeButton(\"No\",new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        //if user select \"No\", just cancel this dialog and continue with app\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n                AlertDialog alert=builder.create();\r\n                alert.show();*/\r\n                findViewById(R.id.TQAlertSubmitExamLayout).setVisibility(View.VISIBLE);\r\n            }\r\n        }else{\r\n            if (currentQues == questions.size() - 1){\r\n                submitBtn.setVisibility(View.VISIBLE);\r\n                nextBtn.setVisibility(View.INVISIBLE);\r\n            }\r\n            radioGroup.clearCheck();\r\n            picked_ans = -1;\r\n            buildQuestion(currentQues);\r\n        }\r\n    }\r\n\r\n\r\n    public void FinalSubmission(View view){\r\n        Intent intent = new Intent(TestQuestionsActivity.this, ResultUploader.class);\r\n        intent.putExtra(\"sub_ans\", sub_ans);\r\n        intent.putExtra(\"selectedFeedbackOption\", selectedFeedbackOption);\r\n        intent.putExtra(\"section\", getIntent().getStringExtra(\"section\"));\r\n        intent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n        intent.putExtra(\"timeLeft\", millisecondsLeft);\r\n        //now even lt has chapter list, so...\r\n        intent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n        if(getIntent().getStringExtra(\"section\").equals(\"lt\")){\r\n            intent.putExtra(\"tid\", getIntent().getStringExtra(\"tid\"));\r\n        }\r\n        intent.putExtra(\"questions\", (Serializable) questions);\r\n        if(testTimer != null)\r\n            testTimer.cancel();\r\n        Toast.makeText(this, \"section, subject, chap, test: \"+getIntent().getStringExtra(\"section\")+\",\"+getIntent().getStringExtra(\"subject\")+\",\"+getIntent().getStringExtra(\"chapter\")+\",\"+getIntent().getStringExtra(\"tid\"), Toast.LENGTH_LONG).show();\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    public void CancelFinalSubmission(View view){\r\n        findViewById(R.id.TQAlertSubmitExamLayout).setVisibility(View.GONE);\r\n    }\r\n\r\n    public void FinalizeExamQuit(View view){\r\n        if(testTimer != null)\r\n            testTimer.cancel();\r\n        finish();\r\n    }\r\n\r\n    public void CancelQuitFinalization(View view){\r\n        findViewById(R.id.TQAlertQuitExamLayout).setVisibility(View.GONE);\r\n    }\r\n\r\n    public void OpenQuesNavPanel(View view) {\r\n        ViewGroup.LayoutParams layoutParams = quesNavPanel.getLayoutParams();\r\n        layoutParams.width = ViewGroup.LayoutParams.MATCH_PARENT;\r\n        quesNavPanel.setLayoutParams(layoutParams);\r\n    }\r\n\r\n    public void CloseQuesNavPanel(View view) {\r\n        ViewGroup.LayoutParams layoutParams = quesNavPanel.getLayoutParams();\r\n        layoutParams.width = 0;\r\n        quesNavPanel.setLayoutParams(layoutParams);\r\n    }\r\n\r\n     public void SubmitQuestionFeedback(View view) {\r\n        findViewById(R.id.TQFeedbackLayout).setVisibility(View.VISIBLE);\r\n    }\r\n    public void ConfirmSubmitFeedback(View view) {\r\n        //...\r\n        if(selectedFeedbackOption[currentQues] < 0)\r\n            Toast.makeText(this, \"select a reason...\", Toast.LENGTH_SHORT).show();\r\n        else{\r\n            Toast.makeText(this, \"your feedback has been recorded..\", Toast.LENGTH_SHORT).show();\r\n            findViewById(R.id.TQFeedbackLayout).setVisibility(View.GONE);\r\n        }\r\n    }\r\n    public void CancelSubmitFeedback(View view) {\r\n        selectedFeedbackOption[currentQues] = -1;\r\n        findViewById(R.id.TQFeedbackLayout).setVisibility(View.GONE);\r\n    }\r\n\r\n    public void GoToPreviousQuestionWithoutSkip(View view) {\r\n        if(currentQues<1) return;\r\n        radioGroup.clearCheck();\r\n        picked_ans = -1;\r\n        buildQuestion(--currentQues);\r\n    }\r\n    /*my territory ends here.... idk what the hell is beyond here.*/\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestQuestionsActivity.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/TestQuestionsActivity.java	(date 1608291422284)
@@ -1,7 +1,6 @@
 package com.example.itifighter;
 
 import android.annotation.SuppressLint;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
@@ -15,11 +14,8 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.example.itifighterAdmin.Question;
-
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Arrays;
Index: app/src/main/java/com/example/itifighter/TestSeries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.itifighter.TestSeriesX.CustomListItemX;\r\nimport com.example.itifighter.TestSeriesX.CustomListItemY;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterX;\r\nimport com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;\r\nimport com.example.itifighterAdmin.Question;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class TestSeries extends Fragment {\r\n\r\n    private String currentSubject,currentChapter,currentTest;\r\n    private ArrayList<CustomListItem> Subjects;\r\n    private ArrayList<CustomListItemX> Chapters;\r\n    private ArrayList<CustomListItemY> Tests;\r\n    private ListView listView;\r\n    private FirebaseFirestore db;\r\n    private Context mContext;\r\n    private ArrayList<String> SubjectId,ChapterId,TestId,MPQ,Timmr,Tittl;\r\n    private ImageButton back;\r\n    private ProgressDialog dialog;\r\n    private TextView emptyListMessage;\r\n    private int currentLayer = 0,currentTestPos=0,currentSubjectPos=0,currentChapterPos=0;   //0=subjects, 1=chapters\r\n\r\n    public TestSeries() { }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        final View mtView = inflater.inflate(R.layout.fragment_test_series, container, false);\r\n        listView = mtView.findViewById(R.id.testxtRecycle);\r\n        emptyListMessage = mtView.findViewById(R.id.emptyListMessagets);\r\n        back = mtView.findViewById(R.id.CustomBackButtonTS);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomBackButton();\r\n            }\r\n        });\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        LoadSubjects();\r\n        return mtView;\r\n    }\r\n    public void CustomBackButton(){\r\n        switch (currentLayer){\r\n            case 1:\r\n                LoadSubjects();\r\n           case 2:\r\n                LoadChapters();\r\n        }\r\n    }\r\n\r\n    void LoadSubjects(){\r\n        currentLayer = 0;\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Subjects.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"),\r\n                                \"ts\"));\r\n                        SubjectId.add(document.getId());\r\n                    }\r\n                    emptyListMessage.setVisibility(SubjectId.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.INVISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            currentSubject = SubjectId.get(position);\r\n                            currentSubjectPos = position;\r\n                            LoadChapters();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    void LoadChapters(){\r\n        dialog.show();\r\n        currentLayer = 1;\r\n        db.collection(\"section\").document(\"ts\")\r\n                .collection(\"branch\").document(currentSubject)\r\n                .collection(\"chapter\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Chapters = new ArrayList<>();\r\n                    ChapterId = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        Chapters.add(new CustomListItemX(document.getString(\"name\"), String.valueOf(document.get(\"cc\")) , \"ts\",document.getId(),document.getString(\"month1\"),document.getString(\"month2\"),document.getString(\"month3\"),document.getString(\"price1\"),document.getString(\"price2\"),document.getString(\"price3\"),document.getString(\"discount1\"),document.getString(\"discount2\"),document.getString(\"discount3\")));\r\n                        ChapterId.add(document.getId());\r\n                    }\r\n                    emptyListMessage.setVisibility(ChapterId.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    ArrayAdapter<CustomListItemX> adapter = new CustomListViewArrayAdapterX(mContext,0,Chapters,currentSubject,ChapterId);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {\r\n                            String Uid = FirebaseAuth.getInstance().getUid();\r\n                            assert Uid != null;\r\n                            currentChapter = ChapterId.get(i);\r\n                            currentChapterPos = i;\r\n                            final String price = String.valueOf(Chapters.get(i).getPrice1()),\r\n                                    discount = String.valueOf(Chapters.get(i).getDiscount1()),\r\n                                    finalPrice = getFinalPrice(price,discount);\r\n                            if(Double.parseDouble(finalPrice)<1){ LoadTest(); }\r\n                            else{\r\n                                FirebaseFirestore.getInstance().collection(\"users\").document(Uid).collection(\"Products\")\r\n                                        .document(\"ts\").collection(\"ProductId\").document(currentChapter)\r\n                                        .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                        if(task.isSuccessful()){\r\n                                            DocumentSnapshot documentSnapshot = task.getResult();\r\n                                            if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                                                String status = documentSnapshot.getString(\"status\");\r\n                                                String curruntSubjectTest = documentSnapshot.getString(\"currentSubject\");\r\n                                                String currentChapterTest = documentSnapshot.getString(\"currentChapter\");\r\n                                                String expiryDate = documentSnapshot.getString(\"ExpiryDate\");\r\n                                                if(status.equals(\"1\") && currentChapterTest.equals(currentChapter) &&\r\n                                                        curruntSubjectTest.equals(currentSubject) && isNotExpired(expiryDate))  LoadTest();\r\n                                                else paytmPaymentGateway(i);\r\n                                            }else paytmPaymentGateway(i);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean isNotExpired(String expiryDate) {\r\n        @SuppressLint(\"SimpleDateFormat\") SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss.0\");\r\n        try {\r\n            Date d = sdf.parse(expiryDate);\r\n            return d.after(new Date());\r\n        } catch (ParseException e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private void paytmPaymentGateway(int i) {\r\n        Intent intent = new Intent(getContext(), PaytmPayment.class);\r\n        intent.putExtra(\"ProductId\",Chapters.get(i).getId());\r\n        intent.putExtra(\"month1\",Chapters.get(i).getMonth1());\r\n        intent.putExtra(\"month2\",Chapters.get(i).getMonth2());\r\n        intent.putExtra(\"month3\",Chapters.get(i).getMonth3());\r\n        intent.putExtra(\"price1\",Chapters.get(i).getPrice1());\r\n        intent.putExtra(\"price2\",Chapters.get(i).getPrice2());\r\n        intent.putExtra(\"price3\",Chapters.get(i).getPrice3());\r\n        intent.putExtra(\"discount1\",Chapters.get(i).getDiscount1());\r\n        intent.putExtra(\"discount2\",Chapters.get(i).getDiscount2());\r\n        intent.putExtra(\"discount3\",Chapters.get(i).getDiscount3());\r\n        intent.putExtra(\"currentSection\",Chapters.get(i).getImagex());\r\n        intent.putExtra(\"titleName\",Chapters.get(i).getTopicHeader());\r\n        intent.putExtra(\"countTest\",Chapters.get(i).getTest());\r\n        intent.putExtra(\"currentSubject\",currentSubject);\r\n        intent.putExtra(\"currentChapter\",currentChapter);\r\n        mContext.startActivity(intent);\r\n    }\r\n\r\n    private String getFinalPrice(String price, String discount) {\r\n        double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);\r\n        return  String.valueOf((price1)-((price1*discount1)/100));\r\n    }\r\n\r\n    private void LoadTest(){\r\n        dialog.show();\r\n        currentLayer = 2;\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    Tests = new ArrayList<>();\r\n                    TestId = new ArrayList<>();\r\n                    MPQ = new ArrayList<>();\r\n                    Timmr = new ArrayList<>();\r\n                    Tittl = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        int duration = Integer.parseInt(String.valueOf(document.get(\"duration\"))), marks = Integer.parseInt(String.valueOf(document.get(\"marks\"))), NOQ = Integer.parseInt(String.valueOf(document.get(\"NOQs\")));\r\n                        int score = marks*NOQ;\r\n                        Tests.add(new CustomListItemY(document.getId(),\r\n                                document.getString(\"title\"), String.valueOf(duration),\r\n                                String.valueOf(NOQ), String.valueOf(score)));\r\n                        TestId.add(document.getId());\r\n                        MPQ.add(String.valueOf(marks));\r\n                        Timmr.add(String.valueOf(duration));\r\n                        Tittl.add(document.getString(\"title\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(TestId.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    listView.setAdapter(new CustomListViewArrayAdapterZ(mContext,0,Tests,currentSubject,currentChapter));\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                                currentTest = TestId.get(i);\r\n                                currentTestPos = i;\r\n                                 LoadExam();\r\n                        }\r\n                    });\r\n                    dialog.dismiss();\r\n                    back.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void LoadExam() {\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"ts\").collection(\"branch\").document(currentSubject).collection(\"chapter\").document(currentChapter)\r\n                .collection(\"tests\").document(currentTest).collection(\"question\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n\r\n\r\n                            final ArrayList<Object> questions = new ArrayList<>();\r\n                            for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                        questions.add(new Question(document.getString(\"question\"), document.getString(\"option1\"),\r\n                                                document.getString(\"option2\"), document.getString(\"option3\"),\r\n                                                document.getString(\"option4\"), document.getString(\"answer\")));\r\n                            }\r\n\r\n                            final String uuid = Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid();\r\n                            final DocumentReference userDoc = FirebaseFirestore.getInstance().collection(\"users\").document(\"\" + uuid);\r\n                            final CollectionReference UserTestRecord = userDoc.collection(\"scoreboard\").document(\"ts\").collection(\"test\");\r\n                            UserTestRecord.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    boolean found = false;\r\n                                                    String total_attempted = \"\", total_skipped = \"\", total_correct = \"\";\r\n                                                    String sub_list = \"\";\r\n                                                    String accuracy = \"\", tpq = \"\", _mpq = \"\";\r\n                                                    String targetChapterID = currentChapter;\r\n                                                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                                                        if (document.getId().equals(targetChapterID)) {\r\n                                                            found = true;\r\n                                                            total_attempted = document.getString(\"total_attempted\");\r\n                                                            total_skipped = document.getString(\"total_skipped\");\r\n                                                            total_correct = document.getString(\"total_correct\");\r\n                                                            accuracy = document.getString(\"accuracy\");\r\n                                                            tpq = document.getString(\"tpq\");\r\n                                                            _mpq = document.getString(\"_mpq\");\r\n                                                            sub_list = document.getString(\"answer_key\");\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (found) {\r\n                                                        //load result activity\r\n                                                            Intent myIntent = new Intent(getContext(), TestResultActivity.class);\r\n                                                            myIntent.putExtra(\"is_past_result\", \"true\");\r\n                                                            myIntent.putExtra(\"total_skipped\", total_skipped);\r\n                                                            myIntent.putExtra(\"total_attempted\", total_attempted);\r\n                                                            myIntent.putExtra(\"total_correct\", total_correct);\r\n                                                            myIntent.putExtra(\"section\", \"ts\");\r\n                                                            myIntent.putExtra(\"subject\", currentSubject);\r\n                                                            myIntent.putExtra(\"chapter\", currentChapter);\r\n                                                            myIntent.putExtra(\"questions\", questions);\r\n                                                            myIntent.putExtra(\"answer_key\", sub_list);\r\n                                                            assert _mpq != null;\r\n                                                            myIntent.putExtra(\"_mpq\", Integer.parseInt(_mpq));\r\n                                                            myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentTestPos)));\r\n                                                            myIntent.putExtra(\"title\", Tittl.get(currentTestPos));\r\n                                                            myIntent.putExtra(\"accuracy\", accuracy);\r\n                                                            myIntent.putExtra(\"tpq\", tpq);\r\n                                                            dialog.dismiss();\r\n                                                            startActivity(myIntent);\r\n                                                    } else {\r\n                                                        Intent myIntent = new Intent(getContext(), TestInstructionsActivity.class);\r\n                                                        myIntent.putExtra(\"section\", \"ts\");\r\n                                                        myIntent.putExtra(\"subject\", SubjectId.get(currentSubjectPos));\r\n                                                        myIntent.putExtra(\"chapter\", ChapterId.get(currentChapterPos));\r\n                                                        myIntent.putExtra(\"questions\", questions);\r\n                                                        myIntent.putExtra(\"_mpq\", Integer.parseInt(MPQ.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"timer\", Integer.parseInt(Timmr.get(currentChapterPos)));\r\n                                                        myIntent.putExtra(\"title\", Tittl.get(currentChapterPos) + \" (Test Series)\");\r\n                                                        dialog.dismiss();\r\n                                                        startActivity(myIntent);\r\n                                                        }\r\n                                                }else { }\r\n                                        }\r\n                            });\r\n\r\n\r\n\r\n                } else {\r\n                    Toast.makeText(mContext,\"no test found\",Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadTest();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestSeries.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/TestSeries.java	(date 1608291483367)
@@ -25,7 +25,6 @@
 import com.example.itifighter.TestSeriesX.CustomListItemY;
 import com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterX;
 import com.example.itifighter.TestSeriesX.CustomListViewArrayAdapterZ;
-import com.example.itifighterAdmin.Question;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
Index: app/src/main/java/com/example/itifighter/TestInstructionsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.CheckBox;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.itifighterAdmin.Question;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.List;\r\n\r\npublic class TestInstructionsActivity extends AppCompatActivity {\r\n\r\n    TextView tQues, tMarks, tMin;\r\n    CheckBox insCB;\r\n\r\n    List<Question> questions;\r\n    int _mpq;   //marks per question\r\n    int timer;  //time in seconds\r\n    String title;\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_test_instructions);\r\n        questions = (List<Question>) getIntent().getSerializableExtra(\"questions\");  //= question list from prev activity\r\n        _mpq = getIntent().getIntExtra(\"_mpq\", 1);\r\n        title = getIntent().getStringExtra(\"title\");\r\n        if (getIntent().getStringExtra(\"section\").equals(\"lt\")) {\r\n            timer = getIntent().getIntExtra(\"duration\", 60);   //value comes in milliseconds for lt\r\n        } else {\r\n            timer = getIntent().getIntExtra(\"timer\", 60);   //default a min.\r\n        }\r\n\r\n        tQues = findViewById(R.id.TQues);\r\n        tMarks = findViewById(R.id.TMarks);\r\n        tMin = findViewById(R.id.TMin);\r\n\r\n        tQues.setText(\"\" + questions.size());\r\n        tMarks.setText(\"\" + _mpq * questions.size());\r\n        tMin.setText(\"\" + timer);\r\n        ((TextView) findViewById(R.id.TestTitleIP)).setText(title != null ? title : \"-\");\r\n        insCB = findViewById(R.id.InsCB);/*\r\n        FirebaseFirestore.getInstance().collection(\"common\").document(\"pre test\").get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                instructionTV.setText(\"\"+documentSnapshot.getString(\"instruction\"));\r\n            }\r\n        });*/\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setCancelable(false);\r\n        builder.setMessage(\"Do you want to Quit?\");\r\n        builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //if user pressed \"yes\", then he is allowed to exit from application\r\n                //startActivity(new Intent(TestInstructionsActivity.this, MainDashboard.class));\r\n                finish();\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //if user select \"No\", just cancel this dialog and continue with app\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        AlertDialog alert = builder.create();\r\n        alert.show();\r\n    }\r\n\r\n    public void BeginTest(View view) {\r\n        if (insCB.isChecked()) {\r\n            Intent myIntent = new Intent(TestInstructionsActivity.this, TestQuestionsActivity.class);\r\n            myIntent.putExtra(\"questions\", (Serializable) questions);\r\n            myIntent.putExtra(\"_mpq\", _mpq);\r\n            myIntent.putExtra(\"title\", title);\r\n            myIntent.putExtra(\"section\", getIntent().getStringExtra(\"section\"));\r\n            myIntent.putExtra(\"subject\", getIntent().getStringExtra(\"subject\"));\r\n            myIntent.putExtra(\"chapter\", getIntent().getStringExtra(\"chapter\"));\r\n            if (getIntent().getStringExtra(\"section\").equals(\"lt\")) {\r\n                myIntent.putExtra(\"tid\", getIntent().getStringExtra(\"tid\"));\r\n                myIntent.putExtra(\"timer\", getIntent().getLongExtra(\"timer\", 0)/*Calendar.getInstance().getTimeInMillis()*/);\r\n                myIntent.putExtra(\"duration\", getIntent().getIntExtra(\"duration\", 60)/*55*/);\r\n            } else {\r\n                myIntent.putExtra(\"timer\", timer);\r\n            }\r\n            //Toast.makeText(getApplicationContext(), \"section, subject, chap, test: lt,\"+getIntent().getStringExtra(\"subject\")+\",\"+getIntent().getStringExtra(\"chapter\")+\",\"+utID, Toast.LENGTH_LONG).show();\r\n\r\n            startActivity(myIntent);\r\n        } else {\r\n            Toast.makeText(this, \"Please agree to the terms and conditions in order to proceed with test\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/TestInstructionsActivity.java	(revision f5367485fe42e341155a27ba38c3e9f870487778)
+++ app/src/main/java/com/example/itifighter/TestInstructionsActivity.java	(date 1608291400410)
@@ -12,8 +12,6 @@
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.example.itifighterAdmin.Question;
-
 import java.io.Serializable;
 import java.util.List;
 
