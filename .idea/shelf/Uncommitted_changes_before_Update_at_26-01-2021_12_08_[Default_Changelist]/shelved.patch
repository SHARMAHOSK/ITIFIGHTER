Index: app/src/main/java/com/example/itifighter/ui/home/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter.ui.home;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.example.itifighter.CustomStackManager;\r\nimport com.example.itifighter.CustomViewPager;\r\nimport com.example.itifighter.MyAdapter;\r\nimport com.example.itifighter.R;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.bottomnavigation.LabelVisibilityMode;\r\nimport com.google.android.material.tabs.TabLayout;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n\r\n\r\n    private TabLayout tabLayout;\r\n    /*BottomNavigationView bnv;*/\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             final ViewGroup container, Bundle savedInstanceState) {\r\n        final View root = inflater.inflate(R.layout.fragment_menu_home, container, false);\r\n        tabLayout = root.findViewById(R.id.tabLayoutX);\r\n        /*bnv = root.findViewById(R.id.bottom_navigation);*/\r\n        final ViewPager viewPager = root.findViewById(R.id.viewPagerX);\r\n//        final CustomViewPager viewPager = root.findViewById(R.id.viewPagerX);\r\n//        viewPager.setPagingEnabled(false);\r\n        /*bnv.setSelectedItemId(R.id.page_lt);*/\r\n        CustomStackManager.current_page = 2;\r\n        /*bnv.setItemIconTintList(null);\r\n        bnv.setLabelVisibilityMode(LabelVisibilityMode.LABEL_VISIBILITY_SELECTED);   //LABEL_VISIBILITY_SELECTED: The label is only shown on the selected navigation item\r\n        bnv.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @SuppressLint(\"NonConstantResourceId\")\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()){\r\n                    case R.id.page_pp:\r\n                        // Respond to navigation item 1 click\r\n                        viewPager.setCurrentItem(0);\r\n                        CustomStackManager.current_page = 0;\r\n                        return true;\r\n                    case R.id.page_mt:\r\n                        // Respond to navigation item 2 click\r\n                        viewPager.setCurrentItem(1);\r\n                        CustomStackManager.current_page = 1;\r\n                        return true;\r\n                    case R.id.page_lt:\r\n                        // Respond to navigation item 3 click\r\n                        viewPager.setCurrentItem(2);\r\n                        CustomStackManager.current_page = 2;\r\n                        return true;\r\n                    case R.id.page_ts:\r\n                        // Respond to navigation item 4 click\r\n                        viewPager.setCurrentItem(3);\r\n                        CustomStackManager.current_page = 3;\r\n                        return true;\r\n                    case R.id.page_mts:\r\n                        // Respond to navigation item 5 click\r\n                        viewPager.setCurrentItem(4);\r\n                        CustomStackManager.current_page = 4;\r\n                        return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n        });*/\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Previous Paper\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Mock Test\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Daily Live Test\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Test Series\"));\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"My Test Series\"));\r\n        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n\r\n        System.out.println(\"hello\");\r\n        final MyAdapter adapter = new MyAdapter(getParentFragmentManager(), /*tabLayout.getTabCount()*/5);\r\n        new Handler().post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n//                viewPager.canResolveLayoutDirection();\r\n//                viewPager.clearOnPageChangeListeners();\r\n                viewPager.setAdapter(adapter);\r\n                Objects.requireNonNull(viewPager.getAdapter()).finishUpdate(container);\r\n                viewPager.setCurrentItem(2);\r\n                tabLayout.selectTab(tabLayout.getTabAt(2));\r\n                CustomStackManager.current_page = 2;\r\n            }\r\n        });\r\n        System.out.println(\"sk\");\r\n        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));\r\n        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\r\n            @Override\r\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n                CustomStackManager.current_page = position;\r\n                CustomStackManager.GetInstance().ReloadCurrent();\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                CustomStackManager.current_page = position;\r\n                CustomStackManager.GetInstance().ReloadCurrent();\r\n            }\r\n\r\n            @Override\r\n            public void onPageScrollStateChanged(int state) {\r\n            }\r\n        });\r\n        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                viewPager.setCurrentItem(tab.getPosition());\r\n                CustomStackManager.current_page = tab.getPosition();\r\n                CustomStackManager.GetInstance().ReloadCurrent();\r\n            }\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n            }\r\n        });\r\n        tabLayout.post(mTabLayout_config);\r\n\r\n        return root;\r\n    }\r\n    protected Runnable mTabLayout_config = new Runnable()\r\n    {\r\n        @Override\r\n        public void run()\r\n        {\r\n            if(tabLayout.getWidth() < requireContext().getResources().getDisplayMetrics().widthPixels)\r\n            {\r\n                tabLayout.setTabMode(TabLayout.MODE_FIXED);\r\n                ViewGroup.LayoutParams mParams = tabLayout.getLayoutParams();\r\n                mParams.width = ViewGroup.LayoutParams.MATCH_PARENT;\r\n                tabLayout.setLayoutParams(mParams);\r\n            }\r\n            else\r\n            {\r\n                tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);\r\n            }\r\n        }\r\n    };\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/ui/home/HomeFragment.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/ui/home/HomeFragment.java	(date 1611379072366)
@@ -1,10 +1,8 @@
 package com.example.itifighter.ui.home;
 
-import android.annotation.SuppressLint;
 import android.os.Bundle;
 import android.os.Handler;
 import android.view.LayoutInflater;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -13,11 +11,8 @@
 import androidx.viewpager.widget.ViewPager;
 
 import com.example.itifighter.CustomStackManager;
-import com.example.itifighter.CustomViewPager;
 import com.example.itifighter.MyAdapter;
 import com.example.itifighter.R;
-import com.google.android.material.bottomnavigation.BottomNavigationView;
-import com.google.android.material.bottomnavigation.LabelVisibilityMode;
 import com.google.android.material.tabs.TabLayout;
 
 import java.util.Objects;
@@ -27,55 +22,14 @@
 
 
     private TabLayout tabLayout;
-    /*BottomNavigationView bnv;*/
 
     public View onCreateView(@NonNull LayoutInflater inflater,
                              final ViewGroup container, Bundle savedInstanceState) {
         final View root = inflater.inflate(R.layout.fragment_menu_home, container, false);
         tabLayout = root.findViewById(R.id.tabLayoutX);
-        /*bnv = root.findViewById(R.id.bottom_navigation);*/
         final ViewPager viewPager = root.findViewById(R.id.viewPagerX);
-//        final CustomViewPager viewPager = root.findViewById(R.id.viewPagerX);
-//        viewPager.setPagingEnabled(false);
-        /*bnv.setSelectedItemId(R.id.page_lt);*/
         CustomStackManager.current_page = 2;
-        /*bnv.setItemIconTintList(null);
-        bnv.setLabelVisibilityMode(LabelVisibilityMode.LABEL_VISIBILITY_SELECTED);   //LABEL_VISIBILITY_SELECTED: The label is only shown on the selected navigation item
-        bnv.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
-            @SuppressLint("NonConstantResourceId")
-            @Override
-            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-                switch (item.getItemId()){
-                    case R.id.page_pp:
-                        // Respond to navigation item 1 click
-                        viewPager.setCurrentItem(0);
-                        CustomStackManager.current_page = 0;
-                        return true;
-                    case R.id.page_mt:
-                        // Respond to navigation item 2 click
-                        viewPager.setCurrentItem(1);
-                        CustomStackManager.current_page = 1;
-                        return true;
-                    case R.id.page_lt:
-                        // Respond to navigation item 3 click
-                        viewPager.setCurrentItem(2);
-                        CustomStackManager.current_page = 2;
-                        return true;
-                    case R.id.page_ts:
-                        // Respond to navigation item 4 click
-                        viewPager.setCurrentItem(3);
-                        CustomStackManager.current_page = 3;
-                        return true;
-                    case R.id.page_mts:
-                        // Respond to navigation item 5 click
-                        viewPager.setCurrentItem(4);
-                        CustomStackManager.current_page = 4;
-                        return true;
-                    default:
-                        return false;
-                }
-            }
-        });*/
+
         tabLayout.addTab(tabLayout.newTab().setText("Previous Paper"));
         tabLayout.addTab(tabLayout.newTab().setText("Mock Test"));
         tabLayout.addTab(tabLayout.newTab().setText("Daily Live Test"));
@@ -83,13 +37,10 @@
         tabLayout.addTab(tabLayout.newTab().setText("My Test Series"));
         tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
 
-        System.out.println("hello");
-        final MyAdapter adapter = new MyAdapter(getParentFragmentManager(), /*tabLayout.getTabCount()*/5);
+        final MyAdapter adapter = new MyAdapter(getParentFragmentManager(),5);
         new Handler().post(new Runnable() {
             @Override
             public void run() {
-//                viewPager.canResolveLayoutDirection();
-//                viewPager.clearOnPageChangeListeners();
                 viewPager.setAdapter(adapter);
                 Objects.requireNonNull(viewPager.getAdapter()).finishUpdate(container);
                 viewPager.setCurrentItem(2);
@@ -97,7 +48,6 @@
                 CustomStackManager.current_page = 2;
             }
         });
-        System.out.println("sk");
         viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
         viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
             @Override
Index: app/src/main/java/com/example/itifighter/PreviousPaper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnCanceledListener;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class PreviousPaper extends Fragment {\r\n\r\n    @SuppressLint(\"StaticFieldLeak\")\r\n    public static PreviousPaper instance;\r\n    private String currentPdf = \"\";\r\n    private ArrayList<CustomListItem> Subjects, Exams;\r\n    private ListView listView;\r\n    private ArrayList<String> PdfS, pdfFile, SubjectIds, ExamIds;\r\n    private ArrayList<CustomListItem> PdfS_CL;\r\n    private FirebaseFirestore db;\r\n    private ProgressDialog dialog;\r\n    private Context mContext;\r\n    private ArrayAdapter adapter;\r\n    public String curruntSubject=\"\",curruntChapter=\"\";\r\n    TextView emptyListMessage;\r\n\r\n    public PreviousPaper() {}\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        db = FirebaseFirestore.getInstance();\r\n        mContext = getContext();\r\n        instance = this;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);\r\n        listView = ppView.findViewById(R.id.branch_list);\r\n        emptyListMessage = ppView.findViewById(R.id.emptyListMessagepp);\r\n        setDialogMessage();\r\n        CustomizeView();\r\n        return ppView;\r\n    }\r\n\r\n\r\n\r\n\r\n    public void LoadSubjects(){\r\n        CustomStackManager.GetInstance().SetPageState(0);\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Subjects = new ArrayList<>();\r\n                    SubjectIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        SubjectIds.add(document.getId());\r\n                        Subjects.add(new CustomListItem(document.getString(/*\"Name\"*/\"name\"),\r\n                                        document.getString(/*\"description\"*/\"desc\"), \"pp\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(SubjectIds.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            curruntSubject = SubjectIds.get(position);\r\n                            LoadExams();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadSubjects();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void LoadExams(){\r\n        CustomStackManager.GetInstance().SetPageState(1);\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch\").document(curruntSubject).collection(\"exam\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    Exams = new ArrayList<>();\r\n                    ExamIds = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        ExamIds.add(document.getId());\r\n                        Exams.add(new CustomListItem(document.getString(\"name\"),\r\n                                document.getString(\"desc\"), \"pp/chapter\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(ExamIds.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view,\r\n                                                int position, long id) {\r\n                            curruntChapter = ExamIds.get(position);\r\n                            LoadPdfS();\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadExams();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    void LoadPdfS(){\r\n        CustomStackManager.GetInstance().SetPageState(2);\r\n        dialog.show();\r\n        db.collection(\"section\").document(\"pp\").collection(\"branch/\"+curruntSubject+\"/exam\").document(curruntChapter).collection(\"pdf\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    PdfS = new ArrayList<>();\r\n                    PdfS_CL = new ArrayList<>();\r\n                    pdfFile = new ArrayList<>();\r\n                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {\r\n                        PdfS.add(document.getId());\r\n                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString(\"price\"))),\r\n                                Double.parseDouble(Objects.requireNonNull(document.getString(\"discount\")))));\r\n                        pdfFile.add(\"\"+document.getString(\"Name\"));\r\n                    }\r\n                    emptyListMessage.setVisibility(PdfS.size() <= 0 ? View.VISIBLE : View.GONE);\r\n                    adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);\r\n                    listView.setAdapter(adapter);\r\n                    dialog.dismiss();\r\n                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n                        @Override\r\n                        public void onItemClick(AdapterView<?> parent, View view, final int position, long id) {\r\n                            currentPdf = PdfS.get(position); dialog.show();\r\n                            final String price = String.valueOf(PdfS_CL.get(position).getPrice()),\r\n                                         discount = String.valueOf(PdfS_CL.get(position).getDiscount()),\r\n                                         finalPrice = getFinalPrice(price,discount),\r\n                                         PdfName = String.valueOf(pdfFile.get(position));\r\n                            if(Double.parseDouble(finalPrice)<1){ openPdf(PdfName);}\r\n                            else{\r\n                                String Uid = FirebaseAuth.getInstance().getUid();\r\n                                if(Uid!=null){ try{\r\n                                        db.collection(\"users\").document(Uid).collection(\"Products\")\r\n                                                .document(\"pp\").collection(\"ProductId\").document(currentPdf)\r\n                                                .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                                                DocumentSnapshot documentSnapshot = task.getResult();\r\n                                                if(documentSnapshot!=null && documentSnapshot.exists()){\r\n                                                    String status = documentSnapshot.getString(\"status\");\r\n                                                    String curruntSubjectPdf = documentSnapshot.getString(\"currentSubject\");\r\n                                                    String currentChapterPdf = documentSnapshot.getString(\"currentChapter\");\r\n                                                    if(Objects.requireNonNull(status).equals(\"1\") && Objects.equals(currentChapterPdf, curruntChapter) &&\r\n                                                            Objects.equals(curruntSubjectPdf, curruntSubject))  openPdf(PdfName);\r\n                                                    else openPaytmPaymentGateway(price,discount,PdfName);\r\n                                                }else openPaytmPaymentGateway(price,discount,PdfName);\r\n                                            }\r\n                                        }).addOnFailureListener(new OnFailureListener() {\r\n                                            @Override\r\n                                            public void onFailure(@NonNull Exception e) {\r\n                                                Toast.makeText(getContext(),\" something failure\",Toast.LENGTH_SHORT).show();\r\n                                            }\r\n                                        }).addOnCanceledListener(new OnCanceledListener() {\r\n                                            @Override\r\n                                            public void onCanceled() {\r\n                                                Toast.makeText(getContext(),\"task canceled\",Toast.LENGTH_SHORT).show();\r\n                                            }\r\n                                        });\r\n                                    }catch (Exception e){\r\n                                        Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        private String getFinalPrice(String price, String discount) {\r\n                            double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);\r\n                            return  String.valueOf((price1)-((price1*discount1)/100));\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                    LoadPdfS();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    private void openPdf(String pdfName){\r\n        dialog.dismiss();\r\n        Intent intent = new Intent(mContext, LoadPdf.class);\r\n        intent.putExtra(\"pdf\",pdfName);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void openPaytmPaymentGateway(String price,String discount,String PdfName){\r\n        dialog.dismiss();\r\n        Intent intent = new Intent(mContext,PaytmPaymentpp.class);\r\n        intent.putExtra(\"price\",price);\r\n        intent.putExtra(\"discount\",discount);\r\n        intent.putExtra(\"titleName\",PdfName);\r\n        intent.putExtra(\"curruntPdf\",currentPdf);\r\n        intent.putExtra(\"currentSubject\",curruntSubject);\r\n        intent.putExtra(\"currentChapter\",curruntChapter);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void CustomizeView() { LoadSubjects(); }\r\n\r\n    private void setDialogMessage() {\r\n        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/PreviousPaper.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/PreviousPaper.java	(date 1611395922421)
@@ -21,14 +21,17 @@
 import com.google.android.gms.tasks.OnCanceledListener;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.firestore.CollectionReference;
 import com.google.firebase.firestore.DocumentSnapshot;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.QueryDocumentSnapshot;
 import com.google.firebase.firestore.QuerySnapshot;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.Objects;
 
 import static android.content.ContentValues.TAG;
@@ -42,208 +45,296 @@
     private ListView listView;
     private ArrayList<String> PdfS, pdfFile, SubjectIds, ExamIds;
     private ArrayList<CustomListItem> PdfS_CL;
+    private HashMap<String,Boolean>pdfPayment;
     private FirebaseFirestore db;
     private ProgressDialog dialog;
     private Context mContext;
     private ArrayAdapter adapter;
     public String curruntSubject="",curruntChapter="";
     TextView emptyListMessage;
+    private CollectionReference ref;
+
 
     public PreviousPaper() {}
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        db = FirebaseFirestore.getInstance();
-        mContext = getContext();
-        instance = this;
+        try{
+            super.onCreate(savedInstanceState);
+            db = FirebaseFirestore.getInstance();
+            mContext = getContext();
+            instance = this;
+        }catch(Exception e) {
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+        }
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);
-        listView = ppView.findViewById(R.id.branch_list);
-        emptyListMessage = ppView.findViewById(R.id.emptyListMessagepp);
-        setDialogMessage();
-        CustomizeView();
-        return ppView;
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        try{
+            View ppView = inflater.inflate(R.layout.fragment_previous_paper, container, false);
+            listView = ppView.findViewById(R.id.branch_list);
+            emptyListMessage = ppView.findViewById(R.id.emptyListMessagepp);
+            setDialogMessage();
+            CustomizeView();
+            return ppView;
+        }catch(Exception e){
+            Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_SHORT).show();
+            return inflater.inflate(R.layout.fragment_previous_paper, container, false);
+        }
+
     }
 
 
 
 
     public void LoadSubjects(){
-        CustomStackManager.GetInstance().SetPageState(0);
-        db.collection("section").document("pp").collection("branch").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-            @Override
-            public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                if (task.isSuccessful()) {
-                    Subjects = new ArrayList<>();
-                    SubjectIds = new ArrayList<>();
-                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {
-                        SubjectIds.add(document.getId());
-                        Subjects.add(new CustomListItem(document.getString(/*"Name"*/"name"),
-                                        document.getString(/*"description"*/"desc"), "pp"));
-                    }
-                    emptyListMessage.setVisibility(SubjectIds.size() <= 0 ? View.VISIBLE : View.GONE);
-                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);
-                    listView.setAdapter(adapter);
-                    dialog.dismiss();
-                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override
+        try{
+            CustomStackManager.GetInstance().SetPageState(0);
+            db.collection("section").document("pp").collection("branch").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                @Override
+                public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                    if (task.isSuccessful()) {
+                        Subjects = new ArrayList<>();
+                        SubjectIds = new ArrayList<>();
+                        for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {
+                            SubjectIds.add(document.getId());
+                            Subjects.add(new CustomListItem(document.getString(/*"Name"*/"name"),
+                                    document.getString(/*"description"*/"desc"), "pp"));
+                        }
+                        emptyListMessage.setVisibility(SubjectIds.size() <= 0 ? View.VISIBLE : View.GONE);
+                        ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Subjects);
+                        listView.setAdapter(adapter);
+                        dialog.dismiss();
+                        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {@Override
                         public void onItemClick(AdapterView<?> parent, View view,
                                                 int position, long id) {
                             curruntSubject = SubjectIds.get(position);
                             LoadExams();
                         }
-                    });
-                } else {
-                    Log.d(TAG, "Error getting documents: ", task.getException());
-                    LoadSubjects();
-                }
-            }
-        });
+                        });
+                    } else {
+                        Log.d(TAG, "Error getting documents: ", task.getException());
+                        LoadSubjects();
+                    }
+                }
+            });
+        }catch(Exception e) {
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+            LoadSubjects();
+        }
     }
 
     public void LoadExams(){
-        CustomStackManager.GetInstance().SetPageState(1);
-        dialog.show();
-        db.collection("section").document("pp").collection("branch").document(curruntSubject).collection("exam").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-            @Override
-            public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                if (task.isSuccessful()) {
-                    Exams = new ArrayList<>();
-                    ExamIds = new ArrayList<>();
-                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {
-                        ExamIds.add(document.getId());
-                        Exams.add(new CustomListItem(document.getString("name"),
-                                document.getString("desc"), "pp/chapter"));
-                    }
-                    emptyListMessage.setVisibility(ExamIds.size() <= 0 ? View.VISIBLE : View.GONE);
-                    ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);
-                    listView.setAdapter(adapter);
-                    dialog.dismiss();
-                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                        @Override
-                        public void onItemClick(AdapterView<?> parent, View view,
-                                                int position, long id) {
-                            curruntChapter = ExamIds.get(position);
-                            LoadPdfS();
-                        }
-                    });
-                } else {
-                    Log.d(TAG, "Error getting documents: ", task.getException());
-                    LoadExams();
-                }
-            }
-        });
+        try{
+            CustomStackManager.GetInstance().SetPageState(1);
+            dialog.show();
+            db.collection("section").document("pp").collection("branch").document(curruntSubject).collection("exam").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                @Override
+                public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                    if (task.isSuccessful()) {
+                        Exams = new ArrayList<>();
+                        ExamIds = new ArrayList<>();
+                        for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {
+                            ExamIds.add(document.getId());
+                            Exams.add(new CustomListItem(document.getString("name"),
+                                    document.getString("desc"), "pp/chapter"));
+                        }
+                            dialog.dismiss();
+                            emptyListMessage.setVisibility(SubjectIds.size() <= 0 ? View.VISIBLE : View.GONE);
+                            ArrayAdapter<CustomListItem> adapter = new CustomListViewArrayAdapter(mContext, 0, Exams);
+                            listView.setAdapter(adapter);
+                            listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                                @Override
+                                public void onItemClick(AdapterView<?> parent, View view,
+                                                        int position, long id) {
+                                    curruntChapter = ExamIds.get(position);
+                                    LoadPdfS();
+                                }
+                            });
+                    } else {
+                        dialog.dismiss();
+                        Log.d(TAG, "Error getting documents: ", task.getException());
+                        LoadExams();
+                    }
+                }
+            });
+        }catch(Exception e){
+            dialog.dismiss();
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+            LoadExams();
+        }
     }
 
-    void LoadPdfS(){
-        CustomStackManager.GetInstance().SetPageState(2);
-        dialog.show();
-        db.collection("section").document("pp").collection("branch/"+curruntSubject+"/exam").document(curruntChapter).collection("pdf").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-            @Override
-            public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                if (task.isSuccessful()) {
-                    PdfS = new ArrayList<>();
-                    PdfS_CL = new ArrayList<>();
-                    pdfFile = new ArrayList<>();
-                    for (QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {
-                        PdfS.add(document.getId());
-                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString("price"))),
-                                Double.parseDouble(Objects.requireNonNull(document.getString("discount")))));
-                        pdfFile.add(""+document.getString("Name"));
-                    }
-                    emptyListMessage.setVisibility(PdfS.size() <= 0 ? View.VISIBLE : View.GONE);
-                    adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);
-                    listView.setAdapter(adapter);
-                    dialog.dismiss();
-                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                        @Override
-                        public void onItemClick(AdapterView<?> parent, View view, final int position, long id) {
-                            currentPdf = PdfS.get(position); dialog.show();
-                            final String price = String.valueOf(PdfS_CL.get(position).getPrice()),
-                                         discount = String.valueOf(PdfS_CL.get(position).getDiscount()),
-                                         finalPrice = getFinalPrice(price,discount),
-                                         PdfName = String.valueOf(pdfFile.get(position));
-                            if(Double.parseDouble(finalPrice)<1){ openPdf(PdfName);}
-                            else{
-                                String Uid = FirebaseAuth.getInstance().getUid();
-                                if(Uid!=null){ try{
-                                        db.collection("users").document(Uid).collection("Products")
-                                                .document("pp").collection("ProductId").document(currentPdf)
-                                                .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
-                                            @Override
-                                            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
-                                                DocumentSnapshot documentSnapshot = task.getResult();
-                                                if(documentSnapshot!=null && documentSnapshot.exists()){
-                                                    String status = documentSnapshot.getString("status");
-                                                    String curruntSubjectPdf = documentSnapshot.getString("currentSubject");
-                                                    String currentChapterPdf = documentSnapshot.getString("currentChapter");
-                                                    if(Objects.requireNonNull(status).equals("1") && Objects.equals(currentChapterPdf, curruntChapter) &&
-                                                            Objects.equals(curruntSubjectPdf, curruntSubject))  openPdf(PdfName);
-                                                    else openPaytmPaymentGateway(price,discount,PdfName);
-                                                }else openPaytmPaymentGateway(price,discount,PdfName);
-                                            }
-                                        }).addOnFailureListener(new OnFailureListener() {
-                                            @Override
-                                            public void onFailure(@NonNull Exception e) {
-                                                Toast.makeText(getContext()," something failure",Toast.LENGTH_SHORT).show();
-                                            }
-                                        }).addOnCanceledListener(new OnCanceledListener() {
-                                            @Override
-                                            public void onCanceled() {
-                                                Toast.makeText(getContext(),"task canceled",Toast.LENGTH_SHORT).show();
-                                            }
-                                        });
-                                    }catch (Exception e){
-                                        Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();
-                                    }
-                                }
-                            }
-
-                        }
-
-                        private String getFinalPrice(String price, String discount) {
-                            double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);
-                            return  String.valueOf((price1)-((price1*discount1)/100));
-                        }
-                    });
-                } else {
-                    Log.d(TAG, "Error getting documents: ", task.getException());
-                    LoadPdfS();
-                }
-            }
-        });
+    public void LoadPdfS(){
+        try{
+            CustomStackManager.GetInstance().SetPageState(2);
+            dialog.show();
+            String Uid = FirebaseAuth.getInstance().getUid();
+            assert Uid != null;
+            ref = db.collection("users").document(Uid).collection("Products")
+                    .document("pp").collection("ProductId");
+
+            db.collection("section").document("pp")
+                    .collection("branch/"+curruntSubject+"/exam")
+                    .document(curruntChapter).collection("pdf")
+                    .get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                @Override
+                public void onComplete(@NonNull Task<QuerySnapshot> task) {
+
+                    try{
+                        if (task.isSuccessful()) {
+                            PdfS = new ArrayList<>();
+                            PdfS_CL = new ArrayList<>();
+                            pdfFile = new ArrayList<>();
+                            pdfPayment = new HashMap<>();
+                            for (final QueryDocumentSnapshot document : Objects.requireNonNull(task.getResult())) {
+                                final String curruntPdfSection = document.getId();
+                                ref.document(curruntPdfSection).get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
+                                    @Override
+                                    public void onSuccess(DocumentSnapshot documentSnapshot) {
+                                        pdfPayment.put(curruntPdfSection,xNull(String.valueOf(documentSnapshot.get("status"))).equalsIgnoreCase("1"));
+                                        PdfS.add(document.getId());
+                                        pdfFile.add("" + document.getString("Name"));
+                                        PdfS_CL.add(new CustomListItem(document.getId(), Double.parseDouble(Objects.requireNonNull(document.getString("price"))),
+                                                Double.parseDouble(Objects.requireNonNull(document.getString("discount"))),xNull(String.valueOf(documentSnapshot.get("status"))).equalsIgnoreCase("1")));
+
+                                        dialog.dismiss();
+                                        emptyListMessage.setVisibility(SubjectIds.size() <= 0 ? View.VISIBLE : View.GONE);
+                                            adapter = new CustomListViewArrayAdapter(mContext, 0, PdfS_CL);
+                                            listView.setAdapter(adapter);
+                                            listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                                                @Override
+                                                public void onItemClick(AdapterView<?> parent, View view, final int position, long id) {
+                                                    currentPdf = PdfS.get(position);
+                                                    dialog.show();
+                                                    final String price = String.valueOf(PdfS_CL.get(position).getPrice()),
+                                                            discount = String.valueOf(PdfS_CL.get(position).getDiscount()),
+                                                            finalPrice = getFinalPrice(price,discount),
+                                                            PdfName = String.valueOf(pdfFile.get(position));
+                                                    if(Double.parseDouble(finalPrice)<1){ openPdf(PdfName);}
+                                                    else{
+                                                        String Uid = FirebaseAuth.getInstance().getUid();
+                                                        if(Uid!=null){ try{
+                                                            db.collection("users").document(Uid).collection("Products")
+                                                                    .document("pp").collection("ProductId").document(currentPdf)
+                                                                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
+                                                                @Override
+                                                                public void onComplete(@NonNull Task<DocumentSnapshot> task) {
+                                                                    DocumentSnapshot documentSnapshot = task.getResult();
+                                                                    if(documentSnapshot!=null && documentSnapshot.exists()){
+                                                                        String status = documentSnapshot.getString("status");
+                                                                        String curruntSubjectPdf = documentSnapshot.getString("currentSubject");
+                                                                        String currentChapterPdf = documentSnapshot.getString("currentChapter");
+                                                                        if(Objects.requireNonNull(status).equals("1") && Objects.equals(currentChapterPdf, curruntChapter) &&
+                                                                                Objects.equals(curruntSubjectPdf, curruntSubject))  openPdf(PdfName);
+                                                                        else openPaytmPaymentGateway(price,discount,PdfName);
+                                                                    }else openPaytmPaymentGateway(price,discount,PdfName);
+                                                                }
+                                                            }).addOnFailureListener(new OnFailureListener() {
+                                                                @Override
+                                                                public void onFailure(@NonNull Exception e) {
+                                                                    dialog.dismiss();
+                                                                    Toast.makeText(getContext()," something failure",Toast.LENGTH_SHORT).show();
+                                                                }
+                                                            }).addOnCanceledListener(new OnCanceledListener() {
+                                                                @Override
+                                                                public void onCanceled() {
+                                                                    dialog.dismiss();
+                                                                    Toast.makeText(getContext(),"task canceled",Toast.LENGTH_SHORT).show();
+                                                                }
+                                                            });
+                                                        }catch (Exception e){
+                                                            dialog.dismiss();
+                                                            Toast.makeText(getContext(),e.getMessage(),Toast.LENGTH_LONG).show();
+                                                        }
+                                                        }else{
+                                                            dialog.dismiss();
+                                                        }
+                                                    }
+                                                }
+                                                private String getFinalPrice(String price, String discount) {
+                                                    double price1 = Double.parseDouble(price),discount1 = Double.parseDouble(discount);
+                                                    return  String.valueOf((price1)-((price1*discount1)/100));
+                                                }
+                                            });
+                                        }
+                                }).addOnFailureListener(new OnFailureListener() {
+                                    @Override
+                                    public void onFailure(@NonNull Exception e) {
+                                        Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+                                        LoadPdfS();
+                                    }
+                                });
+                            }
+                        } else {
+                            Log.d(TAG, "Error getting documents: ", task.getException());
+                            LoadPdfS();
+                        }
+                    }catch (Exception e){
+                        Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+                        LoadPdfS();
+                    }
+                }
+            });
+        }catch(Exception e){
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+            LoadPdfS();
+        }
     }
-
-
 
 
     private void openPdf(String pdfName){
-        dialog.dismiss();
-        Intent intent = new Intent(mContext, LoadPdf.class);
-        intent.putExtra("pdf",pdfName);
-        startActivity(intent);
+        try{
+            dialog.dismiss();
+            Intent intent = new Intent(mContext, LoadPdf.class);
+            intent.putExtra("pdf",pdfName);
+            startActivity(intent);
+        }catch(Exception e){
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+            openPdf(pdfName);
+        }
     }
 
     private void openPaytmPaymentGateway(String price,String discount,String PdfName){
-        dialog.dismiss();
-        Intent intent = new Intent(mContext,PaytmPaymentpp.class);
-        intent.putExtra("price",price);
-        intent.putExtra("discount",discount);
-        intent.putExtra("titleName",PdfName);
-        intent.putExtra("curruntPdf",currentPdf);
-        intent.putExtra("currentSubject",curruntSubject);
-        intent.putExtra("currentChapter",curruntChapter);
-        startActivity(intent);
+        try{
+            dialog.dismiss();
+            Intent intent = new Intent(mContext,PaytmPaymentpp.class);
+            intent.putExtra("price",price);
+            intent.putExtra("discount",discount);
+            intent.putExtra("titleName",PdfName);
+            intent.putExtra("curruntPdf",currentPdf);
+            intent.putExtra("currentSubject",curruntSubject);
+            intent.putExtra("currentChapter",curruntChapter);
+            startActivity(intent);
+        }catch(Exception e){
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+            openPaytmPaymentGateway(price,discount,PdfName);
+        }
     }
+
+    private void CustomizeView() {
+        try{
+            LoadSubjects();
+        }catch(Exception e){
+            CustomizeView();
+        }
 
-    private void CustomizeView() { LoadSubjects(); }
+    }
 
     private void setDialogMessage() {
-        dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);
-        dialog.setMessage("Loading...");
-        dialog.setCancelable(false);
+           try{
+            dialog = new ProgressDialog(getActivity(),R.style.AppCompatAlertDialogStyle);
+            dialog.setMessage("Loading...");
+            dialog.setCancelable(false);
+          }catch(Exception e){
+            Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
+            setDialogMessage();
+          }
+    }
+
+    public String xNull(String str) {
+        if(str!=null) return str;
+        else return "";
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity__branch_list_view2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"5dp\"\r\n    android:orientation=\"vertical\">\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\">\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/titlePPP\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n            android:layout_weight=\"1\"\r\n            android:textColor=\"@color/black\"\r\n            android:textStyle=\"bold\" />\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginEnd=\"@dimen/dimen_10dp\"\r\n        android:gravity=\"end\">\r\n        <TextView\r\n            android:id=\"@+id/originalPrice\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textColor=\"@color/black_overlay\"\r\n            android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n            android:textSize=\"12sp\"/>\r\n        <TextView\r\n            android:id=\"@+id/discountedPrice\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textColor=\"@color/black_overlay\"\r\n            android:layout_marginStart=\"10sp\"\r\n            android:textSize=\"12sp\"/>\r\n\r\n    </LinearLayout>\r\n    </LinearLayout>\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"2dp\"\r\n        android:layout_margin=\"5dp\"\r\n        android:background=\"@color/grey\"/>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity__branch_list_view2.xml	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/res/layout/activity__branch_list_view2.xml	(date 1610709835000)
@@ -1,52 +1,45 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_margin="5dp"
-    android:orientation="vertical">
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp">
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content">
+        <LinearLayout
+            android:id="@+id/backgroundPdf"
+            xmlns:android="http://schemas.android.com/apk/res/android"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_margin="10dp"
+            android:padding="15dp"
+            android:orientation="horizontal">
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content">
 
-        <TextView
-            android:id="@+id/titlePPP"
-            android:layout_width="0dp"
-            android:layout_height="match_parent"
-            android:layout_marginStart="@dimen/dimen_20dp"
-            android:layout_weight="1"
-            android:textColor="@color/black"
-            android:textStyle="bold" />
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_marginTop="5dp"
-        android:layout_height="wrap_content"
-        android:layout_marginEnd="@dimen/dimen_10dp"
-        android:gravity="end">
-        <TextView
-            android:id="@+id/originalPrice"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textColor="@color/black_overlay"
-            android:layout_marginStart="@dimen/dimen_20dp"
-            android:textSize="12sp"/>
-        <TextView
-            android:id="@+id/discountedPrice"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textColor="@color/black_overlay"
-            android:layout_marginStart="10sp"
-            android:textSize="12sp"/>
+                <TextView
+                    android:id="@+id/titlePPP"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:layout_marginStart="@dimen/dimen_20dp"
+                    android:layout_weight="1"
+                    android:textColor="@color/black"
+                    android:textStyle="bold" />
+            </LinearLayout>
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_marginTop="5dp"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="@dimen/dimen_10dp"
+                android:gravity="end">
+                <TextView
+                    android:id="@+id/originalPrice"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textColor="@color/black_overlay"
+                    android:layout_marginStart="@dimen/dimen_20dp"
+                    android:textSize="12sp"/>
+                <TextView
+                    android:id="@+id/discountedPrice"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textColor="@color/black_overlay"
+                    android:layout_marginStart="10sp"
+                    android:textSize="12sp"/>
 
-    </LinearLayout>
-    </LinearLayout>
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="2dp"
-        android:layout_margin="5dp"
-        android:background="@color/grey"/>
-</LinearLayout>
\ No newline at end of file
+            </LinearLayout>
+        </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_menu_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--<RelativeLayout android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/bg_login\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <com.example.itifighter.CustomViewPager\r\n        android:id=\"@+id/viewPagerX\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@id/bottom_navigation\"\r\n        android:layout_centerInParent=\"true\">\r\n    </com.example.itifighter.CustomViewPager>\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/bottom_navigation\"\r\n        android:background=\"@drawable/background_transparent\"\r\n        app:labelVisibilityMode=\"selected\"\r\n        android:paddingHorizontal=\"@dimen/dimen_12dp\"\r\n        app:itemIconSize=\"28dp\"\r\n        app:itemTextColor=\"@color/ITIColor\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:itemTextAppearanceActive=\"@style/TextAppearance.Compat.Notification.Time\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        app:menu=\"@menu/bottom_navigation_menu\" />\r\n</RelativeLayout>-->\r\n\r\n<RelativeLayout android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/bg_login\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <com.google.android.material.tabs.TabLayout\r\n        android:id=\"@+id/tabLayoutX\"\r\n        app:tabSelectedTextColor=\"@color/ITIColor\"\r\n        app:tabIndicatorColor=\"@color/ITIColor\"\r\n        android:layout_height=\"?attr/actionBarSize\"\r\n        app:tabIndicatorHeight=\"2dp\"\r\n        app:tabTextAppearance=\"@style/TabLayoutTextStyle\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:background=\"@android:color/transparent\"\r\n        app:tabGravity=\"fill\"\r\n        app:tabMode=\"scrollable\"\r\n        android:overScrollMode=\"never\">\r\n    </com.google.android.material.tabs.TabLayout>\r\n<!--    use customViewPager in place of viewPager for disabling scroll and other custom set features-->\r\n    <androidx.viewpager.widget.ViewPager\r\n            android:id=\"@+id/viewPagerX\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/tabLayoutX\"\r\n            android:layout_centerInParent=\"true\">\r\n    </androidx.viewpager.widget.ViewPager>\r\n</RelativeLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_menu_home.xml	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/res/layout/fragment_menu_home.xml	(date 1611378340276)
@@ -1,31 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--<RelativeLayout android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@drawable/bg_login"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <com.example.itifighter.CustomViewPager
-        android:id="@+id/viewPagerX"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_above="@id/bottom_navigation"
-        android:layout_centerInParent="true">
-    </com.example.itifighter.CustomViewPager>
-    <com.google.android.material.bottomnavigation.BottomNavigationView
-        android:id="@+id/bottom_navigation"
-        android:background="@drawable/background_transparent"
-        app:labelVisibilityMode="selected"
-        android:paddingHorizontal="@dimen/dimen_12dp"
-        app:itemIconSize="28dp"
-        app:itemTextColor="@color/ITIColor"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        app:itemTextAppearanceActive="@style/TextAppearance.Compat.Notification.Time"
-        android:layout_alignParentBottom="true"
-        app:menu="@menu/bottom_navigation_menu" />
-</RelativeLayout>-->
 
 <RelativeLayout android:orientation="vertical"
     android:layout_width="match_parent"
Index: app/src/main/res/drawable/circle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:shape=\"oval\">\r\n    <solid android:color=\"@color/white\" />\r\n    <size\r\n        android:height=\"60dp\"\r\n        android:width=\"60dp\" />\r\n    <stroke\r\n        android:width=\"2dp\"\r\n        android:color=\"@color/grey\" />\r\n\r\n</shape>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/circle.xml	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/res/drawable/circle.xml	(date 1610710771579)
@@ -1,11 +1,11 @@
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
     android:shape="oval">
-    <solid android:color="@color/white" />
+    <solid android:color="#FEFEBB" />
     <size
         android:height="60dp"
         android:width="60dp" />
     <stroke
         android:width="2dp"
-        android:color="@color/grey" />
+        android:color="#5D6D7E" />
 
 </shape>
\ No newline at end of file
Index: app/src/main/res/layout/activity_mock_chapter_xyz.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\".LiveTestXyz\"\r\n    android:orientation=\"horizontal\"\r\n    android:baselineAligned=\"false\">\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\">\r\n        <RelativeLayout\r\n            android:layout_width=\"70dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_margin=\"5dp\">\r\n            <ImageView\r\n                android:id=\"@+id/thumbnail\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"@drawable/rounded_text\"\r\n                android:src=\"@drawable/user\"\r\n                android:visibility=\"gone\"\r\n                android:contentDescription=\"@string/todo\" />\r\n            <de.hdodenhof.circleimageview.CircleImageView\r\n                android:id=\"@+id/thumbnail2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:visibility=\"visible\"\r\n                android:background=\"@drawable/rounded_text\"\r\n                android:contentDescription=\"@string/todo\"/>\r\n            <TextView\r\n                android:id=\"@+id/ChapterIndex\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"02\"\r\n                android:visibility=\"visible\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"25sp\"\r\n                android:gravity=\"center\"/>\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"80dp\"\r\n        android:layout_weight=\"1\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n            <TextView\r\n                android:id=\"@+id/title\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:textColor=\"@color/black\"\r\n                android:textStyle=\"bold\"\r\n                android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                android:text=\"New Test Model\"/>\r\n        </LinearLayout>\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:orientation=\"horizontal\">\r\n            <TextView\r\n                android:id=\"@+id/MockChap_NOQ_DUR_MRX\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:textSize=\"12sp\"\r\n                android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                android:text=\"40 Qs  |  70 Mins  |  100 Marks\"/>\r\n        </LinearLayout>\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"start\">\r\n            <TextView\r\n                android:id=\"@+id/MockChap_Price\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/black_overlay\"\r\n                android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n                android:textSize=\"12sp\"\r\n                android:text=\"@string/_100_u20b9\"\r\n                />\r\n            <TextView\r\n                android:id=\"@+id/MockChap_FPrice\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/black_overlay\"\r\n                android:layout_marginStart=\"10sp\"\r\n                android:textSize=\"12sp\"\r\n                android:text=\"FREE\"\r\n                />\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_mock_chapter_xyz.xml	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/res/layout/activity_mock_chapter_xyz.xml	(date 1611376374776)
@@ -6,21 +6,11 @@
     tools:context=".LiveTestXyz"
     android:orientation="horizontal"
     android:baselineAligned="false">
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content">
-        <RelativeLayout
-            android:layout_width="70dp"
-            android:layout_height="70dp"
-            android:layout_margin="5dp">
-            <ImageView
-                android:id="@+id/thumbnail"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:background="@drawable/rounded_text"
-                android:src="@drawable/user"
-                android:visibility="gone"
-                android:contentDescription="@string/todo" />
+    <RelativeLayout
+        android:layout_width="70dp"
+        android:layout_height="70dp"
+        android:layout_margin="10dp"
+        android:orientation="horizontal">
             <de.hdodenhof.circleimageview.CircleImageView
                 android:id="@+id/thumbnail2"
                 android:layout_width="match_parent"
@@ -32,14 +22,12 @@
                 android:id="@+id/ChapterIndex"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="02"
                 android:visibility="visible"
                 android:layout_centerInParent="true"
                 android:textColor="@color/black"
                 android:textSize="25sp"
                 android:gravity="center"/>
-        </RelativeLayout>
-    </LinearLayout>
+    </RelativeLayout>
     <LinearLayout
         android:layout_width="0dp"
         android:layout_height="80dp"
@@ -55,10 +43,10 @@
                 android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
-                android:textColor="@color/black"
                 android:textStyle="bold"
-                android:layout_marginStart="@dimen/dimen_20dp"
-                android:text="New Test Model"/>
+                android:textSize="15sp"
+                android:textColor="@color/black"
+                android:layout_marginStart="20dp"/>
         </LinearLayout>
         <LinearLayout
             android:layout_width="match_parent"
Index: app/src/main/java/com/example/itifighter/CustomListItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nclass CustomListItem {\r\n    private String topicHeader;\r\n    private String months,month2,month3;\r\n    private String description;\r\n    private double price;\r\n    private double price2;\r\n    private double price3;\r\n    private double discount;\r\n    private double discount2;\r\n    private double discount3;\r\n    private int quesCount;\r\n    private int duration;\r\n    private int MPQ,NOQ;\r\n    private int type;\r\n    private int chapterIndex;\r\n    private String imagex;\r\n    private String coupanCode,coupanActive;\r\n\r\n    public CustomListItem(String topicHeader, double price, double discount){\r\n        this.topicHeader = topicHeader;\r\n        this.price = price;\r\n        this.discount = discount;\r\n        type = 2;\r\n    }\r\n\r\n    public CustomListItem(String topicHeader, String description, double price, double discount, int quesCount, int duration, int MPQ,String imagex){\r\n        this.topicHeader = topicHeader;\r\n        this.description = description;\r\n        this.price = price;\r\n        type = 1;\r\n        this.discount = discount;\r\n        this.quesCount = quesCount;\r\n        this.duration = duration;\r\n        this.MPQ = MPQ;\r\n        this.imagex = imagex;\r\n    }\r\n\r\n    public CustomListItem(int chapterIndex, String topicHeader, String description, double price, double discount, int quesCount, int duration, int MPQ,String imagex){\r\n        this.chapterIndex = chapterIndex;\r\n        this.topicHeader = topicHeader;\r\n        this.description = description;\r\n        this.price = price;\r\n        type = 1;\r\n        this.discount = discount;\r\n        this.quesCount = quesCount;\r\n        this.duration = duration;\r\n        this.MPQ = MPQ;\r\n        this.imagex = imagex;\r\n    }\r\n\r\n    public CustomListItem(String topicHeader, String description, String imagex){\r\n        this.topicHeader = topicHeader;\r\n        this.description = description;\r\n        type=0;\r\n        this.imagex = imagex;\r\n    }\r\n\r\n    public CustomListItem(String topicHeader, String description, String months, double price, double discount, String imagex) {\r\n        this.topicHeader = topicHeader;\r\n        this.months = months;\r\n        this.description = description;\r\n        this.price = price;\r\n        type = 3;\r\n        this.discount = discount;\r\n        this.imagex = imagex;\r\n    }\r\n\r\n    public CustomListItem(String name, String month1, String month2, String month3, String price1, String price2, String price3, String discount1, String discount2, String discount3, String couponCODE, String couponACTIVE, String noq) {\r\n        this.topicHeader = name;\r\n        this.months = month1;\r\n        this.month2 = month2;\r\n        this.month3 = month3;\r\n        this.price = Double.parseDouble(price1);\r\n        this.price2 = Double.parseDouble(price2);\r\n        this.price3 = Double.parseDouble(price3);\r\n        this.discount = Double.parseDouble(discount1);\r\n        this.discount2 = Double.parseDouble(discount2);\r\n        this.discount3 = Double.parseDouble(discount3);\r\n        this.coupanCode = couponCODE;\r\n        this.coupanActive = couponACTIVE;\r\n        this.NOQ = Integer.parseInt(noq);\r\n\r\n    }\r\n\r\n    public int getType() {\r\n        return type;\r\n    }\r\n    public int getChapterIndex() {\r\n        return chapterIndex;\r\n    }\r\n\r\n    public double getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public double getDiscount() {\r\n        return discount;\r\n    }\r\n\r\n    public int getQuesCount() {\r\n        return quesCount;\r\n    }\r\n\r\n    public String getTopicHeader() {return topicHeader; }\r\n    public String getMonths() {return months; }\r\n    public String getDescription() {return description; }\r\n    public String getImagex(){return  imagex;}\r\n\r\n    public int getDuration() {\r\n        return this.duration;\r\n    }\r\n\r\n    public int getMPQ() {\r\n        return this.MPQ;\r\n    }\r\n\r\n    public String getMonth2() {\r\n        return month2;\r\n    }\r\n\r\n    public String getMonth3() {\r\n        return month3;\r\n    }\r\n\r\n    public double getPrice2() {\r\n        return price2;\r\n    }\r\n\r\n    public double getPrice3() {\r\n        return price3;\r\n    }\r\n\r\n    public double getDiscount2() {\r\n        return discount2;\r\n    }\r\n\r\n    public double getDiscount3() {\r\n        return discount3;\r\n    }\r\n\r\n    public int getNOQ() {\r\n        return NOQ;\r\n    }\r\n\r\n    public String getCoupanCode() {\r\n        return coupanCode;\r\n    }\r\n\r\n    public String getCoupanActive() {\r\n        return coupanActive;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/CustomListItem.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/CustomListItem.java	(date 1610890216201)
@@ -1,7 +1,7 @@
 package com.example.itifighter;
 
 class CustomListItem {
-    private String topicHeader;
+    private final String topicHeader;
     private String months,month2,month3;
     private String description;
     private double price;
@@ -17,6 +17,7 @@
     private int chapterIndex;
     private String imagex;
     private String coupanCode,coupanActive;
+    private boolean paymentStatus;
 
     public CustomListItem(String topicHeader, double price, double discount){
         this.topicHeader = topicHeader;
@@ -25,6 +26,16 @@
         type = 2;
     }
 
+    public CustomListItem(String topicHeader, double price, double discount, boolean paymentStatus){
+        this.topicHeader = topicHeader;
+        this.price = price;
+        this.discount = discount;
+        this.paymentStatus = paymentStatus;
+        type = 2;
+    }
+
+
+
     public CustomListItem(String topicHeader, String description, double price, double discount, int quesCount, int duration, int MPQ,String imagex){
         this.topicHeader = topicHeader;
         this.description = description;
@@ -151,4 +162,12 @@
     public String getCoupanActive() {
         return coupanActive;
     }
+
+    public boolean getPaymentStatus() {
+        return paymentStatus;
+    }
+
+    public void setPaymentStatus(boolean paymentStatus) {
+        this.paymentStatus = paymentStatus;
+    }
 }
Index: app/src/main/java/com/example/itifighter/CustomListViewArrayAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nclass CustomListViewArrayAdapter extends ArrayAdapter<CustomListItem> {\r\n    private Context context;\r\n    private List<CustomListItem> Subjects;\r\n    private LayoutInflater inflater;\r\n    FirebaseStorage mFirebaseStorage= FirebaseStorage.getInstance();\r\n    StorageReference mmFirebaseStorageRef;\r\n    @Override\r\n    public int getCount() { return Subjects.size(); }\r\n\r\n    @Nullable\r\n    @Override\r\n    public CustomListItem getItem(int position) {\r\n        return Subjects.get(position);\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {return position;}\r\n    public CustomListViewArrayAdapter(Context context, int resource, ArrayList<CustomListItem> objects) {\r\n        super(context, resource, objects);\r\n        this.context = context;\r\n        this.Subjects = objects;\r\n    }\r\n\r\n    // called when rendering the list\r\n    @NonNull\r\n    public View getView(int position, View convertView, @NonNull ViewGroup parent) {\r\n\r\n        //get the property we are displaying\r\n        CustomListItem property = Subjects.get(position);\r\n        View vv;\r\n        switch (property.getType()){\r\n            case 1:\r\n                vv = getType1(property);\r\n                break;\r\n            case 2:\r\n                vv = getType2(property);\r\n                break;\r\n            case 3:\r\n                vv = getType3(property);\r\n                break;\r\n            default:\r\n                vv = getType0(property);\r\n                break;\r\n        }\r\n        return vv;\r\n        //return property.getType() == 1 ? getType1(property) : property.getType() == 2 ? getType2(property) : getType0(property);\r\n    }\r\n\r\n    private View getType0(CustomListItem property) {\r\n        //get the inflater and inflate the XML layout for each item\r\n        if (inflater == null)\r\n            inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\r\n        @SuppressLint({\"ViewHolder\", \"InflateParams\"}) View view = inflater.inflate(R.layout.activity_custom_list_view_row, null);\r\n\r\n        ImageView thumbNail = view\r\n                .findViewById(R.id.thumbnail);\r\n        TextView description = view.findViewById(R.id.genre);\r\n        TextView topicHeader = view.findViewById(R.id.title);\r\n\r\n        topicHeader.setText(property.getTopicHeader());\r\n        mmFirebaseStorageRef=mFirebaseStorage.getReference().child(\"menu/section/\"+property.getImagex()+\"/\");\r\n\r\n        Glide.with(context)\r\n                .load(mmFirebaseStorageRef.child(\"\"+property.getTopicHeader()))\r\n                .into(thumbNail);\r\n        //display trimmed excerpt for description\r\n\r\n        if(property.getDescription() != null){\r\n            int descriptionLength = property.getDescription().length();\r\n            if(descriptionLength >= 100){\r\n                String descriptionTrim = property.getDescription().substring(0,100) + \"...\";\r\n                description.setText(descriptionTrim);\r\n            }else{\r\n                description.setText(property.getDescription());\r\n            }\r\n        }else{ description.setText(\"--\"); }\r\n\r\n        return view;\r\n    }\r\n\r\n    private View getType1(CustomListItem property) {\r\n        //get the inflater and inflate the XML layout for each item\r\n        if (inflater == null)\r\n            inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\r\n        @SuppressLint({\"ViewHolder\", \"InflateParams\"}) View view = inflater.inflate(R.layout.activity_mock_chapter_xyz, null);\r\n\r\n        ImageView thumbNail = view\r\n                .findViewById(R.id.thumbnail);\r\n        TextView topicHeader = view.findViewById(R.id.title);\r\n\r\n        topicHeader.setText(property.getTopicHeader());\r\n        mmFirebaseStorageRef=mFirebaseStorage.getReference().child(\"menu/section/\"+property.getImagex()+\"/\");\r\n\r\n        Glide.with(context)\r\n                .load(mmFirebaseStorageRef.child(\"\"+property.getTopicHeader()))\r\n                .into(thumbNail);\r\n        //display trimmed excerpt for description\r\n        String _NOQ_DUR_MRX = \"\"+property.getQuesCount()+\" Qs  |  \"+property.getDuration()+\" Mins  |  \"+(property.getQuesCount()*property.getMPQ())+\" Marks\";\r\n        ((TextView)view.findViewById(R.id.MockChap_NOQ_DUR_MRX)).setText(_NOQ_DUR_MRX);\r\n        TextView originalPrice = (TextView)view.findViewById(R.id.MockChap_Price);\r\n        originalPrice.setText(\"\"+property.getPrice()+\" \\u20b9\");\r\n        originalPrice.setPaintFlags(originalPrice.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n        double discounted = (getFinalPrice(property.getPrice(), property.getDiscount()));\r\n        TextView _discountedTV = (TextView)view.findViewById(R.id.MockChap_FPrice);\r\n        _discountedTV.setText(\"\"+(discounted > 0 ? discounted+\" \\u20b9\" : \"FREE\"));\r\n        _discountedTV.setTextColor(Color.parseColor(\"#000099\"));\r\n        if(property.getImagex().contains(\"mt\")){\r\n            _discountedTV.setVisibility(View.GONE);\r\n            originalPrice.setVisibility(View.GONE);\r\n            topicHeader.setTextSize(25);\r\n            thumbNail.setVisibility(View.GONE);\r\n            view.findViewById(R.id.thumbnail2).setVisibility(View.VISIBLE);\r\n            TextView chapterIndex = view.findViewById(R.id.ChapterIndex);\r\n            chapterIndex.setVisibility(View.VISIBLE);\r\n            int index = property.getChapterIndex();\r\n            chapterIndex.setText(index > 9 ? \"\"+index : \"0\"+index);\r\n        }\r\n        return view;\r\n    }\r\n\r\n    private double getFinalPrice(double price, double discount) {\r\n        return  (price)-((price*discount)/100);\r\n    }\r\n\r\n    private View getType2(CustomListItem property) {\r\n        //get the inflater and inflate the XML layout for each item\r\n        if (inflater == null)\r\n            inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\r\n        @SuppressLint({\"ViewHolder\", \"InflateParams\"}) View view = inflater.inflate(R.layout.activity__branch_list_view2, null);\r\n\r\n        TextView topicHeader = view.findViewById(R.id.titlePPP);\r\n\r\n        topicHeader.setText(property.getTopicHeader());\r\n\r\n        TextView originalPrice = (TextView)view.findViewById(R.id.originalPrice);\r\n        originalPrice.setText(\"\"+property.getPrice()+\" \\u20b9\");\r\n        originalPrice.setPaintFlags(originalPrice.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n        double discounted = (getFinalPrice(property.getPrice(), property.getDiscount()));\r\n        TextView _discountedTV = (TextView)view.findViewById(R.id.discountedPrice);\r\n        _discountedTV.setText(\"\"+(discounted > 0 ? discounted+\" \\u20b9\" : \"FREE\"));\r\n        _discountedTV.setTextColor(Color.parseColor(\"#000099\"));\r\n        return view;\r\n    }\r\n\r\n    private View getType3(CustomListItem property) {\r\n        //get the inflater and inflate the XML layout for each item\r\n        if (inflater == null)\r\n            inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\r\n        @SuppressLint({\"ViewHolder\", \"InflateParams\"}) View view = inflater.inflate(R.layout.activity_mock_chapter_xyz, null);\r\n\r\n        ImageView thumbNail = view\r\n                .findViewById(R.id.thumbnail);\r\n        TextView topicHeader = view.findViewById(R.id.title);\r\n\r\n        topicHeader.setText(property.getTopicHeader());\r\n        mmFirebaseStorageRef=mFirebaseStorage.getReference().child(\"menu/section/\"+property.getImagex()+\"/\");\r\n\r\n        Glide.with(context)\r\n                .load(mmFirebaseStorageRef.child(\"\"+property.getTopicHeader()))\r\n                .into(thumbNail);\r\n        //display trimmed excerpt for description\r\n        String _NOQ_DUR_MRX = \"\"+property.getMonths()+\" Months\";\r\n        ((TextView)view.findViewById(R.id.MockChap_NOQ_DUR_MRX)).setText(_NOQ_DUR_MRX);\r\n        TextView originalPrice = (TextView)view.findViewById(R.id.MockChap_Price);\r\n        originalPrice.setText(\"\"+property.getPrice()+\" \\u20b9\");\r\n        originalPrice.setPaintFlags(originalPrice.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n        double discounted = (getFinalPrice(property.getPrice(), property.getDiscount()));\r\n        TextView _discountedTV = (TextView)view.findViewById(R.id.MockChap_FPrice);\r\n        _discountedTV.setText(\"\"+(discounted > 0 ? discounted+\" \\u20b9\" : \"FREE\"));\r\n        _discountedTV.setTextColor(Color.parseColor(\"#000099\"));\r\n        return view;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/CustomListViewArrayAdapter.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/CustomListViewArrayAdapter.java	(date 1610889970253)
@@ -10,18 +10,22 @@
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
 import android.widget.ImageView;
+import android.widget.LinearLayout;
 import android.widget.TextView;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+
 import com.bumptech.glide.Glide;
 import com.google.firebase.storage.FirebaseStorage;
 import com.google.firebase.storage.StorageReference;
+
 import java.util.ArrayList;
 import java.util.List;
 
 class CustomListViewArrayAdapter extends ArrayAdapter<CustomListItem> {
-    private Context context;
-    private List<CustomListItem> Subjects;
+    private final Context context;
+    private final List<CustomListItem> Subjects;
     private LayoutInflater inflater;
     FirebaseStorage mFirebaseStorage= FirebaseStorage.getInstance();
     StorageReference mmFirebaseStorageRef;
@@ -64,7 +68,6 @@
                 break;
         }
         return vv;
-        //return property.getType() == 1 ? getType1(property) : property.getType() == 2 ? getType2(property) : getType0(property);
     }
 
     private View getType0(CustomListItem property) {
@@ -99,6 +102,7 @@
         return view;
     }
 
+    @SuppressLint("SetTextI18n")
     private View getType1(CustomListItem property) {
         //get the inflater and inflate the XML layout for each item
         if (inflater == null)
@@ -128,7 +132,6 @@
         if(property.getImagex().contains("mt")){
             _discountedTV.setVisibility(View.GONE);
             originalPrice.setVisibility(View.GONE);
-            topicHeader.setTextSize(25);
             thumbNail.setVisibility(View.GONE);
             view.findViewById(R.id.thumbnail2).setVisibility(View.VISIBLE);
             TextView chapterIndex = view.findViewById(R.id.ChapterIndex);
@@ -143,26 +146,30 @@
         return  (price)-((price*discount)/100);
     }
 
-    private View getType2(CustomListItem property) {
-        //get the inflater and inflate the XML layout for each item
-        if (inflater == null)
-            inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
-        @SuppressLint({"ViewHolder", "InflateParams"}) View view = inflater.inflate(R.layout.activity__branch_list_view2, null);
-
-        TextView topicHeader = view.findViewById(R.id.titlePPP);
-
-        topicHeader.setText(property.getTopicHeader());
-
-        TextView originalPrice = (TextView)view.findViewById(R.id.originalPrice);
-        originalPrice.setText(""+property.getPrice()+" \u20b9");
-        originalPrice.setPaintFlags(originalPrice.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
-        double discounted = (getFinalPrice(property.getPrice(), property.getDiscount()));
-        TextView _discountedTV = (TextView)view.findViewById(R.id.discountedPrice);
-        _discountedTV.setText(""+(discounted > 0 ? discounted+" \u20b9" : "FREE"));
-        _discountedTV.setTextColor(Color.parseColor("#000099"));
+    @SuppressLint("SetTextI18n")
+    private synchronized View getType2(final CustomListItem property) {
+        inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
+        @SuppressLint("InflateParams") final View view = inflater.inflate(R.layout.activity__branch_list_view2, null);
+                LinearLayout layout = view.findViewById(R.id.backgroundPdf);
+                TextView topicHeader = view.findViewById(R.id.titlePPP);
+                TextView originalPrice = view.findViewById(R.id.originalPrice);
+                TextView _discountedTV = view.findViewById(R.id.discountedPrice);
+                if(property.getPaymentStatus()){
+                    layout.setBackgroundColor(Color.parseColor("#C5FBBC"));
+                    originalPrice.setText("Open");
+                    originalPrice.setTextColor(Color.parseColor("#003700"));
+                }else{
+                    originalPrice.setText(""+property.getPrice()+" \u20b9");
+                    originalPrice.setPaintFlags(originalPrice.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
+                    double discounted = (getFinalPrice(property.getPrice(), property.getDiscount()));
+                    _discountedTV.setText(""+(discounted > 0 ? discounted+" \u20b9" : "FREE"));
+                    _discountedTV.setTextColor(Color.parseColor("#000099"));
+                }
+                topicHeader.setText(property.getTopicHeader());
         return view;
     }
 
+    @SuppressLint("SetTextI18n")
     private View getType3(CustomListItem property) {
         //get the inflater and inflate the XML layout for each item
         if (inflater == null)
Index: app/src/main/java/com/example/itifighter/MyAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentStatePagerAdapter;\r\n\r\npublic class MyAdapter extends FragmentStatePagerAdapter{\r\n    int totalTabs;\r\n    public MyAdapter(FragmentManager fm, int totalTabs) {\r\n        super(fm,totalTabs);\r\n        this.totalTabs = totalTabs;\r\n        System.out.println(\"java\");\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public Fragment getItem(int position) {\r\n        switch (position) {\r\n            case 1:\r\n                MockTest.instance = new MockTest();\r\n                return MockTest.instance;\r\n            case 2:\r\n                LiveTest.instance = new LiveTest();\r\n                return LiveTest.instance;\r\n            case 3:\r\n                TestSeries.instance = new TestSeries();\r\n                return TestSeries.instance;\r\n            case 4:\r\n                MyTestSeries.instance = new MyTestSeries();\r\n                return MyTestSeries.instance;\r\n            default:\r\n                PreviousPaper.instance = new PreviousPaper();\r\n                return PreviousPaper.instance;\r\n        }\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public CharSequence getPageTitle(int position) {\r\n        return super.getPageTitle(position);\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return totalTabs;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/MyAdapter.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/MyAdapter.java	(date 1611378061148)
@@ -11,7 +11,6 @@
     public MyAdapter(FragmentManager fm, int totalTabs) {
         super(fm,totalTabs);
         this.totalTabs = totalTabs;
-        System.out.println("java");
     }
 
 
Index: app/src/main/java/com/example/itifighter/PaytmPaymentpp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.paytm.pgsdk.PaytmOrder;\r\nimport com.paytm.pgsdk.PaytmPaymentTransactionCallback;\r\nimport com.paytm.pgsdk.TransactionManager;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\nimport java.util.Set;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class PaytmPaymentpp extends AppCompatActivity {\r\n    private final String Mid = \"ahKvVJ36172797507439\";\r\n    private final String Uid = FirebaseAuth.getInstance().getUid();\r\n    private String OrderId;\r\n    private String Mobile;\r\n    private String Email;\r\n    private String txnAmount;\r\n    private String firstName;\r\n    private String currentSubject;\r\n    private String currentChapter;\r\n    private final String TAG = \"PaytmPayment\";\r\n    private String currentSection;\r\n    private ProgressDialog dialog;\r\n\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_paytm_payment_pp);\r\n        Intent intent = getIntent();\r\n        // get Data from intent\r\n        final String pdfPrice = intent.getStringExtra(\"price\");\r\n        final String Discount = intent.getStringExtra(\"discount\");\r\n        currentSection      = intent.getStringExtra(\"curruntPdf\");\r\n        currentSubject      = intent.getStringExtra(\"currentSubject\");\r\n        currentChapter      = intent.getStringExtra(\"currentChapter\");\r\n        String pdfName       = intent.getStringExtra(\"titleName\");\r\n        dialog = new ProgressDialog(this,R.style.AppCompatAlertDialogStyle);\r\n        dialog.setMessage(\"Loading...\");\r\n        dialog.setCancelable(false);\r\n        //get Instance of layout and set data in main view\r\n        TextView title = findViewById(R.id.pdfTitle),Price = findViewById(R.id.pdfPrice);\r\n        title.setText(pdfName);\r\n        Price.setText(\"\\u20B9 \" + pdfPrice);\r\n        Price.setTextColor(Color.BLACK);\r\n        final TextView subPdfPrice = findViewById(R.id.sub_pdfPrice),subPdfDiscount = findViewById(R.id.sub_pdfDiscountPrice),finalPrice = findViewById(R.id.finalpdfPrice);\r\n        subPdfPrice.setText(\"\\u20B9 \"+pdfPrice);\r\n        subPdfDiscount.setText(\"- \\u20B9 \"+getDiscountedPrice(pdfPrice,Discount));\r\n        txnAmount = getFinalPrice(pdfPrice,Discount);\r\n        finalPrice.setText(txnAmount);\r\n        Button cancel = findViewById(R.id.cancelx), payx = findViewById(R.id.payButtonpp);\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                AreYouSureCancel();\r\n            }\r\n        });\r\n        payx.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.show();\r\n                if (txnAmount.equals(\"\")) {\r\n                    dialog.dismiss();\r\n                    Toast.makeText(PaytmPaymentpp.this,\"Amount is mandatory\",Toast.LENGTH_SHORT).show();\r\n                }\r\n                else getToken();\r\n            }\r\n        });\r\n    }\r\n\r\n    private String getDiscountedPrice(String pdfPrice, String discount) {\r\n        return String.valueOf((Double.parseDouble(pdfPrice)*Double.parseDouble(discount))/100);\r\n    }\r\n\r\n    private String getFinalPrice(String pdfPrice, String discount) {\r\n        double price1 = Double.parseDouble(pdfPrice),discount1 = Double.parseDouble(getDiscountedPrice(pdfPrice,discount));\r\n        return  String.valueOf(price1-discount1);\r\n    }\r\n\r\n    private void getToken() {\r\n        ServiceWrapper serviceWrapper = new ServiceWrapper();\r\n        Call<Token_Res> call = serviceWrapper.getTokenCall(\"12345\", Mid, OrderId, txnAmount, Uid, Email, Mobile, firstName);\r\n        call.enqueue(new Callback<Token_Res>() {\r\n            @Override\r\n            public void onResponse(@NonNull Call<Token_Res> call, @NonNull Response<Token_Res> response) {\r\n                try {\r\n                    if (response.isSuccessful() && response.body() != null) {\r\n                        if (!response.body().getBody().getTxnToken().equals(\"\")) {\r\n                            startPaytmPayment(response.body().getBody().getTxnToken());\r\n                        } else {\r\n                            dialog.dismiss();\r\n                            Log.e(TAG, \"token status false\");\r\n                            Toast.makeText(PaytmPaymentpp.this,\"token status false\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    else{\r\n                        Toast.makeText(PaytmPaymentpp.this,\"Server Response failed\",Toast.LENGTH_SHORT).show();\r\n                        dialog.dismiss();\r\n                    }\r\n                } catch (Exception e) {\r\n                    dialog.dismiss();\r\n                    Log.e(TAG, \"Error in token Response\" + e.toString());\r\n                    Toast.makeText(PaytmPaymentpp.this,\"Error in token Response\" + e.toString(),Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n            @Override\r\n            public void onFailure(@NonNull Call<Token_Res> call, @NonNull Throwable t) {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \" response error \" + t.toString());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void startPaytmPayment(String txnToken) {\r\n        // for test mode use it\r\n        String host = \"https://securegw-stage.paytm.in/\";\r\n        // for production mode use it //  String host = \"https://securegw.paytm.in/\";\r\n        String callBackUrl = host+\"theia/paytmCallback?ORDER_ID=\" + OrderId;\r\n        PaytmOrder paytmOrder = new PaytmOrder(OrderId, Mid, txnToken, txnAmount, callBackUrl);\r\n        TransactionManager transactionManager = new TransactionManager(paytmOrder, new PaytmPaymentTransactionCallback() {\r\n\r\n            @Override\r\n            public void onTransactionResponse(Bundle bundle) {\r\n                setTransactionDetails(bundle);\r\n            }\r\n\r\n            @Override\r\n            public void networkNotAvailable() {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \"network not available \");\r\n                Toast.makeText(PaytmPaymentpp.this,\"network not available\",Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void clientAuthenticationFailed(String s) {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \"Clientauth \" + s);\r\n                Toast.makeText(PaytmPaymentpp.this,\"Clientauth \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void someUIErrorOccurred(String s) {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \" UI error \" + s);\r\n                Toast.makeText(PaytmPaymentpp.this,\" UI error \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onErrorLoadingWebPage(int i, String s, String s1) {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \" error loading web \" + s + \"--\" + s1);\r\n                Toast.makeText(PaytmPaymentpp.this,\" error loading web \" + s + \"--\" + s1,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onBackPressedCancelTransaction() {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \"backPress \");\r\n                Toast.makeText(PaytmPaymentpp.this,\"backPress \",Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onTransactionCancel(String s, Bundle bundle) {\r\n                dialog.dismiss();\r\n                Log.e(TAG, \" transaction cancel \" + s);\r\n                Toast.makeText(PaytmPaymentpp.this,\" transaction cancel \" + s,Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n        });\r\n\r\n        transactionManager.setShowPaymentUrl(host + \"theia/api/v1/showPaymentPage\");\r\n        transactionManager.startTransaction(this, 0);\r\n    }\r\n    private void getDetails() {\r\n        OrderId = Genrate();\r\n        FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                .addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        assert value != null;\r\n                        Email = value.getString(\"Email\");\r\n                        Mobile = value.getString(\"Mobile\");\r\n                        firstName = value.getString(\"Name\");\r\n                    }\r\n                });\r\n        dialog.dismiss();\r\n    }\r\n    private void AreYouSureCancel() {\r\n        AlertDialog.Builder alert = new AlertDialog.Builder(this);\r\n        alert.setMessage(\"Are you sure to Cancel this Payment ?\")\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        finish();\r\n                    }\r\n                }).setNegativeButton(\"No\", null);\r\n        AlertDialog alert1 = alert.create();\r\n        alert1.show();\r\n    }\r\n\r\n    private void setTransactionDetails(final Bundle bundle) {\r\n        try {\r\n            dialog.dismiss();\r\n            DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                    .collection(\"transaction\").document(\"pp\").collection(\"TXNID\")\r\n                    .document(Objects.requireNonNull(bundle.getString(\"TXNID\")));\r\n            Map<String,String> map = new HashMap<>();\r\n            Set<String> d = bundle.keySet();\r\n            for (String key : d) map.put(key, bundle.getString(key));\r\n            map.put(\"currentSubject\",currentSubject);\r\n            map.put(\"currentChapter\",currentChapter);\r\n            map.put(\"curruntPdf\",currentSection);\r\n            reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void aVoid) {\r\n                    if(Objects.equals(bundle.getString(\"STATUS\"), \"TXN_SUCCESS\")) setSuccessProductDetails();\r\n                    else{ Toast.makeText(PaytmPaymentpp.this,\"Transaction failed\",Toast.LENGTH_SHORT).show(); }\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(PaytmPaymentpp.this,\"Transaction insertion failure\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n        catch (Exception e){\r\n            e.printStackTrace();\r\n            Toast.makeText(PaytmPaymentpp.this,\"Exception in data saving\",Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n    private void setSuccessProductDetails() {\r\n        try {\r\n            final DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(Uid)\r\n                    .collection(\"Products\").document(\"pp\").collection(\"ProductId\").document(currentSection);\r\n            final Map<String, String> map = new HashMap<>();\r\n            reference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                    map.put(\"currentSubject\",currentSubject);\r\n                    map.put(\"currentChapter\",currentChapter);\r\n                    map.put(\"status\",\"1\");\r\n                    reference.set(map).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            Toast.makeText(PaytmPaymentpp.this,\"Transaction successfully done\",Toast.LENGTH_SHORT).show();\r\n                            finish();\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(PaytmPaymentpp.this,\"contact customer support\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(PaytmPaymentpp.this,\"Failure product transaction\",Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n            Toast.makeText(PaytmPaymentpp.this,\"Exception in setSuccessProductDetails\",Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        int activityRequestCode = 0;\r\n        if (requestCode == activityRequestCode) {\r\n            Bundle bundle = data.getExtras();\r\n            assert bundle != null;\r\n            for (String key : bundle.keySet()) {\r\n                Log.e(TAG, key + \" : \" + (bundle.get(key) != null ? bundle.get(key) : \"NULL\"));\r\n            }\r\n            Log.e(TAG, \" data \" + data.getStringExtra(\"nativeSdkForMerchantMessage\"));\r\n            Toast.makeText(this, data.getStringExtra(\"nativeSdkForMerchantMessage\")\r\n                    + data.getStringExtra(\"response\"), Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            Log.e(TAG, \" payment failed\");\r\n        }\r\n    }\r\n\r\n    public String Genrate() {\r\n        Calendar c = Calendar.getInstance();\r\n        @SuppressLint(\"SimpleDateFormat\") SimpleDateFormat df = new SimpleDateFormat(\"ddMMyyhhmmss\");\r\n        String date = df.format(c.getTime());\r\n        Random rand = new Random();\r\n        int min = 1000, max = 9999;\r\n        int randomNum = rand.nextInt((max - min) + 1) + min;\r\n        return date + randomNum;\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        dialog.show();\r\n        getDetails();\r\n    }\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        Runtime.getRuntime().gc();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        Runtime.getRuntime().gc();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        AreYouSureCancel();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/PaytmPaymentpp.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/PaytmPaymentpp.java	(date 1610268425446)
@@ -140,6 +140,7 @@
             @Override
             public void onFailure(@NonNull Call<Token_Res> call, @NonNull Throwable t) {
                 dialog.dismiss();
+                Toast.makeText(PaytmPaymentpp.this," response error " + t.toString(),Toast.LENGTH_LONG).show();
                 Log.e(TAG, " response error " + t.toString());
             }
         });
Index: app/src/main/java/com/example/itifighter/ServiceWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\n\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.logging.HttpLoggingInterceptor;\r\nimport paytm.assist.easypay.easypay.BuildConfig;\r\nimport retrofit2.Call;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class ServiceWrapper {\r\n\r\n    private ServiceInterface mServiceInterface;\r\n\r\n    public ServiceWrapper() {\r\n        mServiceInterface = getRetrofit().create(ServiceInterface.class);\r\n    }\r\n\r\n    public Retrofit getRetrofit() {\r\n        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\r\n        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n        OkHttpClient mOkHttpClient = null;\r\n        OkHttpClient.Builder builder = new OkHttpClient.Builder();\r\n        builder.connectTimeout(1201, TimeUnit.SECONDS);\r\n        builder.readTimeout(901, TimeUnit.SECONDS);\r\n\r\n      if (BuildConfig.DEBUG) {\r\n//            HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\r\n            loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n            builder.addInterceptor(loggingInterceptor);\r\n        }\r\n\r\n        mOkHttpClient = builder.build();\r\n        Gson gson = new GsonBuilder().setLenient().create();\r\n        return new Retrofit.Builder()\r\n                .baseUrl(\"https://noobworm.000webhostapp.com/PaytmPayment/\")\r\n                .addConverterFactory(GsonConverterFactory.create(gson))\r\n                .client(mOkHttpClient)\r\n                .build();\r\n    }\r\n\r\n    public Call<Token_Res> getTokenCall(String code, String mid, String order_id, String amount,String CustId,String Email,String Mobile,String firstName) {\r\n        return mServiceInterface.generateTokenCall(\r\n                convertPlainString(code), convertPlainString(mid), convertPlainString(order_id)\r\n                , convertPlainString(amount), convertPlainString(CustId),convertPlainString(Email),convertPlainString(Mobile),convertPlainString(firstName));\r\n    }\r\n    // convert aa param into plain text\r\n    public RequestBody convertPlainString(String data){\r\n        return RequestBody.create(MediaType.parse(\"text/plain\"), data);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/ServiceWrapper.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/ServiceWrapper.java	(date 1610268669963)
@@ -16,7 +16,7 @@
 
 public class ServiceWrapper {
 
-    private ServiceInterface mServiceInterface;
+    private final ServiceInterface mServiceInterface;
 
     public ServiceWrapper() {
         mServiceInterface = getRetrofit().create(ServiceInterface.class);
@@ -54,6 +54,5 @@
     public RequestBody convertPlainString(String data){
         return RequestBody.create(MediaType.parse("text/plain"), data);
     }
-
 }
 
Index: app/src/main/res/layout/activity_test_instructions.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"match_parent\"\r\nandroid:background=\"@drawable/bg_login\"\r\nandroid:orientation=\"vertical\"\r\nandroid:weightSum=\"100\"\r\ntools:context=\".TestInstructionsActivity\">\r\n\r\n<LinearLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"10sp\"\r\n    android:orientation=\"horizontal\"\r\n    android:background=\"@color/white\"\r\n    android:paddingStart=\"10dp\"\r\n    tools:ignore=\"RtlSymmetry,UseCompoundDrawables\">\r\n    <ImageView\r\n        android:layout_width=\"20sp\"\r\n        android:layout_height=\"20sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:src=\"@drawable/checked\"\r\n        android:contentDescription=\"@string/todo\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/TestTitleIP\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textColor=\"@color/black\"\r\n        android:textStyle=\"bold\"\r\n        android:gravity=\"start\"\r\n        android:padding=\"10sp\"\r\n        app:drawableRightCompat=\"@drawable/cross\"\r\n        android:textSize=\"20sp\"/>\r\n\r\n</LinearLayout>\r\n\r\n<LinearLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\"\r\n    android:padding=\"10sp\"\r\n    android:gravity=\"center\">\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:gravity=\"center\"\r\n        android:layout_margin=\"10sp\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@drawable/rounded_text\">\r\n        <TextView\r\n            android:id=\"@+id/TQues\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginTop=\"@dimen/dimen_15dp\"\r\n            android:textColor=\"@color/black\"\r\n            tools:ignore=\"SmallSp\"/>\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/quetions\"\r\n            android:textSize=\"15sp\"\r\n            android:layout_marginBottom=\"@dimen/dimen_15dp\"\r\n            android:textColor=\"@color/black_overlay\"\r\n            tools:ignore=\"SmallSp\"/>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:gravity=\"center\"\r\n        android:layout_margin=\"10sp\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@drawable/rounded_text\">\r\n        <TextView\r\n            android:id=\"@+id/TMarks\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginTop=\"@dimen/dimen_15dp\"\r\n            android:textColor=\"@color/black\"\r\n            tools:ignore=\"SmallSp\"/>\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/marks\"\r\n            android:textSize=\"15sp\"\r\n            android:layout_marginBottom=\"@dimen/dimen_15dp\"\r\n            android:textColor=\"@color/black_overlay\"\r\n            tools:ignore=\"SmallSp\"/>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:gravity=\"center\"\r\n        android:layout_margin=\"10sp\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@drawable/rounded_text\">\r\n        <TextView\r\n            android:id=\"@+id/TMin\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginTop=\"@dimen/dimen_15dp\"\r\n            android:textColor=\"@color/black\"\r\n            tools:ignore=\"SmallSp\"/>\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/minutes\"\r\n            android:textSize=\"15sp\"\r\n            android:layout_marginBottom=\"@dimen/dimen_15dp\"\r\n            android:textColor=\"@color/black_overlay\"\r\n            tools:ignore=\"SmallSp\"/>\r\n    </LinearLayout>\r\n</LinearLayout>\r\n<TextView\r\n    android:id=\"@+id/examInstruction\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginTop=\"10dp\"\r\n    android:layout_marginBottom=\"10dp\"\r\n    android:layout_marginStart=\"20dp\"\r\n    android:layout_marginEnd=\"20dp\"\r\n    android:background=\"@color/white\"\r\n    android:padding=\"5dp\"\r\n    android:gravity=\"center\"\r\n    android:textColor=\"@color/dark_blue\"\r\n    android:textStyle=\"bold\"\r\n    android:text=\"@string/instruction\"\r\n    android:textSize=\"20sp\"/>\r\n\r\n<ImageView\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"300dp\"\r\n    android:layout_marginTop=\"10dp\"\r\n    android:layout_marginStart=\"20dp\"\r\n    android:layout_marginEnd=\"20dp\"\r\n    android:scrollbars=\"vertical\"\r\n    android:isScrollContainer=\"true\"\r\n    android:nestedScrollingEnabled=\"true\"\r\n    android:src=\"@drawable/self\"\r\n    android:background=\"@color/white\"\r\n    android:contentDescription=\"@string/todo\" />\r\n<LinearLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_gravity=\"bottom\"\r\n    android:gravity=\"bottom\"\r\n    android:orientation=\"vertical\">\r\n    <CheckBox\r\n        android:id=\"@+id/InsCB\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"20dp\"\r\n        android:text=\"@string/i_have_read_all_instructions\"\r\n        android:textSize=\"14sp\"/>\r\n    <Button\r\n        android:id=\"@+id/startExam\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"bottom\"\r\n        android:layout_marginStart=\"@dimen/dimen_20dp\"\r\n        android:layout_marginEnd=\"@dimen/dimen_20dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:background=\"@color/startblue\"\r\n        android:onClick=\"BeginTest\"\r\n        android:text=\"@string/start\"\r\n        android:textColor=\"@color/white\"\r\n        />\r\n</LinearLayout>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_test_instructions.xml	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/res/layout/activity_test_instructions.xml	(date 1610890245404)
@@ -123,13 +123,12 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_marginTop="10dp"
-    android:layout_marginBottom="10dp"
     android:layout_marginStart="20dp"
     android:layout_marginEnd="20dp"
-    android:background="@color/white"
-    android:padding="5dp"
+    android:background="#FEFEBB"
+    android:padding="10dp"
     android:gravity="center"
-    android:textColor="@color/dark_blue"
+    android:textColor="@color/black"
     android:textStyle="bold"
     android:text="@string/instruction"
     android:textSize="20sp"/>
@@ -137,7 +136,6 @@
 <ImageView
     android:layout_width="match_parent"
     android:layout_height="300dp"
-    android:layout_marginTop="10dp"
     android:layout_marginStart="20dp"
     android:layout_marginEnd="20dp"
     android:scrollbars="vertical"
@@ -158,6 +156,7 @@
         android:layout_height="wrap_content"
         android:layout_marginStart="20dp"
         android:text="@string/i_have_read_all_instructions"
+        android:layout_marginEnd="20dp"
         android:textSize="14sp"/>
     <Button
         android:id="@+id/startExam"
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.1'\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven {\r\n            url \"https://artifactory.paytm.in/libs-release-local\"\r\n        }\r\n    }\r\n\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ build.gradle	(date 1611374840818)
@@ -5,7 +5,7 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.1.1'
+        classpath 'com.android.tools.build:gradle:4.1.2'
         classpath 'com.google.gms:google-services:4.3.3'
 
         // NOTE: Do not place your application dependencies here; they belong
Index: app/src/main/java/com/example/itifighter/ui/chat/ChatMessageRecyclerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itifighter.ui.chat;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.itifighter.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\npublic class ChatMessageRecyclerAdapter extends RecyclerView.Adapter<ChatMessageRecyclerAdapter.ViewHolder>{\r\n\r\n    private ArrayList<ChatMessage> mMessages;\r\n    private Context mContext;\r\n    public ChatMessageRecyclerAdapter(ArrayList<ChatMessage> messages,\r\n                                      Context context) {\r\n        this.mMessages = messages;\r\n        this.mContext = context;\r\n    }\r\n\r\n\r\n    public int getItemViewType(int position){\r\n        if(Objects.equals(FirebaseAuth.getInstance().getUid(), mMessages.get(position).getUser().getUser_id()))return 0;\r\n        else return 1;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view0 = LayoutInflater.from(parent.getContext()).inflate(R.layout.my_message, parent, false);\r\n        View view1 = LayoutInflater.from(parent.getContext()).inflate(R.layout.their_message, parent, false);\r\n        if (viewType == 0) return new ViewHolder(view0);\r\n        else return new ViewHolder(view1);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder holder, final int position) {\r\n        if(!Objects.equals(FirebaseAuth.getInstance().getUid(), mMessages.get(position).getUser().getUser_id())){\r\n            holder.username.setTextColor(ContextCompat.getColor(mContext, R.color.blue2));\r\n            holder.username.setText(mMessages.get(position).getUser().getUsername());\r\n        }\r\n\r\n        holder.message.setText(mMessages.get(position).getMessage());\r\n            holder.message.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick (View view){ try{\r\n                        @SuppressLint(\"SimpleDateFormat\") SimpleDateFormat date = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");\r\n                        String x = date.format(new Date(mMessages.get(position).getTimestamp().toString()));\r\n                    if (holder.timestamp.getText() == \"\") holder.timestamp.setText(x);\r\n                    else holder.timestamp.setText(\"\");\r\n                }catch(Exception e){System.out.print(e.getMessage());}}\r\n            });\r\n        }\r\n\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mMessages.size();\r\n    }\r\n\r\n    public static class ViewHolder extends RecyclerView.ViewHolder\r\n    {\r\n        TextView message, username,timestamp;\r\n        public ViewHolder(View itemView) {\r\n            super(itemView);\r\n            message = itemView.findViewById(R.id.chat_message_message);\r\n            username = itemView.findViewById(R.id.chat_message_username);\r\n            timestamp = itemView.findViewById(R.id.messsage_timestamp);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/itifighter/ui/chat/ChatMessageRecyclerAdapter.java	(revision 784ec1e1a2738ca4479788d276f15f0adda387a3)
+++ app/src/main/java/com/example/itifighter/ui/chat/ChatMessageRecyclerAdapter.java	(date 1610195956259)
@@ -21,10 +21,10 @@
 
 public class ChatMessageRecyclerAdapter extends RecyclerView.Adapter<ChatMessageRecyclerAdapter.ViewHolder>{
 
-    private ArrayList<ChatMessage> mMessages;
-    private Context mContext;
-    public ChatMessageRecyclerAdapter(ArrayList<ChatMessage> messages,
-                                      Context context) {
+    private final ArrayList<ChatMessage> mMessages;
+    private final Context mContext;
+
+    public ChatMessageRecyclerAdapter(ArrayList<ChatMessage> messages, Context context) {
         this.mMessages = messages;
         this.mContext = context;
     }
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_18-12-2020_18_13__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_18-12-2020_18_13__Default_Changelist_.xml
